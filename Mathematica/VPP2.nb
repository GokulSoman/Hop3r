(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    590317,      11969]
NotebookOptionsPosition[    584971,      11796]
NotebookOutlinePosition[    585310,      11811]
CellTagsIndexPosition[    585267,      11808]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"Quit", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.736511953582239*^9, 3.7365119550550003`*^9}}],

Cell[CellGroupData[{

Cell["\<\
Dynamic model of spring-loaded double pendulum with virtual pivot point (VPP)\
\
\>", "Chapter",
 CellChangeTimes->{{3.7365121103704233`*^9, 3.736512146008348*^9}}],

Cell["System parameters: g,m, J, k, lo, d, and r", "Subchapter",
 CellChangeTimes->{{3.736512453104493*^9, 3.7365124886337833`*^9}, {
  3.736513961402978*^9, 3.736513961595066*^9}}],

Cell[CellGroupData[{

Cell["Generalized coordinates: \[Alpha], \[Theta], and l", "Subchapter",
 CellChangeTimes->{{3.7365122171025457`*^9, 3.7365122287372828`*^9}, 
   3.736599878357912*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Alpha]", "=", 
   RowBox[{"q1", "[", "t", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]", "=", 
   RowBox[{"q2", "[", "t", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"l", "=", 
    RowBox[{"q3", "[", "t", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Other", " ", "coordinates", " ", "in", " ", "terms", " ", "of", " ", 
    "q"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "l"}], " ", 
     RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", 
    RowBox[{"d", " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"y", "=", 
    RowBox[{
     RowBox[{"l", " ", 
      RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "+", 
     RowBox[{"d", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xVPP", "=", 
   RowBox[{"x", "-", 
    RowBox[{"r", " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"yVPP", "=", 
    RowBox[{"y", "+", 
     RowBox[{"r", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"ArcCos", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["l", "2"], "+", 
        SuperscriptBox["xVPP", "2"], "+", 
        SuperscriptBox["yVPP", "2"], "-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"r", "+", "d"}], ")"}], "2"]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", "l", " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          SuperscriptBox["xVPP", "2"], "+", 
          SuperscriptBox["yVPP", "2"]}], "]"}]}], ")"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tan\[Gamma]", "=", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{"Tan", "[", "\[Gamma]", "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Doesn", "'"}], "t", " ", "fully", " ", "simplify", " ", "for", 
    " ", "some", " ", 
    RowBox[{"reason", "!"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tan\[Gamma]", "=", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"r", "+", "d"}], ")"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Alpha]", "-", "\[Theta]"}], "]"}]}], 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"r", "+", "d"}], ")"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Alpha]", "-", "\[Theta]"}], "]"}]}], "+", "l"}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tan\[Gamma]approx", "=", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"r", "+", "d"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"\[Alpha]", "-", "\[Theta]"}], ")"}]}], 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"r", "+", "d"}], ")"}], " ", "*", 
      RowBox[{"(", 
       RowBox[{"1", "-", "\[Alpha]", "+", "\[Theta]"}], ")"}]}], "+", 
     "l"}]]}], ";"}]}], "Input",
 CellChangeTimes->{{3.736511964397902*^9, 3.736512006363255*^9}, {
  3.736512053998293*^9, 3.736512075743095*^9}, {3.736513122258081*^9, 
  3.736513158179344*^9}, {3.7365133221999474`*^9, 3.7365133314623747`*^9}, {
  3.736513502504053*^9, 3.7365135517924423`*^9}, {3.736517757224991*^9, 
  3.736517833833074*^9}, {3.736532883789879*^9, 3.7365329159772463`*^9}, {
  3.736532947032344*^9, 3.73653296098657*^9}, {3.7365330311446342`*^9, 
  3.736533142464574*^9}, {3.736533299324107*^9, 3.7365333791531477`*^9}, {
  3.736541326333167*^9, 3.736541365621272*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generalized velocities: d\[Alpha]/dt, d\[Theta]/dt, and dl/dt", \
"Subchapter",
 CellChangeTimes->{{3.7365121813689413`*^9, 3.7365122316693296`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Alpha]dot", "=", 
   RowBox[{"D", "[", 
    RowBox[{"\[Alpha]", ",", "t"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]dot", "=", 
   RowBox[{"D", "[", 
    RowBox[{"\[Theta]", ",", "t"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ldot", "=", 
    RowBox[{"D", "[", 
     RowBox[{"l", ",", "t"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Other", " ", "velocities", " ", "in", " ", "terms", " ", "of", " ", "q"}],
    "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xdot", "=", 
   RowBox[{"D", "[", 
    RowBox[{"x", ",", "t"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ydot", "=", 
   RowBox[{"D", "[", 
    RowBox[{"y", ",", "t"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.736512251146649*^9, 3.736512272641068*^9}, {
  3.7365124085014477`*^9, 3.736512421140547*^9}, {3.7365131648388033`*^9, 
  3.7365131885768023`*^9}, {3.73651358492453*^9, 3.736513601878169*^9}, {
  3.7365146181000443`*^9, 3.736514620406333*^9}, {3.736517606858632*^9, 
  3.736517609672086*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Lagrangian", "Subchapter",
 CellChangeTimes->{{3.7365128659338083`*^9, 3.736512869515006*^9}, 
   3.736512941369836*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"KE", "=", 
    RowBox[{"First", "[", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], "m", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "xdot", "}"}], ",", 
            RowBox[{"{", "ydot", "}"}]}], "}"}], "\[Transpose]"}], ".", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "xdot", "}"}], ",", 
           RowBox[{"{", "ydot", "}"}]}], "}"}]}]}], "+", 
       RowBox[{
        FractionBox["1", "2"], "J", " ", 
        SuperscriptBox["\[Theta]dot", "2"]}]}], "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"kinetic", " ", "energy"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PE", "=", 
    RowBox[{
     RowBox[{"m", " ", "g", " ", "y"}], "+", 
     RowBox[{
      FractionBox["1", "2"], "k", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"l", "-", "lo"}], ")"}], "2"]}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"potential", " ", "energy"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", "=", 
   RowBox[{"KE", "-", "PE"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.736512954997672*^9, 3.736512955859831*^9}, {
  3.7365130638371*^9, 3.7365131186536016`*^9}, {3.736513691507186*^9, 
  3.736513833454896*^9}, {3.7365138732866592`*^9, 3.736513887302511*^9}, {
  3.7365139699332037`*^9, 3.736514006378216*^9}, {3.736514104908833*^9, 
  3.73651413348672*^9}, {3.736595833310151*^9, 3.736595858104433*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Euler-Lagrange equations", "Subchapter",
 CellChangeTimes->{{3.736514457486768*^9, 3.736514461544826*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"EL\[Alpha]", "=", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"L", ",", "\[Alpha]dot"}], "]"}], ",", "t"}], "]"}], "-", 
      RowBox[{"D", "[", 
       RowBox[{"L", ",", "\[Alpha]"}], "]"}]}], "]"}], "\[Equal]", "0"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EL\[Theta]", "=", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"L", ",", "\[Theta]dot"}], "]"}], ",", "t"}], "]"}], "-", 
      RowBox[{"D", "[", 
       RowBox[{"L", ",", "\[Theta]"}], "]"}]}], "]"}], "\[Equal]", 
    "\[Tau]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ELl", "=", 
    RowBox[{
     RowBox[{"FullSimplify", "[", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{"L", ",", "ldot"}], "]"}], ",", "t"}], "]"}], "-", 
       RowBox[{"D", "[", 
        RowBox[{"L", ",", "l"}], "]"}]}], "]"}], "\[Equal]", "0"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fx", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"FullSimplify", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"Solve", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"EL\[Alpha]", ",", "EL\[Theta]", ",", "ELl"}], "}"}], ",", 
          
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"q1", "''"}], "[", "t", "]"}], ",", 
            RowBox[{
             RowBox[{"q2", "''"}], "[", "t", "]"}], ",", 
            RowBox[{
             RowBox[{"q3", "''"}], "[", "t", "]"}]}], "}"}]}], "]"}], "]"}], 
       "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"q1", "[", "t", "]"}], "\[Rule]", "a"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"q1", "'"}], "[", "t", "]"}], "\[Rule]", "adot"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"q1", "''"}], "[", "t", "]"}], "\[Rule]", "addot"}], ",", 
      RowBox[{
       RowBox[{"q2", "[", "t", "]"}], "\[Rule]", "th"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"q2", "'"}], "[", "t", "]"}], "\[Rule]", "thdot"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"q2", "''"}], "[", "t", "]"}], "\[Rule]", "thddot"}], ",", 
      RowBox[{
       RowBox[{"q3", "[", "t", "]"}], "\[Rule]", "ell"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"q3", "'"}], "[", "t", "]"}], "\[Rule]", "elldot"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"q3", "''"}], "[", "t", "]"}], "\[Rule]", "ellddot"}]}], 
     "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gx", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"FullSimplify", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"Solve", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"EL\[Alpha]", ",", "EL\[Theta]", ",", "ELl"}], "}"}], ",", 
          
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"q1", "''"}], "[", "t", "]"}], ",", 
            RowBox[{
             RowBox[{"q2", "''"}], "[", "t", "]"}], ",", 
            RowBox[{
             RowBox[{"q3", "''"}], "[", "t", "]"}]}], "}"}]}], "]"}], "]"}], 
       "[", 
       RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"q1", "[", "t", "]"}], "\[Rule]", "a"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"q1", "'"}], "[", "t", "]"}], "\[Rule]", "adot"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"q1", "''"}], "[", "t", "]"}], "\[Rule]", "addot"}], ",", 
      RowBox[{
       RowBox[{"q2", "[", "t", "]"}], "\[Rule]", "th"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"q2", "'"}], "[", "t", "]"}], "\[Rule]", "thdot"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"q2", "''"}], "[", "t", "]"}], "\[Rule]", "thddot"}], ",", 
      RowBox[{
       RowBox[{"q3", "[", "t", "]"}], "\[Rule]", "ell"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"q3", "'"}], "[", "t", "]"}], "\[Rule]", "elldot"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"q3", "''"}], "[", "t", "]"}], "\[Rule]", "ellddot"}]}], 
     "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hx", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"FullSimplify", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"Solve", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"EL\[Alpha]", ",", "EL\[Theta]", ",", "ELl"}], "}"}], ",", 
          
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"q1", "''"}], "[", "t", "]"}], ",", 
            RowBox[{
             RowBox[{"q2", "''"}], "[", "t", "]"}], ",", 
            RowBox[{
             RowBox[{"q3", "''"}], "[", "t", "]"}]}], "}"}]}], "]"}], "]"}], 
       "[", 
       RowBox[{"[", "3", "]"}], "]"}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"q1", "[", "t", "]"}], "\[Rule]", "a"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"q1", "'"}], "[", "t", "]"}], "\[Rule]", "adot"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"q1", "''"}], "[", "t", "]"}], "\[Rule]", "addot"}], ",", 
      RowBox[{
       RowBox[{"q2", "[", "t", "]"}], "\[Rule]", "th"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"q2", "'"}], "[", "t", "]"}], "\[Rule]", "thdot"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"q2", "''"}], "[", "t", "]"}], "\[Rule]", "thddot"}], ",", 
      RowBox[{
       RowBox[{"q3", "[", "t", "]"}], "\[Rule]", "ell"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"q3", "'"}], "[", "t", "]"}], "\[Rule]", "elldot"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"q3", "''"}], "[", "t", "]"}], "\[Rule]", "ellddot"}]}], 
     "}"}]}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.736514483472488*^9, 3.7365146903368053`*^9}, {
   3.736514729074404*^9, 3.7365147961579523`*^9}, {3.7365148683355217`*^9, 
   3.736514875599053*^9}, {3.736514938071732*^9, 3.736514988823402*^9}, {
   3.7365150306999197`*^9, 3.736515257311194*^9}, {3.736515658589368*^9, 
   3.736515856198098*^9}, {3.736515949417039*^9, 3.736515966387885*^9}, {
   3.73651617655005*^9, 3.736516177407366*^9}, 3.736516234367362*^9, {
   3.736518239663378*^9, 3.736518347928886*^9}, {3.736518382524951*^9, 
   3.7365184704597597`*^9}, {3.736518871543274*^9, 3.736518901456153*^9}, {
   3.736520057293104*^9, 3.736520151297258*^9}, {3.7365206660687103`*^9, 
   3.7365207910919533`*^9}, {3.736521612379187*^9, 3.736521689985323*^9}, {
   3.736521723680026*^9, 3.736521846745336*^9}, {3.7365228439073*^9, 
   3.736522845341505*^9}, {3.7365228932785807`*^9, 3.736522932867875*^9}, {
   3.736522980590983*^9, 3.736523223829883*^9}, {3.7365349770448008`*^9, 
   3.7365350325388737`*^9}, {3.736543612060815*^9, 3.736543612877204*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Readable", " ", "output"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Print", "[", "\"\<Equations of motion:\>\"", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<\!\(\*OverscriptBox[\(\[Alpha]\), \(\[DoubleDot]\)]\) = \>\"", ",", 
      
      RowBox[{"FullSimplify", "[", 
       RowBox[{"fx", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"a", "\[Rule]", "\"\<\[Alpha]\>\""}], ",", 
          RowBox[{
          "adot", "\[Rule]", 
           "\"\<\!\(\*OverscriptBox[\(\[Alpha]\), \(.\)]\)\>\""}], ",", 
          RowBox[{"th", "\[Rule]", "\"\<\[Theta]\>\""}], ",", 
          RowBox[{
          "thdot", "\[Rule]", 
           "\"\<\!\(\*OverscriptBox[\(\[Theta]\), \(.\)]\)\>\""}], ",", 
          RowBox[{"ell", "\[Rule]", "\"\<l\>\""}], ",", 
          RowBox[{
          "elldot", "\[Rule]", 
           "\"\<\!\(\*OverscriptBox[\(l\), \(.\)]\)\>\""}]}], "}"}]}], 
       "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<\!\(\*OverscriptBox[\(\[Theta]\), \(\[DoubleDot]\)]\) = \>\"", ",", 
      
      RowBox[{"FullSimplify", "[", 
       RowBox[{"gx", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"a", "\[Rule]", "\"\<\[Alpha]\>\""}], ",", 
          RowBox[{
          "adot", "\[Rule]", 
           "\"\<\!\(\*OverscriptBox[\(\[Alpha]\), \(.\)]\)\>\""}], ",", 
          RowBox[{"th", "\[Rule]", "\"\<\[Theta]\>\""}], ",", 
          RowBox[{
          "thdot", "\[Rule]", 
           "\"\<\!\(\*OverscriptBox[\(\[Theta]\), \(.\)]\)\>\""}], ",", 
          RowBox[{"ell", "\[Rule]", "\"\<l\>\""}], ",", 
          RowBox[{
          "elldot", "\[Rule]", 
           "\"\<\!\(\*OverscriptBox[\(l\), \(.\)]\)\>\""}]}], "}"}]}], 
       "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<\!\(\*OverscriptBox[\(l\), \(\[DoubleDot]\)]\) = \>\"", ",", 
      RowBox[{"FullSimplify", "[", 
       RowBox[{"hx", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"a", "\[Rule]", "\"\<\[Alpha]\>\""}], ",", 
          RowBox[{
          "adot", "\[Rule]", 
           "\"\<\!\(\*OverscriptBox[\(\[Alpha]\), \(.\)]\)\>\""}], ",", 
          RowBox[{"th", "\[Rule]", "\"\<\[Theta]\>\""}], ",", 
          RowBox[{
          "thdot", "\[Rule]", 
           "\"\<\!\(\*OverscriptBox[\(\[Theta]\), \(.\)]\)\>\""}], ",", 
          RowBox[{"ell", "\[Rule]", "\"\<l\>\""}], ",", 
          RowBox[{
          "elldot", "\[Rule]", 
           "\"\<\!\(\*OverscriptBox[\(l\), \(.\)]\)\>\""}]}], "}"}]}], 
       "]"}]}], "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.736514483472488*^9, 3.7365146903368053`*^9}, {
   3.736514729074404*^9, 3.7365147961579523`*^9}, {3.7365148683355217`*^9, 
   3.736514875599053*^9}, {3.736514938071732*^9, 3.736514988823402*^9}, {
   3.7365150306999197`*^9, 3.736515257311194*^9}, {3.736515658589368*^9, 
   3.736515856198098*^9}, {3.736515949417039*^9, 3.736515966387885*^9}, {
   3.73651617655005*^9, 3.736516177407366*^9}, 3.736516234367362*^9, {
   3.736518239663378*^9, 3.736518347928886*^9}, {3.736518382524951*^9, 
   3.7365184704597597`*^9}, {3.736518871543274*^9, 3.736518901456153*^9}, {
   3.736520057293104*^9, 3.736520151297258*^9}, {3.7365206660687103`*^9, 
   3.7365207910919533`*^9}, {3.736521612379187*^9, 3.736521689985323*^9}, {
   3.736521723680026*^9, 3.736521846745336*^9}, {3.7365228439073*^9, 
   3.736522845341505*^9}, {3.7365228932785807`*^9, 3.736522932867875*^9}, {
   3.736522980590983*^9, 3.736523223829883*^9}, {3.7365349770448008`*^9, 
   3.736535141090516*^9}, {3.7365430493423*^9, 3.7365430656319647`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Equations of motion:\"\>"], "Print",
 CellChangeTimes->{
  3.736517632545959*^9, {3.7365182270897503`*^9, 3.7365182570389547`*^9}, {
   3.7365182990625763`*^9, 3.7365183488416147`*^9}, {3.736518409925664*^9, 
   3.736518471148252*^9}, 3.736518877339888*^9, 3.7365189152721453`*^9, 
   3.73651933947512*^9, {3.73652013015464*^9, 3.736520152557466*^9}, 
   3.736520676754957*^9, 3.736520730087426*^9, 3.736520792513484*^9, 
   3.736521536470417*^9, 3.736521635189693*^9, 3.736521691600677*^9, {
   3.736521820129361*^9, 3.736521848003366*^9}, 3.7365228472552557`*^9, 
   3.736522934396133*^9, {3.736522983940959*^9, 3.736523054834828*^9}, 
   3.736523089917852*^9, {3.7365231492451878`*^9, 3.736523224647635*^9}, 
   3.736523718324267*^9, 3.736533509261856*^9, 3.736533924784878*^9, 
   3.736534098080469*^9, {3.736535022760024*^9, 3.7365350345098543`*^9}, 
   3.736535081672956*^9, {3.736535127351815*^9, 3.736535141999555*^9}, 
   3.7365352561244698`*^9, 3.736535489694488*^9, 3.7365358986353188`*^9, 
   3.7365391238572197`*^9, 3.736540849287462*^9, 3.736540915454793*^9, 
   3.736541062673317*^9, 3.7365411593235903`*^9, 3.7365415099857473`*^9, 
   3.736541786276455*^9, 3.736542302834546*^9, 3.736543066528414*^9, 
   3.73654391929838*^9, 3.7365441152806873`*^9, 3.7365459376687317`*^9, 
   3.7365940866423264`*^9, 3.736595876376683*^9, 3.736597692004101*^9, {
   3.736599903211684*^9, 3.7365999267295113`*^9}, 3.736616645660789*^9, 
   3.73661830893867*^9, 3.7366831886066113`*^9, 3.736697573000679*^9, 
   3.7368541205276337`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*OverscriptBox[\\(\[Alpha]\\), \\(\[DoubleDot]\\)]\\) \
= \"\>", "\[InvisibleSpace]", 
   FractionBox[
    RowBox[{
     RowBox[{"J", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], 
         " ", "\<\"\\!\\(\\*OverscriptBox[\\(l\\), \\(.\\)]\\)\"\>", 
         " ", "\<\"\\!\\(\\*OverscriptBox[\\(\[Alpha]\\), \\(.\\)]\\)\"\>"}], 
        "+", 
        RowBox[{"g", " ", 
         RowBox[{"Sin", "[", "\<\"\[Alpha]\"\>", "]"}]}], "-", 
        RowBox[{
         SuperscriptBox["\<\"\\!\\(\\*OverscriptBox[\\(\[Theta]\\), \
\\(.\\)]\\)\"\>", "2"], " ", "d", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\<\"\[Alpha]\"\>", "-", "\<\"\[Theta]\"\>"}], "]"}]}]}], 
       ")"}]}], "-", 
     RowBox[{"d", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\<\"\[Alpha]\"\>", "-", "\<\"\[Theta]\"\>"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{"\[Tau]", "+", 
        RowBox[{"d", " ", "k", " ", 
         RowBox[{"(", 
          RowBox[{"\<\"l\"\>", "-", "lo"}], ")"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\<\"\[Alpha]\"\>", "-", "\<\"\[Theta]\"\>"}], "]"}]}]}], 
       ")"}]}]}], 
    RowBox[{"\<\"l\"\>", " ", "J"}]]}],
  SequenceForm[
  "\!\(\*OverscriptBox[\(\[Alpha]\), \(\[DoubleDot]\)]\) = ", 
   "l"^(-1) $CellContext`J^(-1) ($CellContext`J ((-2) 
       "\!\(\*OverscriptBox[\(l\), \(.\)]\)" 
       "\!\(\*OverscriptBox[\(\[Alpha]\), \(.\)]\)" + $CellContext`g 
       Sin["\[Alpha]"] - 
      "\!\(\*OverscriptBox[\(\[Theta]\), \(.\)]\)"^2 $CellContext`d 
      Sin["\[Alpha]" - "\[Theta]"]) - $CellContext`d 
    Cos["\[Alpha]" - 
      "\[Theta]"] ($CellContext`\[Tau] + $CellContext`d $CellContext`k (
       "l" - $CellContext`lo) Sin["\[Alpha]" - "\[Theta]"]))],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.736517632545959*^9, {3.7365182270897503`*^9, 3.7365182570389547`*^9}, {
   3.7365182990625763`*^9, 3.7365183488416147`*^9}, {3.736518409925664*^9, 
   3.736518471148252*^9}, 3.736518877339888*^9, 3.7365189152721453`*^9, 
   3.73651933947512*^9, {3.73652013015464*^9, 3.736520152557466*^9}, 
   3.736520676754957*^9, 3.736520730087426*^9, 3.736520792513484*^9, 
   3.736521536470417*^9, 3.736521635189693*^9, 3.736521691600677*^9, {
   3.736521820129361*^9, 3.736521848003366*^9}, 3.7365228472552557`*^9, 
   3.736522934396133*^9, {3.736522983940959*^9, 3.736523054834828*^9}, 
   3.736523089917852*^9, {3.7365231492451878`*^9, 3.736523224647635*^9}, 
   3.736523718324267*^9, 3.736533509261856*^9, 3.736533924784878*^9, 
   3.736534098080469*^9, {3.736535022760024*^9, 3.7365350345098543`*^9}, 
   3.736535081672956*^9, {3.736535127351815*^9, 3.736535141999555*^9}, 
   3.7365352561244698`*^9, 3.736535489694488*^9, 3.7365358986353188`*^9, 
   3.7365391238572197`*^9, 3.736540849287462*^9, 3.736540915454793*^9, 
   3.736541062673317*^9, 3.7365411593235903`*^9, 3.7365415099857473`*^9, 
   3.736541786276455*^9, 3.736542302834546*^9, 3.736543066528414*^9, 
   3.73654391929838*^9, 3.7365441152806873`*^9, 3.7365459376687317`*^9, 
   3.7365940866423264`*^9, 3.736595876376683*^9, 3.736597692004101*^9, {
   3.736599903211684*^9, 3.7365999267295113`*^9}, 3.736616645660789*^9, 
   3.73661830893867*^9, 3.7366831886066113`*^9, 3.736697573000679*^9, 
   3.7368541213697777`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*OverscriptBox[\\(\[Theta]\\), \\(\[DoubleDot]\\)]\\) \
= \"\>", "\[InvisibleSpace]", 
   FractionBox[
    RowBox[{"\[Tau]", "+", 
     RowBox[{"d", " ", "k", " ", 
      RowBox[{"(", 
       RowBox[{"\<\"l\"\>", "-", "lo"}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\<\"\[Alpha]\"\>", "-", "\<\"\[Theta]\"\>"}], "]"}]}]}], 
    "J"]}],
  SequenceForm[
  "\!\(\*OverscriptBox[\(\[Theta]\), \(\[DoubleDot]\)]\) = ", \
$CellContext`J^(-1) ($CellContext`\[Tau] + $CellContext`d $CellContext`k (
      "l" - $CellContext`lo) Sin["\[Alpha]" - "\[Theta]"])],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.736517632545959*^9, {3.7365182270897503`*^9, 3.7365182570389547`*^9}, {
   3.7365182990625763`*^9, 3.7365183488416147`*^9}, {3.736518409925664*^9, 
   3.736518471148252*^9}, 3.736518877339888*^9, 3.7365189152721453`*^9, 
   3.73651933947512*^9, {3.73652013015464*^9, 3.736520152557466*^9}, 
   3.736520676754957*^9, 3.736520730087426*^9, 3.736520792513484*^9, 
   3.736521536470417*^9, 3.736521635189693*^9, 3.736521691600677*^9, {
   3.736521820129361*^9, 3.736521848003366*^9}, 3.7365228472552557`*^9, 
   3.736522934396133*^9, {3.736522983940959*^9, 3.736523054834828*^9}, 
   3.736523089917852*^9, {3.7365231492451878`*^9, 3.736523224647635*^9}, 
   3.736523718324267*^9, 3.736533509261856*^9, 3.736533924784878*^9, 
   3.736534098080469*^9, {3.736535022760024*^9, 3.7365350345098543`*^9}, 
   3.736535081672956*^9, {3.736535127351815*^9, 3.736535141999555*^9}, 
   3.7365352561244698`*^9, 3.736535489694488*^9, 3.7365358986353188`*^9, 
   3.7365391238572197`*^9, 3.736540849287462*^9, 3.736540915454793*^9, 
   3.736541062673317*^9, 3.7365411593235903`*^9, 3.7365415099857473`*^9, 
   3.736541786276455*^9, 3.736542302834546*^9, 3.736543066528414*^9, 
   3.73654391929838*^9, 3.7365441152806873`*^9, 3.7365459376687317`*^9, 
   3.7365940866423264`*^9, 3.736595876376683*^9, 3.736597692004101*^9, {
   3.736599903211684*^9, 3.7365999267295113`*^9}, 3.736616645660789*^9, 
   3.73661830893867*^9, 3.7366831886066113`*^9, 3.736697573000679*^9, 
   3.73685412145823*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*OverscriptBox[\\(l\\), \\(\[DoubleDot]\\)]\\) = \"\>",
    "\[InvisibleSpace]", 
   FractionBox[
    RowBox[{
     RowBox[{"2", " ", "J", " ", "k", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "\<\"l\"\>"}], "+", "lo"}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "\<\"l\"\>", " ", 
         SuperscriptBox["\<\"\\!\\(\\*OverscriptBox[\\(\[Alpha]\\), \
\\(.\\)]\\)\"\>", "2"], " ", "J"}], "-", 
        RowBox[{"\<\"l\"\>", " ", 
         SuperscriptBox["d", "2"], " ", "k"}], "+", 
        RowBox[{
         SuperscriptBox["d", "2"], " ", "k", " ", "lo"}]}], ")"}], " ", "m"}],
      "-", 
     RowBox[{"2", " ", "g", " ", "J", " ", "m", " ", 
      RowBox[{"Cos", "[", "\<\"\[Alpha]\"\>", "]"}]}], "+", 
     RowBox[{"d", " ", "m", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", 
         SuperscriptBox["\<\"\\!\\(\\*OverscriptBox[\\(\[Theta]\\), \
\\(.\\)]\\)\"\>", "2"], " ", "J", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\<\"\[Alpha]\"\>", "-", "\<\"\[Theta]\"\>"}], "]"}]}], "+", 
        RowBox[{"d", " ", "k", " ", 
         RowBox[{"(", 
          RowBox[{"\<\"l\"\>", "-", "lo"}], ")"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"\<\"\[Alpha]\"\>", "-", "\<\"\[Theta]\"\>"}], ")"}]}], 
          "]"}]}], "-", 
        RowBox[{"2", " ", "\[Tau]", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\<\"\[Alpha]\"\>", "-", "\<\"\[Theta]\"\>"}], "]"}]}]}], 
       ")"}]}]}], 
    RowBox[{"2", " ", "J", " ", "m"}]]}],
  SequenceForm[
  "\!\(\*OverscriptBox[\(l\), \(\[DoubleDot]\)]\) = ", 
   Rational[1, 2] $CellContext`J^(-1) $CellContext`m^(-1) (
    2 $CellContext`J $CellContext`k (-"l" + $CellContext`lo) + (
      2 "l" "\!\(\*OverscriptBox[\(\[Alpha]\), \(.\)]\)"^2 $CellContext`J - 
      "l" $CellContext`d^2 $CellContext`k + $CellContext`d^2 $CellContext`k \
$CellContext`lo) $CellContext`m - 
    2 $CellContext`g $CellContext`J $CellContext`m 
    Cos["\[Alpha]"] + $CellContext`d $CellContext`m (
      2 "\!\(\*OverscriptBox[\(\[Theta]\), \(.\)]\)"^2 $CellContext`J 
       Cos["\[Alpha]" - "\[Theta]"] + $CellContext`d $CellContext`k (
        "l" - $CellContext`lo) Cos[2 ("\[Alpha]" - "\[Theta]")] - 
      2 $CellContext`\[Tau] Sin["\[Alpha]" - "\[Theta]"]))],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.736517632545959*^9, {3.7365182270897503`*^9, 3.7365182570389547`*^9}, {
   3.7365182990625763`*^9, 3.7365183488416147`*^9}, {3.736518409925664*^9, 
   3.736518471148252*^9}, 3.736518877339888*^9, 3.7365189152721453`*^9, 
   3.73651933947512*^9, {3.73652013015464*^9, 3.736520152557466*^9}, 
   3.736520676754957*^9, 3.736520730087426*^9, 3.736520792513484*^9, 
   3.736521536470417*^9, 3.736521635189693*^9, 3.736521691600677*^9, {
   3.736521820129361*^9, 3.736521848003366*^9}, 3.7365228472552557`*^9, 
   3.736522934396133*^9, {3.736522983940959*^9, 3.736523054834828*^9}, 
   3.736523089917852*^9, {3.7365231492451878`*^9, 3.736523224647635*^9}, 
   3.736523718324267*^9, 3.736533509261856*^9, 3.736533924784878*^9, 
   3.736534098080469*^9, {3.736535022760024*^9, 3.7365350345098543`*^9}, 
   3.736535081672956*^9, {3.736535127351815*^9, 3.736535141999555*^9}, 
   3.7365352561244698`*^9, 3.736535489694488*^9, 3.7365358986353188`*^9, 
   3.7365391238572197`*^9, 3.736540849287462*^9, 3.736540915454793*^9, 
   3.736541062673317*^9, 3.7365411593235903`*^9, 3.7365415099857473`*^9, 
   3.736541786276455*^9, 3.736542302834546*^9, 3.736543066528414*^9, 
   3.73654391929838*^9, 3.7365441152806873`*^9, 3.7365459376687317`*^9, 
   3.7365940866423264`*^9, 3.736595876376683*^9, 3.736597692004101*^9, {
   3.736599903211684*^9, 3.7365999267295113`*^9}, 3.736616645660789*^9, 
   3.73661830893867*^9, 3.7366831886066113`*^9, 3.736697573000679*^9, 
   3.73685412295888*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Linearization and stability analysis", "Subchapter",
 CellChangeTimes->{{3.7365193467035933`*^9, 3.736519356524703*^9}}],

Cell[CellGroupData[{

Cell["Find equilibria", "Subsection",
 CellChangeTimes->{{3.7365436244923077`*^9, 3.736543631200535*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"equilibria", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"adot", "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"fx", "/.", 
          RowBox[{"\[Tau]", "\[Rule]", "0"}]}], ")"}], "\[Equal]", "0"}], ",", 
       RowBox[{"thdot", "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"gx", "/.", 
          RowBox[{"\[Tau]", "\[Rule]", "0"}]}], ")"}], "\[Equal]", "0"}], ",", 
       RowBox[{"elldot", "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"hx", "/.", 
          RowBox[{"\[Tau]", "\[Rule]", "0"}]}], ")"}], "\[Equal]", "0"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "a", ",", "adot", ",", "th", ",", "thdot", ",", "ell", ",", "elldot"}], 
      "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<equilibrium 1: \>\"", ",", 
     RowBox[{"equilibria", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<equilibrium 2: \>\"", ",", 
    RowBox[{"equilibria", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<equilibrium 3: \>\"", ",", 
    RowBox[{"equilibria", "[", 
     RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<equilibrium 4: \>\"", ",", 
    RowBox[{"equilibria", "[", 
     RowBox[{"[", "4", "]"}], "]"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7365436327335367`*^9, 3.736543672051805*^9}, 
   3.736543704669757*^9, {3.736543739007309*^9, 3.736543780728434*^9}, {
   3.736543840741623*^9, 3.7365438687108383`*^9}, {3.736543958368037*^9, 
   3.736543959679822*^9}, {3.736544003436754*^9, 3.7365440095143948`*^9}, {
   3.736544051083014*^9, 3.736544052291533*^9}, {3.736544275894643*^9, 
   3.736544276818097*^9}, {3.7365444318051577`*^9, 3.736544507340312*^9}, {
   3.736544537427087*^9, 3.736544601048027*^9}, 3.736618315418786*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"equilibrium 1: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"adot", "\[Rule]", "0"}], ",", 
     RowBox[{"thdot", "\[Rule]", "0"}], ",", 
     RowBox[{"ell", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"k", " ", "lo"}], "-", 
        RowBox[{"g", " ", "m"}]}], "k"]}], ",", 
     RowBox[{"elldot", "\[Rule]", "0"}], ",", 
     RowBox[{"a", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{
        RowBox[{"2", " ", "\[Pi]", " ", 
         RowBox[{"C", "[", "1", "]"}]}], ",", 
        RowBox[{
         RowBox[{"C", "[", "1", "]"}], "\[Element]", "Integers"}]}], "]"}]}], 
     ",", 
     RowBox[{"th", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[Pi]", " ", 
         RowBox[{"C", "[", "2", "]"}]}], ",", 
        RowBox[{
         RowBox[{"C", "[", "2", "]"}], "\[Element]", "Integers"}]}], 
       "]"}]}]}], "}"}]}],
  SequenceForm[
  "equilibrium 1: ", {$CellContext`adot -> 0, $CellContext`thdot -> 
    0, $CellContext`ell -> $CellContext`k^(-1) ($CellContext`k \
$CellContext`lo - $CellContext`g $CellContext`m), $CellContext`elldot -> 
    0, $CellContext`a -> ConditionalExpression[2 Pi C[1], 
      Element[
       C[1], Integers]], $CellContext`th -> 
    ConditionalExpression[(-2) Pi C[2], 
      Element[
       C[2], Integers]]}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7365446022158213`*^9, 3.736545945802125*^9, 
  3.736546395052651*^9, 3.7365940966605673`*^9, 3.736599934456448*^9, 
  3.7366166540532093`*^9, 3.7366183173222427`*^9, 3.736683203193266*^9, 
  3.7366975963936157`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"equilibrium 2: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"adot", "\[Rule]", "0"}], ",", 
     RowBox[{"thdot", "\[Rule]", "0"}], ",", 
     RowBox[{"ell", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"k", " ", "lo"}], "-", 
        RowBox[{"g", " ", "m"}]}], "k"]}], ",", 
     RowBox[{"elldot", "\[Rule]", "0"}], ",", 
     RowBox[{"a", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{
        RowBox[{"2", " ", "\[Pi]", " ", 
         RowBox[{"C", "[", "1", "]"}]}], ",", 
        RowBox[{
         RowBox[{"C", "[", "1", "]"}], "\[Element]", "Integers"}]}], "]"}]}], 
     ",", 
     RowBox[{"th", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[Pi]"}], "-", 
         RowBox[{"2", " ", "\[Pi]", " ", 
          RowBox[{"C", "[", "2", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"C", "[", "2", "]"}], "\[Element]", "Integers"}]}], 
       "]"}]}]}], "}"}]}],
  SequenceForm[
  "equilibrium 2: ", {$CellContext`adot -> 0, $CellContext`thdot -> 
    0, $CellContext`ell -> $CellContext`k^(-1) ($CellContext`k \
$CellContext`lo - $CellContext`g $CellContext`m), $CellContext`elldot -> 
    0, $CellContext`a -> ConditionalExpression[2 Pi C[1], 
      Element[
       C[1], Integers]], $CellContext`th -> 
    ConditionalExpression[-Pi - 2 Pi C[2], 
      Element[
       C[2], Integers]]}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7365446022158213`*^9, 3.736545945802125*^9, 
  3.736546395052651*^9, 3.7365940966605673`*^9, 3.736599934456448*^9, 
  3.7366166540532093`*^9, 3.7366183173222427`*^9, 3.736683203193266*^9, 
  3.736697596395338*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"equilibrium 3: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"adot", "\[Rule]", "0"}], ",", 
     RowBox[{"thdot", "\[Rule]", "0"}], ",", 
     RowBox[{"ell", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"k", " ", "lo"}], "+", 
        RowBox[{"g", " ", "m"}]}], "k"]}], ",", 
     RowBox[{"elldot", "\[Rule]", "0"}], ",", 
     RowBox[{"a", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{
        RowBox[{"\[Pi]", "+", 
         RowBox[{"2", " ", "\[Pi]", " ", 
          RowBox[{"C", "[", "1", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"C", "[", "1", "]"}], "\[Element]", "Integers"}]}], "]"}]}], 
     ",", 
     RowBox[{"th", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[Pi]", " ", 
         RowBox[{"C", "[", "2", "]"}]}], ",", 
        RowBox[{
         RowBox[{"C", "[", "2", "]"}], "\[Element]", "Integers"}]}], 
       "]"}]}]}], "}"}]}],
  SequenceForm[
  "equilibrium 3: ", {$CellContext`adot -> 0, $CellContext`thdot -> 
    0, $CellContext`ell -> $CellContext`k^(-1) ($CellContext`k \
$CellContext`lo + $CellContext`g $CellContext`m), $CellContext`elldot -> 
    0, $CellContext`a -> ConditionalExpression[Pi + 2 Pi C[1], 
      Element[
       C[1], Integers]], $CellContext`th -> 
    ConditionalExpression[(-2) Pi C[2], 
      Element[
       C[2], Integers]]}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7365446022158213`*^9, 3.736545945802125*^9, 
  3.736546395052651*^9, 3.7365940966605673`*^9, 3.736599934456448*^9, 
  3.7366166540532093`*^9, 3.7366183173222427`*^9, 3.736683203193266*^9, 
  3.736697596396865*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"equilibrium 4: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"adot", "\[Rule]", "0"}], ",", 
     RowBox[{"thdot", "\[Rule]", "0"}], ",", 
     RowBox[{"ell", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"k", " ", "lo"}], "+", 
        RowBox[{"g", " ", "m"}]}], "k"]}], ",", 
     RowBox[{"elldot", "\[Rule]", "0"}], ",", 
     RowBox[{"a", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{
        RowBox[{"\[Pi]", "+", 
         RowBox[{"2", " ", "\[Pi]", " ", 
          RowBox[{"C", "[", "1", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"C", "[", "1", "]"}], "\[Element]", "Integers"}]}], "]"}]}], 
     ",", 
     RowBox[{"th", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[Pi]"}], "-", 
         RowBox[{"2", " ", "\[Pi]", " ", 
          RowBox[{"C", "[", "2", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"C", "[", "2", "]"}], "\[Element]", "Integers"}]}], 
       "]"}]}]}], "}"}]}],
  SequenceForm[
  "equilibrium 4: ", {$CellContext`adot -> 0, $CellContext`thdot -> 
    0, $CellContext`ell -> $CellContext`k^(-1) ($CellContext`k \
$CellContext`lo + $CellContext`g $CellContext`m), $CellContext`elldot -> 
    0, $CellContext`a -> ConditionalExpression[Pi + 2 Pi C[1], 
      Element[
       C[1], Integers]], $CellContext`th -> 
    ConditionalExpression[-Pi - 2 Pi C[2], 
      Element[
       C[2], Integers]]}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7365446022158213`*^9, 3.736545945802125*^9, 
  3.736546395052651*^9, 3.7365940966605673`*^9, 3.736599934456448*^9, 
  3.7366166540532093`*^9, 3.7366183173222427`*^9, 3.736683203193266*^9, 
  3.736697596398443*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Choose", " ", "the", " ", "operating", " ", "point", " ", "to", " ", "be",
     " ", "\"\<upright\>\"", " ", "and", " ", "\"\<balanced\>\""}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Alpha]lin", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Alpha]dotlin", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Theta]lin", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Theta]dotlin", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"llin", "=", 
     RowBox[{"lo", "-", 
      FractionBox[
       RowBox[{"m", " ", "g"}], "k"]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"llindot", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Affine", " ", "terms"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"fx", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "\[Rule]", "\[Alpha]lin"}], ",", 
       RowBox[{"adot", "\[Rule]", "\[Alpha]dotlin"}], ",", 
       RowBox[{"th", "\[Rule]", "\[Theta]lin"}], ",", 
       RowBox[{"thdot", "\[Rule]", "\[Theta]dotlin"}], ",", 
       RowBox[{"ell", "\[Rule]", "llin"}], ",", 
       RowBox[{"elldot", "\[Rule]", "llindot"}], ",", 
       RowBox[{"\[Tau]", "\[Rule]", "0"}]}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"gx", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "\[Rule]", "\[Alpha]lin"}], ",", 
       RowBox[{"adot", "\[Rule]", "\[Alpha]dotlin"}], ",", 
       RowBox[{"th", "\[Rule]", "\[Theta]lin"}], ",", 
       RowBox[{"thdot", "\[Rule]", "\[Theta]dotlin"}], ",", 
       RowBox[{"ell", "\[Rule]", "llin"}], ",", 
       RowBox[{"elldot", "\[Rule]", "llindot"}], ",", 
       RowBox[{"\[Tau]", "\[Rule]", "0"}]}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"hx", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "\[Rule]", "\[Alpha]lin"}], ",", 
       RowBox[{"adot", "\[Rule]", "\[Alpha]dotlin"}], ",", 
       RowBox[{"th", "\[Rule]", "\[Theta]lin"}], ",", 
       RowBox[{"thdot", "\[Rule]", "\[Theta]dotlin"}], ",", 
       RowBox[{"ell", "\[Rule]", "llin"}], ",", 
       RowBox[{"elldot", "\[Rule]", "llindot"}], ",", 
       RowBox[{"\[Tau]", "\[Rule]", "0"}]}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", "Jacobian", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"J21", "=", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "a"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "\[Rule]", "\[Alpha]lin"}], ",", 
        RowBox[{"adot", "\[Rule]", "\[Alpha]dotlin"}], ",", 
        RowBox[{"th", "\[Rule]", "\[Theta]lin"}], ",", 
        RowBox[{"thdot", "\[Rule]", "\[Theta]dotlin"}], ",", 
        RowBox[{"ell", "\[Rule]", "llin"}], ",", 
        RowBox[{"elldot", "\[Rule]", "llindot"}], ",", 
        RowBox[{"\[Tau]", "\[Rule]", "0"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"J22", "=", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "adot"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "\[Rule]", "\[Alpha]lin"}], ",", 
        RowBox[{"adot", "\[Rule]", "\[Alpha]dotlin"}], ",", 
        RowBox[{"th", "\[Rule]", "\[Theta]lin"}], ",", 
        RowBox[{"thdot", "\[Rule]", "\[Theta]dotlin"}], ",", 
        RowBox[{"ell", "\[Rule]", "llin"}], ",", 
        RowBox[{"elldot", "\[Rule]", "llindot"}], ",", 
        RowBox[{"\[Tau]", "\[Rule]", "0"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"J23", "=", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "th"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "\[Rule]", "\[Alpha]lin"}], ",", 
        RowBox[{"adot", "\[Rule]", "\[Alpha]dotlin"}], ",", 
        RowBox[{"th", "\[Rule]", "\[Theta]lin"}], ",", 
        RowBox[{"thdot", "\[Rule]", "\[Theta]dotlin"}], ",", 
        RowBox[{"ell", "\[Rule]", "llin"}], ",", 
        RowBox[{"elldot", "\[Rule]", "llindot"}], ",", 
        RowBox[{"\[Tau]", "\[Rule]", "0"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"J24", "=", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "thdot"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "\[Rule]", "\[Alpha]lin"}], ",", 
        RowBox[{"adot", "\[Rule]", "\[Alpha]dotlin"}], ",", 
        RowBox[{"th", "\[Rule]", "\[Theta]lin"}], ",", 
        RowBox[{"thdot", "\[Rule]", "\[Theta]dotlin"}], ",", 
        RowBox[{"ell", "\[Rule]", "llin"}], ",", 
        RowBox[{"elldot", "\[Rule]", "llindot"}], ",", 
        RowBox[{"\[Tau]", "\[Rule]", "0"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"J25", "=", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "ell"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "\[Rule]", "\[Alpha]lin"}], ",", 
        RowBox[{"adot", "\[Rule]", "\[Alpha]dotlin"}], ",", 
        RowBox[{"th", "\[Rule]", "\[Theta]lin"}], ",", 
        RowBox[{"thdot", "\[Rule]", "\[Theta]dotlin"}], ",", 
        RowBox[{"ell", "\[Rule]", "llin"}], ",", 
        RowBox[{"elldot", "\[Rule]", "llindot"}], ",", 
        RowBox[{"\[Tau]", "\[Rule]", "0"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"J26", "=", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "elldot"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "\[Rule]", "\[Alpha]lin"}], ",", 
        RowBox[{"adot", "\[Rule]", "\[Alpha]dotlin"}], ",", 
        RowBox[{"th", "\[Rule]", "\[Theta]lin"}], ",", 
        RowBox[{"thdot", "\[Rule]", "\[Theta]dotlin"}], ",", 
        RowBox[{"ell", "\[Rule]", "llin"}], ",", 
        RowBox[{"elldot", "\[Rule]", "llindot"}], ",", 
        RowBox[{"\[Tau]", "\[Rule]", "0"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"J41", "=", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"gx", ",", "a"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "\[Rule]", "\[Alpha]lin"}], ",", 
        RowBox[{"adot", "\[Rule]", "\[Alpha]dotlin"}], ",", 
        RowBox[{"th", "\[Rule]", "\[Theta]lin"}], ",", 
        RowBox[{"thdot", "\[Rule]", "\[Theta]dotlin"}], ",", 
        RowBox[{"ell", "\[Rule]", "llin"}], ",", 
        RowBox[{"elldot", "\[Rule]", "llindot"}], ",", 
        RowBox[{"\[Tau]", "\[Rule]", "0"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"J42", "=", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"gx", ",", "adot"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "\[Rule]", "\[Alpha]lin"}], ",", 
        RowBox[{"adot", "\[Rule]", "\[Alpha]dotlin"}], ",", 
        RowBox[{"th", "\[Rule]", "\[Theta]lin"}], ",", 
        RowBox[{"thdot", "\[Rule]", "\[Theta]dotlin"}], ",", 
        RowBox[{"ell", "\[Rule]", "llin"}], ",", 
        RowBox[{"elldot", "\[Rule]", "llindot"}], ",", 
        RowBox[{"\[Tau]", "\[Rule]", "0"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"J43", "=", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"gx", ",", "th"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "\[Rule]", "\[Alpha]lin"}], ",", 
        RowBox[{"adot", "\[Rule]", "\[Alpha]dotlin"}], ",", 
        RowBox[{"th", "\[Rule]", "\[Theta]lin"}], ",", 
        RowBox[{"thdot", "\[Rule]", "\[Theta]dotlin"}], ",", 
        RowBox[{"ell", "\[Rule]", "llin"}], ",", 
        RowBox[{"elldot", "\[Rule]", "llindot"}], ",", 
        RowBox[{"\[Tau]", "\[Rule]", "0"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"J44", "=", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"gx", ",", "thdot"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "\[Rule]", "\[Alpha]lin"}], ",", 
        RowBox[{"adot", "\[Rule]", "\[Alpha]dotlin"}], ",", 
        RowBox[{"th", "\[Rule]", "\[Theta]lin"}], ",", 
        RowBox[{"thdot", "\[Rule]", "\[Theta]dotlin"}], ",", 
        RowBox[{"ell", "\[Rule]", "llin"}], ",", 
        RowBox[{"elldot", "\[Rule]", "llindot"}], ",", 
        RowBox[{"\[Tau]", "\[Rule]", "0"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"J45", "=", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"gx", ",", "ell"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "\[Rule]", "\[Alpha]lin"}], ",", 
        RowBox[{"adot", "\[Rule]", "\[Alpha]dotlin"}], ",", 
        RowBox[{"th", "\[Rule]", "\[Theta]lin"}], ",", 
        RowBox[{"thdot", "\[Rule]", "\[Theta]dotlin"}], ",", 
        RowBox[{"ell", "\[Rule]", "llin"}], ",", 
        RowBox[{"elldot", "\[Rule]", "llindot"}], ",", 
        RowBox[{"\[Tau]", "\[Rule]", "0"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"J46", "=", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"gx", ",", "elldot"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "\[Rule]", "\[Alpha]lin"}], ",", 
        RowBox[{"adot", "\[Rule]", "\[Alpha]dotlin"}], ",", 
        RowBox[{"th", "\[Rule]", "\[Theta]lin"}], ",", 
        RowBox[{"thdot", "\[Rule]", "\[Theta]dotlin"}], ",", 
        RowBox[{"ell", "\[Rule]", "llin"}], ",", 
        RowBox[{"elldot", "\[Rule]", "llindot"}], ",", 
        RowBox[{"\[Tau]", "\[Rule]", "0"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"J61", "=", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"hx", ",", "a"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "\[Rule]", "\[Alpha]lin"}], ",", 
        RowBox[{"adot", "\[Rule]", "\[Alpha]dotlin"}], ",", 
        RowBox[{"th", "\[Rule]", "\[Theta]lin"}], ",", 
        RowBox[{"thdot", "\[Rule]", "\[Theta]dotlin"}], ",", 
        RowBox[{"ell", "\[Rule]", "llin"}], ",", 
        RowBox[{"elldot", "\[Rule]", "llindot"}], ",", 
        RowBox[{"\[Tau]", "\[Rule]", "0"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"J62", "=", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"hx", ",", "adot"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "\[Rule]", "\[Alpha]lin"}], ",", 
        RowBox[{"adot", "\[Rule]", "\[Alpha]dotlin"}], ",", 
        RowBox[{"th", "\[Rule]", "\[Theta]lin"}], ",", 
        RowBox[{"thdot", "\[Rule]", "\[Theta]dotlin"}], ",", 
        RowBox[{"ell", "\[Rule]", "llin"}], ",", 
        RowBox[{"elldot", "\[Rule]", "llindot"}], ",", 
        RowBox[{"\[Tau]", "\[Rule]", "0"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"J63", "=", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"hx", ",", "th"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "\[Rule]", "\[Alpha]lin"}], ",", 
        RowBox[{"adot", "\[Rule]", "\[Alpha]dotlin"}], ",", 
        RowBox[{"th", "\[Rule]", "\[Theta]lin"}], ",", 
        RowBox[{"thdot", "\[Rule]", "\[Theta]dotlin"}], ",", 
        RowBox[{"ell", "\[Rule]", "llin"}], ",", 
        RowBox[{"elldot", "\[Rule]", "llindot"}], ",", 
        RowBox[{"\[Tau]", "\[Rule]", "0"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"J64", "=", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"hx", ",", "thdot"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "\[Rule]", "\[Alpha]lin"}], ",", 
        RowBox[{"adot", "\[Rule]", "\[Alpha]dotlin"}], ",", 
        RowBox[{"th", "\[Rule]", "\[Theta]lin"}], ",", 
        RowBox[{"thdot", "\[Rule]", "\[Theta]dotlin"}], ",", 
        RowBox[{"ell", "\[Rule]", "llin"}], ",", 
        RowBox[{"elldot", "\[Rule]", "llindot"}], ",", 
        RowBox[{"\[Tau]", "\[Rule]", "0"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"J65", "=", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"hx", ",", "ell"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "\[Rule]", "\[Alpha]lin"}], ",", 
        RowBox[{"adot", "\[Rule]", "\[Alpha]dotlin"}], ",", 
        RowBox[{"th", "\[Rule]", "\[Theta]lin"}], ",", 
        RowBox[{"thdot", "\[Rule]", "\[Theta]dotlin"}], ",", 
        RowBox[{"ell", "\[Rule]", "llin"}], ",", 
        RowBox[{"elldot", "\[Rule]", "llindot"}], ",", 
        RowBox[{"\[Tau]", "\[Rule]", "0"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"J66", "=", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"hx", ",", "elldot"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "\[Rule]", "\[Alpha]lin"}], ",", 
        RowBox[{"adot", "\[Rule]", "\[Alpha]dotlin"}], ",", 
        RowBox[{"th", "\[Rule]", "\[Theta]lin"}], ",", 
        RowBox[{"thdot", "\[Rule]", "\[Theta]dotlin"}], ",", 
        RowBox[{"ell", "\[Rule]", "llin"}], ",", 
        RowBox[{"elldot", "\[Rule]", "llindot"}], ",", 
        RowBox[{"\[Tau]", "\[Rule]", "0"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jacobian", "=", 
     RowBox[{"FullSimplify", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "J21", ",", "J22", ",", "J23", ",", "J24", ",", "J25", ",", "J26"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "J41", ",", "J42", ",", "J43", ",", "J44", ",", "J45", ",", "J46"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "J61", ",", "J62", ",", "J63", ",", "J64", ",", "J65", ",", "J66"}], 
         "}"}]}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Jacobian = \>\"", ",", 
      RowBox[{"MatrixForm", "[", "jacobian", "]"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"B1", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"B2", "=", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"fx", ",", "\[Tau]"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "\[Rule]", "\[Alpha]lin"}], ",", 
        RowBox[{"adot", "\[Rule]", "\[Alpha]dotlin"}], ",", 
        RowBox[{"th", "\[Rule]", "\[Theta]lin"}], ",", 
        RowBox[{"thdot", "\[Rule]", "\[Theta]dotlin"}], ",", 
        RowBox[{"ell", "\[Rule]", "llin"}], ",", 
        RowBox[{"elldot", "\[Rule]", "llindot"}], ",", 
        RowBox[{"\[Tau]", "\[Rule]", "0"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"B3", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"B4", "=", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"gx", ",", "\[Tau]"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "\[Rule]", "\[Alpha]lin"}], ",", 
        RowBox[{"adot", "\[Rule]", "\[Alpha]dotlin"}], ",", 
        RowBox[{"th", "\[Rule]", "\[Theta]lin"}], ",", 
        RowBox[{"thdot", "\[Rule]", "\[Theta]dotlin"}], ",", 
        RowBox[{"ell", "\[Rule]", "llin"}], ",", 
        RowBox[{"elldot", "\[Rule]", "llindot"}], ",", 
        RowBox[{"\[Tau]", "\[Rule]", "0"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"B5", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"B6", "=", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"hx", ",", "\[Tau]"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "\[Rule]", "\[Alpha]lin"}], ",", 
        RowBox[{"adot", "\[Rule]", "\[Alpha]dotlin"}], ",", 
        RowBox[{"th", "\[Rule]", "\[Theta]lin"}], ",", 
        RowBox[{"thdot", "\[Rule]", "\[Theta]dotlin"}], ",", 
        RowBox[{"ell", "\[Rule]", "llin"}], ",", 
        RowBox[{"elldot", "\[Rule]", "llindot"}], ",", 
        RowBox[{"\[Tau]", "\[Rule]", "0"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Bmatrix", "=", 
     RowBox[{"FullSimplify", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "B1", "}"}], ",", 
        RowBox[{"{", "B2", "}"}], ",", 
        RowBox[{"{", "B3", "}"}], ",", 
        RowBox[{"{", "B4", "}"}], ",", 
        RowBox[{"{", "B5", "}"}], ",", 
        RowBox[{"{", "B6", "}"}]}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<B matix = \>\"", ",", 
      RowBox[{"MatrixForm", "[", "Bmatrix", "]"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", "Eigenvalues", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Lambda]3", ",", "\[Lambda]4", 
       ",", "\[Lambda]5", ",", "\[Lambda]6"}], "}"}], "=", 
     RowBox[{"FullSimplify", "[", 
      RowBox[{"Eigenvalues", "[", 
       RowBox[{"FullSimplify", "[", "jacobian", "]"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gp", "=", "9.81"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mp", "=", "5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Jp", "=", "0.25"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kp", "=", "100"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lop", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dp", "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rp", "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Tau]p", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", "\"\<Eigenvalues:\>\"", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<\[Lambda]1 = \>\"", ",", 
      RowBox[{"FullSimplify", "[", "\[Lambda]1", "]"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<\[Lambda]2 = \>\"", ",", 
      RowBox[{"FullSimplify", "[", "\[Lambda]2", "]"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<\[Lambda]3 = \>\"", ",", 
      RowBox[{"FullSimplify", "[", "\[Lambda]3", "]"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<\[Lambda]4 = \>\"", ",", 
      RowBox[{"FullSimplify", "[", "\[Lambda]4", "]"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<\[Lambda]5 = \>\"", ",", 
      RowBox[{"FullSimplify", "[", "\[Lambda]5", "]"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<\[Lambda]6 = \>\"", ",", 
      RowBox[{"FullSimplify", "[", "\[Lambda]6", "]"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<Eigenvalues as functions of stiffness k and distance r:\>\"", "]"}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"\"\<\[Lambda]1 = \>\"", ",", 
       RowBox[{
        RowBox[{"FullSimplify", "[", "\[Lambda]1", "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"g", "\[Rule]", "gp"}], ",", 
          RowBox[{"m", "\[Rule]", "mp"}], ",", 
          RowBox[{"J", "\[Rule]", "Jp"}], ",", 
          RowBox[{"lo", "\[Rule]", "lop"}], ",", 
          RowBox[{"d", "\[Rule]", "dp"}], ",", 
          RowBox[{"\[Tau]", "\[Rule]", "\[Tau]p"}]}], "}"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<\[Lambda]2 = \>\"", ",", 
       RowBox[{
        RowBox[{"FullSimplify", "[", "\[Lambda]2", "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"g", "\[Rule]", "gp"}], ",", 
          RowBox[{"m", "\[Rule]", "mp"}], ",", 
          RowBox[{"J", "\[Rule]", "Jp"}], ",", 
          RowBox[{"lo", "\[Rule]", "lop"}], ",", 
          RowBox[{"d", "\[Rule]", "dp"}], ",", 
          RowBox[{"\[Tau]", "\[Rule]", "\[Tau]p"}]}], "}"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<\[Lambda]3 = \>\"", ",", 
       RowBox[{
        RowBox[{"FullSimplify", "[", "\[Lambda]3", "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"g", "\[Rule]", "gp"}], ",", 
          RowBox[{"m", "\[Rule]", "mp"}], ",", 
          RowBox[{"J", "\[Rule]", "Jp"}], ",", 
          RowBox[{"lo", "\[Rule]", "lop"}], ",", 
          RowBox[{"d", "\[Rule]", "dp"}], ",", 
          RowBox[{"\[Tau]", "\[Rule]", "\[Tau]p"}]}], "}"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<\[Lambda]4 = \>\"", ",", 
       RowBox[{
        RowBox[{"FullSimplify", "[", "\[Lambda]4", "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"g", "\[Rule]", "gp"}], ",", 
          RowBox[{"m", "\[Rule]", "mp"}], ",", 
          RowBox[{"J", "\[Rule]", "Jp"}], ",", 
          RowBox[{"lo", "\[Rule]", "lop"}], ",", 
          RowBox[{"d", "\[Rule]", "dp"}], ",", 
          RowBox[{"\[Tau]", "\[Rule]", "\[Tau]p"}]}], "}"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<\[Lambda]5 = \>\"", ",", 
       RowBox[{
        RowBox[{"FullSimplify", "[", "\[Lambda]5", "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"g", "\[Rule]", "gp"}], ",", 
          RowBox[{"m", "\[Rule]", "mp"}], ",", 
          RowBox[{"J", "\[Rule]", "Jp"}], ",", 
          RowBox[{"lo", "\[Rule]", "lop"}], ",", 
          RowBox[{"d", "\[Rule]", "dp"}], ",", 
          RowBox[{"\[Tau]", "\[Rule]", "\[Tau]p"}]}], "}"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<\[Lambda]6 = \>\"", ",", 
       RowBox[{
        RowBox[{"FullSimplify", "[", "\[Lambda]6", "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"g", "\[Rule]", "gp"}], ",", 
          RowBox[{"m", "\[Rule]", "mp"}], ",", 
          RowBox[{"J", "\[Rule]", "Jp"}], ",", 
          RowBox[{"lo", "\[Rule]", "lop"}], ",", 
          RowBox[{"d", "\[Rule]", "dp"}], ",", 
          RowBox[{"\[Tau]", "\[Rule]", "\[Tau]p"}]}], "}"}]}]}], "]"}], ";"}],
     "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Plot", " ", "real", " ", "parts", " ", "of", " ", "eigenvalues", " ", 
     "vs", " ", "stiffness", " ", "k"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"re\[Lambda]1", "=", 
      RowBox[{"Re", "[", 
       RowBox[{"\[Lambda]1", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"g", "\[Rule]", "gp"}], ",", 
          RowBox[{"m", "\[Rule]", "mp"}], ",", 
          RowBox[{"J", "\[Rule]", "Jp"}], ",", 
          RowBox[{"lo", "\[Rule]", "lop"}], ",", 
          RowBox[{"d", "\[Rule]", "dp"}], ",", 
          RowBox[{"r", "\[Rule]", "rp"}], ",", 
          RowBox[{"\[Tau]", "\[Rule]", "\[Tau]p"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"re\[Lambda]2", "=", 
      RowBox[{"Re", "[", 
       RowBox[{"\[Lambda]2", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"g", "\[Rule]", "gp"}], ",", 
          RowBox[{"m", "\[Rule]", "mp"}], ",", 
          RowBox[{"J", "\[Rule]", "Jp"}], ",", 
          RowBox[{"lo", "\[Rule]", "lop"}], ",", 
          RowBox[{"d", "\[Rule]", "dp"}], ",", 
          RowBox[{"r", "\[Rule]", "rp"}], ",", 
          RowBox[{"\[Tau]", "\[Rule]", "\[Tau]p"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"re\[Lambda]3", "=", 
      RowBox[{"Re", "[", 
       RowBox[{"\[Lambda]3", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"g", "\[Rule]", "gp"}], ",", 
          RowBox[{"m", "\[Rule]", "mp"}], ",", 
          RowBox[{"J", "\[Rule]", "Jp"}], ",", 
          RowBox[{"lo", "\[Rule]", "lop"}], ",", 
          RowBox[{"d", "\[Rule]", "dp"}], ",", 
          RowBox[{"r", "\[Rule]", "rp"}], ",", 
          RowBox[{"\[Tau]", "\[Rule]", "\[Tau]p"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"re\[Lambda]4", "=", 
      RowBox[{"Re", "[", 
       RowBox[{"\[Lambda]4", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"g", "\[Rule]", "gp"}], ",", 
          RowBox[{"m", "\[Rule]", "mp"}], ",", 
          RowBox[{"J", "\[Rule]", "Jp"}], ",", 
          RowBox[{"lo", "\[Rule]", "lop"}], ",", 
          RowBox[{"d", "\[Rule]", "dp"}], ",", 
          RowBox[{"r", "\[Rule]", "rp"}], ",", 
          RowBox[{"\[Tau]", "\[Rule]", "\[Tau]p"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"re\[Lambda]5", "=", 
      RowBox[{"Re", "[", 
       RowBox[{"\[Lambda]5", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"g", "\[Rule]", "gp"}], ",", 
          RowBox[{"m", "\[Rule]", "mp"}], ",", 
          RowBox[{"J", "\[Rule]", "Jp"}], ",", 
          RowBox[{"lo", "\[Rule]", "lop"}], ",", 
          RowBox[{"d", "\[Rule]", "dp"}], ",", 
          RowBox[{"r", "\[Rule]", "rp"}], ",", 
          RowBox[{"\[Tau]", "\[Rule]", "\[Tau]p"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"re\[Lambda]6", "=", 
      RowBox[{"Re", "[", 
       RowBox[{"\[Lambda]6", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"g", "\[Rule]", "gp"}], ",", 
          RowBox[{"m", "\[Rule]", "mp"}], ",", 
          RowBox[{"J", "\[Rule]", "Jp"}], ",", 
          RowBox[{"lo", "\[Rule]", "lop"}], ",", 
          RowBox[{"d", "\[Rule]", "dp"}], ",", 
          RowBox[{"r", "\[Rule]", "rp"}], ",", 
          RowBox[{"\[Tau]", "\[Rule]", "\[Tau]p"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "re\[Lambda]1", ",", "re\[Lambda]2", ",", "re\[Lambda]3", ",", 
         "re\[Lambda]4", ",", "re\[Lambda]5", ",", "re\[Lambda]6"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "0", ",", "100"}], "}"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<k\>\"", ",", "\"\<Re[\[Lambda]]\>\""}], "}"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<Re[\[Lambda]] vs k\>\""}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Re[\[Lambda]1]\>\"", ",", "\"\<Re[\[Lambda]2]\>\"", ",", 
          "\"\<Re[\[Lambda]3]\>\"", ",", "\"\<Re[\[Lambda]4]\>\"", ",", 
          "\"\<Re[\[Lambda]5]\>\"", ",", "\"\<Re[\[Lambda]6]\>\""}], 
         "}"}]}]}], "]"}]}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Plot", " ", "imaginary", " ", "parts", " ", "of", " ", "eigenvalues", 
     " ", "vs", " ", "stiffness", " ", "k"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"im\[Lambda]1", "=", 
      RowBox[{"Im", "[", 
       RowBox[{"\[Lambda]1", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"g", "\[Rule]", "gp"}], ",", 
          RowBox[{"m", "\[Rule]", "mp"}], ",", 
          RowBox[{"J", "\[Rule]", "Jp"}], ",", 
          RowBox[{"lo", "\[Rule]", "lop"}], ",", 
          RowBox[{"d", "\[Rule]", "dp"}], ",", 
          RowBox[{"r", "\[Rule]", "rp"}], ",", 
          RowBox[{"\[Tau]", "\[Rule]", "\[Tau]p"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"im\[Lambda]2", "=", 
      RowBox[{"Im", "[", 
       RowBox[{"\[Lambda]2", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"g", "\[Rule]", "gp"}], ",", 
          RowBox[{"m", "\[Rule]", "mp"}], ",", 
          RowBox[{"J", "\[Rule]", "Jp"}], ",", 
          RowBox[{"lo", "\[Rule]", "lop"}], ",", 
          RowBox[{"d", "\[Rule]", "dp"}], ",", 
          RowBox[{"r", "\[Rule]", "rp"}], ",", 
          RowBox[{"\[Tau]", "\[Rule]", "\[Tau]p"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"im\[Lambda]3", "=", 
      RowBox[{"Im", "[", 
       RowBox[{"\[Lambda]3", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"g", "\[Rule]", "gp"}], ",", 
          RowBox[{"m", "\[Rule]", "mp"}], ",", 
          RowBox[{"J", "\[Rule]", "Jp"}], ",", 
          RowBox[{"lo", "\[Rule]", "lop"}], ",", 
          RowBox[{"d", "\[Rule]", "dp"}], ",", 
          RowBox[{"r", "\[Rule]", "rp"}], ",", 
          RowBox[{"\[Tau]", "\[Rule]", "\[Tau]p"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"im\[Lambda]4", "=", 
      RowBox[{"Im", "[", 
       RowBox[{"\[Lambda]4", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"g", "\[Rule]", "gp"}], ",", 
          RowBox[{"m", "\[Rule]", "mp"}], ",", 
          RowBox[{"J", "\[Rule]", "Jp"}], ",", 
          RowBox[{"lo", "\[Rule]", "lop"}], ",", 
          RowBox[{"d", "\[Rule]", "dp"}], ",", 
          RowBox[{"r", "\[Rule]", "rp"}], ",", 
          RowBox[{"\[Tau]", "\[Rule]", "\[Tau]p"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"im\[Lambda]5", "=", 
      RowBox[{"Im", "[", 
       RowBox[{"\[Lambda]5", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"g", "\[Rule]", "gp"}], ",", 
          RowBox[{"m", "\[Rule]", "mp"}], ",", 
          RowBox[{"J", "\[Rule]", "Jp"}], ",", 
          RowBox[{"lo", "\[Rule]", "lop"}], ",", 
          RowBox[{"d", "\[Rule]", "dp"}], ",", 
          RowBox[{"r", "\[Rule]", "rp"}], ",", 
          RowBox[{"\[Tau]", "\[Rule]", "\[Tau]p"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"im\[Lambda]6", "=", 
      RowBox[{"Im", "[", 
       RowBox[{"\[Lambda]6", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"g", "\[Rule]", "gp"}], ",", 
          RowBox[{"m", "\[Rule]", "mp"}], ",", 
          RowBox[{"J", "\[Rule]", "Jp"}], ",", 
          RowBox[{"lo", "\[Rule]", "lop"}], ",", 
          RowBox[{"d", "\[Rule]", "dp"}], ",", 
          RowBox[{"r", "\[Rule]", "rp"}], ",", 
          RowBox[{"\[Tau]", "\[Rule]", "\[Tau]p"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "im\[Lambda]1", ",", "im\[Lambda]2", ",", "im\[Lambda]3", ",", 
         "im\[Lambda]4", ",", "im\[Lambda]5", ",", "im\[Lambda]6"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "0", ",", "100"}], "}"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<k\>\"", ",", "\"\<Im[\[Lambda]]\>\""}], "}"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<Im[\[Lambda]] vs k\>\""}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Im[\[Lambda]1]\>\"", ",", "\"\<Im[\[Lambda]2]\>\"", ",", 
          "\"\<Im[\[Lambda]3]\>\"", ",", "\"\<Im[\[Lambda]4]\>\"", ",", 
          "\"\<Im[\[Lambda]5]\>\"", ",", "\"\<Im[\[Lambda]6]\>\""}], 
         "}"}]}]}], "]"}]}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Make", " ", "3", "D", " ", "plots", " ", "of", " ", "real", " ", "parts",
      " ", "of", " ", "eigenvalues"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Plot3D", "[", 
      RowBox[{
       RowBox[{"Re", "[", 
        RowBox[{"\[Lambda]1", "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"g", "\[Rule]", "gp"}], ",", 
           RowBox[{"m", "\[Rule]", "mp"}], ",", 
           RowBox[{"J", "\[Rule]", "Jp"}], ",", 
           RowBox[{"lo", "\[Rule]", "lop"}], ",", 
           RowBox[{"d", "\[Rule]", "dp"}], ",", 
           RowBox[{"\[Tau]", "\[Rule]", "\[Tau]p"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "0", ",", "100"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", "0", ",", "0.5"}], "}"}], ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", "\"\<Re[\[Lambda]1] vs k and r\>\""}]}], "]"}],
      "\[IndentingNewLine]", 
     RowBox[{"Plot3D", "[", 
      RowBox[{
       RowBox[{"Re", "[", 
        RowBox[{"\[Lambda]2", "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"g", "\[Rule]", "gp"}], ",", 
           RowBox[{"m", "\[Rule]", "mp"}], ",", 
           RowBox[{"J", "\[Rule]", "Jp"}], ",", 
           RowBox[{"lo", "\[Rule]", "lop"}], ",", 
           RowBox[{"d", "\[Rule]", "dp"}], ",", 
           RowBox[{"\[Tau]", "\[Rule]", "\[Tau]p"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "0", ",", "100"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", "0", ",", "0.5"}], "}"}], ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", "\"\<Re[\[Lambda]2] vs k and r\>\""}]}], "]"}],
      "\[IndentingNewLine]", 
     RowBox[{"Plot3D", "[", 
      RowBox[{
       RowBox[{"Re", "[", 
        RowBox[{"\[Lambda]3", "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"g", "\[Rule]", "gp"}], ",", 
           RowBox[{"m", "\[Rule]", "mp"}], ",", 
           RowBox[{"J", "\[Rule]", "Jp"}], ",", 
           RowBox[{"lo", "\[Rule]", "lop"}], ",", 
           RowBox[{"d", "\[Rule]", "dp"}], ",", 
           RowBox[{"\[Tau]", "\[Rule]", "\[Tau]p"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "0", ",", "100"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", "0", ",", "0.5"}], "}"}], ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", "\"\<Re[\[Lambda]3] vs k and r\>\""}]}], "]"}],
      "\[IndentingNewLine]", 
     RowBox[{"Plot3D", "[", 
      RowBox[{
       RowBox[{"Re", "[", 
        RowBox[{"\[Lambda]4", "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"g", "\[Rule]", "gp"}], ",", 
           RowBox[{"m", "\[Rule]", "mp"}], ",", 
           RowBox[{"J", "\[Rule]", "Jp"}], ",", 
           RowBox[{"lo", "\[Rule]", "lop"}], ",", 
           RowBox[{"d", "\[Rule]", "dp"}], ",", 
           RowBox[{"\[Tau]", "\[Rule]", "\[Tau]p"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "0", ",", "100"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", "0", ",", "0.5"}], "}"}], ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", "\"\<Re[\[Lambda]4] vs k and r\>\""}]}], "]"}],
      "\[IndentingNewLine]", 
     RowBox[{"Plot3D", "[", 
      RowBox[{
       RowBox[{"Re", "[", 
        RowBox[{"\[Lambda]5", "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"g", "\[Rule]", "gp"}], ",", 
           RowBox[{"m", "\[Rule]", "mp"}], ",", 
           RowBox[{"J", "\[Rule]", "Jp"}], ",", 
           RowBox[{"lo", "\[Rule]", "lop"}], ",", 
           RowBox[{"d", "\[Rule]", "dp"}], ",", 
           RowBox[{"\[Tau]", "\[Rule]", "\[Tau]p"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "0", ",", "100"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", "0", ",", "0.5"}], "}"}], ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", "\"\<Re[\[Lambda]5] vs k and r\>\""}]}], "]"}],
      "\[IndentingNewLine]", 
     RowBox[{"Plot3D", "[", 
      RowBox[{
       RowBox[{"Re", "[", 
        RowBox[{"\[Lambda]6", "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"g", "\[Rule]", "gp"}], ",", 
           RowBox[{"m", "\[Rule]", "mp"}], ",", 
           RowBox[{"J", "\[Rule]", "Jp"}], ",", 
           RowBox[{"lo", "\[Rule]", "lop"}], ",", 
           RowBox[{"d", "\[Rule]", "dp"}], ",", 
           RowBox[{"\[Tau]", "\[Rule]", "\[Tau]p"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "0", ",", "100"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", "0", ",", "0.5"}], "}"}], ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", "\"\<Re[\[Lambda]6] vs k and r\>\""}]}], 
      "]"}]}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Make", " ", "3", "D", " ", "plots", " ", "of", " ", "imaginary", " ", 
     "parts", " ", "of", " ", "eigenvalues"}], "*)"}], "\[IndentingNewLine]", 
   
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Plot3D", "[", 
      RowBox[{
       RowBox[{"Im", "[", 
        RowBox[{"\[Lambda]1", "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"g", "\[Rule]", "gp"}], ",", 
           RowBox[{"m", "\[Rule]", "mp"}], ",", 
           RowBox[{"J", "\[Rule]", "Jp"}], ",", 
           RowBox[{"lo", "\[Rule]", "lop"}], ",", 
           RowBox[{"d", "\[Rule]", "dp"}], ",", 
           RowBox[{"\[Tau]", "\[Rule]", "\[Tau]p"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "0", ",", "100"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", "0", ",", "0.5"}], "}"}], ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", "\"\<Im[\[Lambda]1] vs k and r\>\""}]}], "]"}],
      "\[IndentingNewLine]", 
     RowBox[{"Plot3D", "[", 
      RowBox[{
       RowBox[{"Im", "[", 
        RowBox[{"\[Lambda]2", "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"g", "\[Rule]", "gp"}], ",", 
           RowBox[{"m", "\[Rule]", "mp"}], ",", 
           RowBox[{"J", "\[Rule]", "Jp"}], ",", 
           RowBox[{"lo", "\[Rule]", "lop"}], ",", 
           RowBox[{"d", "\[Rule]", "dp"}], ",", 
           RowBox[{"\[Tau]", "\[Rule]", "\[Tau]p"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "0", ",", "100"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", "0", ",", "0.5"}], "}"}], ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", "\"\<Im[\[Lambda]2] vs k and r\>\""}]}], "]"}],
      "\[IndentingNewLine]", 
     RowBox[{"Plot3D", "[", 
      RowBox[{
       RowBox[{"Im", "[", 
        RowBox[{"\[Lambda]3", "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"g", "\[Rule]", "gp"}], ",", 
           RowBox[{"m", "\[Rule]", "mp"}], ",", 
           RowBox[{"J", "\[Rule]", "Jp"}], ",", 
           RowBox[{"lo", "\[Rule]", "lop"}], ",", 
           RowBox[{"d", "\[Rule]", "dp"}], ",", 
           RowBox[{"\[Tau]", "\[Rule]", "\[Tau]p"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "0", ",", "100"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", "0", ",", "0.5"}], "}"}], ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", "\"\<Im[\[Lambda]3] vs k and r\>\""}]}], "]"}],
      "\[IndentingNewLine]", 
     RowBox[{"Plot3D", "[", 
      RowBox[{
       RowBox[{"Im", "[", 
        RowBox[{"\[Lambda]4", "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"g", "\[Rule]", "gp"}], ",", 
           RowBox[{"m", "\[Rule]", "mp"}], ",", 
           RowBox[{"J", "\[Rule]", "Jp"}], ",", 
           RowBox[{"lo", "\[Rule]", "lop"}], ",", 
           RowBox[{"d", "\[Rule]", "dp"}], ",", 
           RowBox[{"\[Tau]", "\[Rule]", "\[Tau]p"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "0", ",", "100"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", "0", ",", "0.5"}], "}"}], ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", "\"\<Im[\[Lambda]4] vs k and r\>\""}]}], "]"}],
      "\[IndentingNewLine]", 
     RowBox[{"Plot3D", "[", 
      RowBox[{
       RowBox[{"Im", "[", 
        RowBox[{"\[Lambda]5", "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"g", "\[Rule]", "gp"}], ",", 
           RowBox[{"m", "\[Rule]", "mp"}], ",", 
           RowBox[{"J", "\[Rule]", "Jp"}], ",", 
           RowBox[{"lo", "\[Rule]", "lop"}], ",", 
           RowBox[{"d", "\[Rule]", "dp"}], ",", 
           RowBox[{"\[Tau]", "\[Rule]", "\[Tau]p"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "0", ",", "100"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", "0", ",", "0.5"}], "}"}], ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", "\"\<Im[\[Lambda]5] vs k and r\>\""}]}], "]"}],
      "\[IndentingNewLine]", 
     RowBox[{"Plot3D", "[", 
      RowBox[{
       RowBox[{"Im", "[", 
        RowBox[{"\[Lambda]6", "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"g", "\[Rule]", "gp"}], ",", 
           RowBox[{"m", "\[Rule]", "mp"}], ",", 
           RowBox[{"J", "\[Rule]", "Jp"}], ",", 
           RowBox[{"lo", "\[Rule]", "lop"}], ",", 
           RowBox[{"d", "\[Rule]", "dp"}], ",", 
           RowBox[{"\[Tau]", "\[Rule]", "\[Tau]p"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "0", ",", "100"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", "0", ",", "0.5"}], "}"}], ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", "\"\<Im[\[Lambda]6] vs k and r\>\""}]}], 
      "]"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"\"\<\[Lambda]1 = \>\"", ",", 
       RowBox[{"\[Lambda]1", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"g", "\[Rule]", "gp"}], ",", 
          RowBox[{"m", "\[Rule]", "mp"}], ",", 
          RowBox[{"J", "\[Rule]", "Jp"}], ",", 
          RowBox[{"k", "\[Rule]", "kp"}], ",", 
          RowBox[{"lo", "\[Rule]", "lop"}], ",", 
          RowBox[{"d", "\[Rule]", "dp"}], ",", 
          RowBox[{"r", "\[Rule]", "rp"}], ",", 
          RowBox[{"\[Tau]", "\[Rule]", "\[Tau]p"}]}], "}"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<\[Lambda]2 = \>\"", ",", 
       RowBox[{"\[Lambda]2", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"g", "\[Rule]", "gp"}], ",", 
          RowBox[{"m", "\[Rule]", "mp"}], ",", 
          RowBox[{"J", "\[Rule]", "Jp"}], ",", 
          RowBox[{"k", "\[Rule]", "kp"}], ",", 
          RowBox[{"lo", "\[Rule]", "lop"}], ",", 
          RowBox[{"d", "\[Rule]", "dp"}], ",", 
          RowBox[{"r", "\[Rule]", "rp"}], ",", 
          RowBox[{"\[Tau]", "\[Rule]", "\[Tau]p"}]}], "}"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<\[Lambda]3 = \>\"", ",", 
       RowBox[{"\[Lambda]3", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"g", "\[Rule]", "gp"}], ",", 
          RowBox[{"m", "\[Rule]", "mp"}], ",", 
          RowBox[{"J", "\[Rule]", "Jp"}], ",", 
          RowBox[{"k", "\[Rule]", "kp"}], ",", 
          RowBox[{"lo", "\[Rule]", "lop"}], ",", 
          RowBox[{"d", "\[Rule]", "dp"}], ",", 
          RowBox[{"r", "\[Rule]", "rp"}], ",", 
          RowBox[{"\[Tau]", "\[Rule]", "\[Tau]p"}]}], "}"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<\[Lambda]4 = \>\"", ",", 
       RowBox[{"\[Lambda]4", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"g", "\[Rule]", "gp"}], ",", 
          RowBox[{"m", "\[Rule]", "mp"}], ",", 
          RowBox[{"J", "\[Rule]", "Jp"}], ",", 
          RowBox[{"k", "\[Rule]", "kp"}], ",", 
          RowBox[{"lo", "\[Rule]", "lop"}], ",", 
          RowBox[{"d", "\[Rule]", "dp"}], ",", 
          RowBox[{"r", "\[Rule]", "rp"}], ",", 
          RowBox[{"\[Tau]", "\[Rule]", "\[Tau]p"}]}], "}"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<\[Lambda]5 = \>\"", ",", 
       RowBox[{"\[Lambda]5", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"g", "\[Rule]", "gp"}], ",", 
          RowBox[{"m", "\[Rule]", "mp"}], ",", 
          RowBox[{"J", "\[Rule]", "Jp"}], ",", 
          RowBox[{"k", "\[Rule]", "kp"}], ",", 
          RowBox[{"lo", "\[Rule]", "lop"}], ",", 
          RowBox[{"d", "\[Rule]", "dp"}], ",", 
          RowBox[{"r", "\[Rule]", "rp"}], ",", 
          RowBox[{"\[Tau]", "\[Rule]", "\[Tau]p"}]}], "}"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<\[Lambda]6 = \>\"", ",", 
       RowBox[{"\[Lambda]6", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"g", "\[Rule]", "gp"}], ",", 
          RowBox[{"m", "\[Rule]", "mp"}], ",", 
          RowBox[{"J", "\[Rule]", "Jp"}], ",", 
          RowBox[{"k", "\[Rule]", "kp"}], ",", 
          RowBox[{"lo", "\[Rule]", "lop"}], ",", 
          RowBox[{"d", "\[Rule]", "dp"}], ",", 
          RowBox[{"r", "\[Rule]", "rp"}], ",", 
          RowBox[{"\[Tau]", "\[Rule]", "\[Tau]p"}]}], "}"}]}]}], "]"}], ";"}],
     "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.736519363016491*^9, 3.7365194128318644`*^9}, {
   3.7365196113875027`*^9, 3.7365196470029783`*^9}, {3.73652034136782*^9, 
   3.736520360856154*^9}, {3.736520402092198*^9, 3.736520417850794*^9}, {
   3.7365204479720078`*^9, 3.736520453539569*^9}, {3.7365206205091753`*^9, 
   3.736520649399062*^9}, {3.736520889883504*^9, 3.736520912485444*^9}, {
   3.736520958412409*^9, 3.736520998067481*^9}, {3.736521154010371*^9, 
   3.736521296478944*^9}, {3.736521388608549*^9, 3.736521514983369*^9}, {
   3.736521856710371*^9, 3.7365218966537237`*^9}, {3.736521931991708*^9, 
   3.736522087197915*^9}, {3.73652223454077*^9, 3.736522302678068*^9}, {
   3.736522345755361*^9, 3.7365224911302557`*^9}, 3.7365225223069077`*^9, {
   3.736523291292894*^9, 3.736523382444422*^9}, {3.736523425668459*^9, 
   3.73652342573421*^9}, {3.736523461580514*^9, 3.7365234619241247`*^9}, {
   3.7365234944875097`*^9, 3.7365236696529284`*^9}, {3.736523856075597*^9, 
   3.736524047011303*^9}, {3.736524096463682*^9, 3.736524200172462*^9}, {
   3.736524230783226*^9, 3.736524266646834*^9}, {3.736524306634345*^9, 
   3.736524331007943*^9}, {3.7365245167168417`*^9, 3.7365245601300364`*^9}, {
   3.736524618161541*^9, 3.736524741541298*^9}, {3.736525186514789*^9, 
   3.7365254683072166`*^9}, {3.736525552821887*^9, 3.736525644910824*^9}, {
   3.736543143200947*^9, 3.736543194349092*^9}, {3.73654582504886*^9, 
   3.73654583904217*^9}, {3.7365460132443132`*^9, 3.736546141890712*^9}, {
   3.7365462808802357`*^9, 3.736546372303257*^9}, {3.736546517541819*^9, 
   3.7365465341710443`*^9}, {3.736546592844489*^9, 3.736546597914008*^9}, 
   3.736546876206299*^9, {3.736594825042705*^9, 3.736594843145035*^9}, {
   3.7365957464402733`*^9, 3.7365958062624598`*^9}, {3.73659876813939*^9, 
   3.736598909993078*^9}, {3.7365989907997932`*^9, 3.7365990502277737`*^9}, {
   3.736617152237441*^9, 3.736617188227333*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.736524156019904*^9, 3.736524202454896*^9, 3.73652427565738*^9, 
   3.736524334194145*^9, 3.736524563771443*^9, 3.73652464696084*^9, 
   3.736524743996776*^9, 3.73652525511895*^9, 3.73652535811819*^9, 
   3.736525416736642*^9, {3.73652546067836*^9, 3.736525470194426*^9}, 
   3.736525647732155*^9, 3.7365431082524233`*^9, 3.73654319549398*^9, 
   3.7365458508714333`*^9, 3.736545963677993*^9, 3.736546161785679*^9, 
   3.7365464994447393`*^9, 3.736546536451557*^9, 3.7365465986479797`*^9, 
   3.736546810047646*^9, 3.736546878930722*^9, 3.736594101844852*^9, 
   3.7365977516261168`*^9, {3.7365990251784277`*^9, 3.7365990509722433`*^9}, 
   3.736601008909446*^9, 3.736616656984948*^9, 3.736617153533084*^9, 
   3.736617188931101*^9, 3.7366183246733923`*^9, 3.7366832064656677`*^9, 
   3.7366975998423243`*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.736524156019904*^9, 3.736524202454896*^9, 3.73652427565738*^9, 
   3.736524334194145*^9, 3.736524563771443*^9, 3.73652464696084*^9, 
   3.736524743996776*^9, 3.73652525511895*^9, 3.73652535811819*^9, 
   3.736525416736642*^9, {3.73652546067836*^9, 3.736525470194426*^9}, 
   3.736525647732155*^9, 3.7365431082524233`*^9, 3.73654319549398*^9, 
   3.7365458508714333`*^9, 3.736545963677993*^9, 3.736546161785679*^9, 
   3.7365464994447393`*^9, 3.736546536451557*^9, 3.7365465986479797`*^9, 
   3.736546810047646*^9, 3.736546878930722*^9, 3.736594101844852*^9, 
   3.7365977516261168`*^9, {3.7365990251784277`*^9, 3.7365990509722433`*^9}, 
   3.736601008909446*^9, 3.736616656984948*^9, 3.736617153533084*^9, 
   3.736617188931101*^9, 3.7366183246733923`*^9, 3.7366832064656677`*^9, 
   3.736697599844615*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.736524156019904*^9, 3.736524202454896*^9, 3.73652427565738*^9, 
   3.736524334194145*^9, 3.736524563771443*^9, 3.73652464696084*^9, 
   3.736524743996776*^9, 3.73652525511895*^9, 3.73652535811819*^9, 
   3.736525416736642*^9, {3.73652546067836*^9, 3.736525470194426*^9}, 
   3.736525647732155*^9, 3.7365431082524233`*^9, 3.73654319549398*^9, 
   3.7365458508714333`*^9, 3.736545963677993*^9, 3.736546161785679*^9, 
   3.7365464994447393`*^9, 3.736546536451557*^9, 3.7365465986479797`*^9, 
   3.736546810047646*^9, 3.736546878930722*^9, 3.736594101844852*^9, 
   3.7365977516261168`*^9, {3.7365990251784277`*^9, 3.7365990509722433`*^9}, 
   3.736601008909446*^9, 3.736616656984948*^9, 3.736617153533084*^9, 
   3.736617188931101*^9, 3.7366183246733923`*^9, 3.7366832064656677`*^9, 
   3.7366975998454933`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Jacobian = \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "1", "0", "0", "0", "0"},
       {
        FractionBox[
         RowBox[{"g", " ", "k", " ", 
          RowBox[{"(", 
           RowBox[{"J", "+", 
            RowBox[{
             SuperscriptBox["d", "2"], " ", "m"}]}], ")"}]}], 
         RowBox[{"J", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"k", " ", "lo"}], "-", 
            RowBox[{"g", " ", "m"}]}], ")"}]}]], "0", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["d", "2"], " ", "g", " ", "k", " ", "m"}], 
          RowBox[{
           RowBox[{"J", " ", "k", " ", "lo"}], "-", 
           RowBox[{"g", " ", "J", " ", "m"}]}]]}], "0", "0", "0"},
       {"0", "0", "0", "1", "0", "0"},
       {
        RowBox[{"-", 
         FractionBox[
          RowBox[{"d", " ", "g", " ", "m"}], "J"]}], "0", 
        FractionBox[
         RowBox[{"d", " ", "g", " ", "m"}], "J"], "0", "0", "0"},
       {"0", "0", "0", "0", "0", "1"},
       {"0", "0", "0", "0", 
        RowBox[{"-", 
         FractionBox["k", "m"]}], "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Jacobian = ", 
   MatrixForm[{{0, 1, 0, 0, 0, 
     0}, {$CellContext`g $CellContext`J^(-1) $CellContext`k ($CellContext`J + \
$CellContext`d^2 $CellContext`m)/($CellContext`k $CellContext`lo - \
$CellContext`g $CellContext`m), 
      0, -$CellContext`d^2 $CellContext`g $CellContext`k \
$CellContext`m/($CellContext`J $CellContext`k $CellContext`lo - \
$CellContext`g $CellContext`J $CellContext`m), 0, 0, 0}, {0, 0, 0, 1, 0, 
     0}, {-$CellContext`d $CellContext`g $CellContext`J^(-1) $CellContext`m, 
      0, $CellContext`d $CellContext`g $CellContext`J^(-1) $CellContext`m, 0, 
      0, 0}, {0, 0, 0, 0, 0, 1}, {
     0, 0, 0, 0, -$CellContext`k/$CellContext`m, 0}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.736522492365445*^9, 3.736522532429553*^9, 3.7365232392570753`*^9, 
   3.73652332836415*^9, 3.7365233887229357`*^9, {3.736523573495161*^9, 
   3.736523617878599*^9}, 3.736523670276553*^9, 3.7365237309340553`*^9, {
   3.736523859881588*^9, 3.736523887001202*^9}, {3.736523930854713*^9, 
   3.7365239399481163`*^9}, {3.7365240011634207`*^9, 3.736524014313908*^9}, 
   3.736524048596305*^9, 3.736524155921874*^9, 3.736524201640396*^9, 
   3.73652427483202*^9, 3.736524333369296*^9, 3.736524562941326*^9, 
   3.736524646140069*^9, 3.73652474315688*^9, 3.7365252543171473`*^9, 
   3.7365253572823687`*^9, 3.736525415817153*^9, {3.736525459829924*^9, 
   3.736525469338182*^9}, 3.736525646879739*^9, 3.736543106873024*^9, 
   3.736543195499382*^9, 3.736545850879722*^9, 3.7365459636860313`*^9, 
   3.736546161794252*^9, 3.736546499450292*^9, 3.7365465364602747`*^9, 
   3.736546598686184*^9, 3.73654681008366*^9, 3.7365468789376717`*^9, 
   3.736594101848825*^9, 3.7365977517125397`*^9, {3.7365990251850224`*^9, 
   3.736599051022747*^9}, 3.736601008953717*^9, 3.736616657029498*^9, 
   3.7366171535714207`*^9, 3.736617188941793*^9, 3.736618324720004*^9, 
   3.73668320650485*^9, 3.736697599881364*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"B matix = \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0"},
       {
        RowBox[{"-", 
         FractionBox[
          RowBox[{"d", " ", "k"}], 
          RowBox[{
           RowBox[{"J", " ", "k", " ", "lo"}], "-", 
           RowBox[{"g", " ", "J", " ", "m"}]}]]}]},
       {"0"},
       {
        FractionBox["1", "J"]},
       {"0"},
       {"0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["B matix = ", 
   MatrixForm[{{
     0}, {-$CellContext`d $CellContext`k/($CellContext`J $CellContext`k \
$CellContext`lo - $CellContext`g $CellContext`J $CellContext`m)}, {
     0}, {$CellContext`J^(-1)}, {0}, {0}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.736522492365445*^9, 3.736522532429553*^9, 3.7365232392570753`*^9, 
   3.73652332836415*^9, 3.7365233887229357`*^9, {3.736523573495161*^9, 
   3.736523617878599*^9}, 3.736523670276553*^9, 3.7365237309340553`*^9, {
   3.736523859881588*^9, 3.736523887001202*^9}, {3.736523930854713*^9, 
   3.7365239399481163`*^9}, {3.7365240011634207`*^9, 3.736524014313908*^9}, 
   3.736524048596305*^9, 3.736524155921874*^9, 3.736524201640396*^9, 
   3.73652427483202*^9, 3.736524333369296*^9, 3.736524562941326*^9, 
   3.736524646140069*^9, 3.73652474315688*^9, 3.7365252543171473`*^9, 
   3.7365253572823687`*^9, 3.736525415817153*^9, {3.736525459829924*^9, 
   3.736525469338182*^9}, 3.736525646879739*^9, 3.736543106873024*^9, 
   3.736543195499382*^9, 3.736545850879722*^9, 3.7365459636860313`*^9, 
   3.736546161794252*^9, 3.736546499450292*^9, 3.7365465364602747`*^9, 
   3.736546598686184*^9, 3.73654681008366*^9, 3.7365468789376717`*^9, 
   3.736594101848825*^9, 3.7365977517125397`*^9, {3.7365990251850224`*^9, 
   3.736599051022747*^9}, 3.736601008953717*^9, 3.736616657029498*^9, 
   3.7366171535714207`*^9, 3.736617188941793*^9, 3.736618324720004*^9, 
   3.73668320650485*^9, 3.73669759988258*^9}],

Cell[BoxData["\<\"Eigenvalues:\"\>"], "Print",
 CellChangeTimes->{
  3.736522492365445*^9, 3.736522532429553*^9, 3.7365232392570753`*^9, 
   3.73652332836415*^9, 3.7365233887229357`*^9, {3.736523573495161*^9, 
   3.736523617878599*^9}, 3.736523670276553*^9, 3.7365237309340553`*^9, {
   3.736523859881588*^9, 3.736523887001202*^9}, {3.736523930854713*^9, 
   3.7365239399481163`*^9}, {3.7365240011634207`*^9, 3.736524014313908*^9}, 
   3.736524048596305*^9, 3.736524155921874*^9, 3.736524201640396*^9, 
   3.73652427483202*^9, 3.736524333369296*^9, 3.736524562941326*^9, 
   3.736524646140069*^9, 3.73652474315688*^9, 3.7365252543171473`*^9, 
   3.7365253572823687`*^9, 3.736525415817153*^9, {3.736525459829924*^9, 
   3.736525469338182*^9}, 3.736525646879739*^9, 3.736543106873024*^9, 
   3.736543195499382*^9, 3.736545850879722*^9, 3.7365459636860313`*^9, 
   3.736546161794252*^9, 3.736546499450292*^9, 3.7365465364602747`*^9, 
   3.736546598686184*^9, 3.73654681008366*^9, 3.7365468789376717`*^9, 
   3.736594101848825*^9, 3.7365977517125397`*^9, {3.7365990251850224`*^9, 
   3.736599051022747*^9}, 3.736601008953717*^9, 3.736616657029498*^9, 
   3.7366171535714207`*^9, 3.736617188941793*^9, 3.736618324720004*^9, 
   3.73668320650485*^9, 3.736697602157405*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\[Lambda]1 = \"\>", "\[InvisibleSpace]", 
   FractionBox[
    RowBox[{"\[ImaginaryI]", " ", 
     SqrtBox["k"]}], 
    SqrtBox["m"]]}],
  SequenceForm[
  "\[Lambda]1 = ", 
   Complex[0, 1] $CellContext`k^Rational[1, 2] $CellContext`m^Rational[-1, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.736522492365445*^9, 3.736522532429553*^9, 3.7365232392570753`*^9, 
   3.73652332836415*^9, 3.7365233887229357`*^9, {3.736523573495161*^9, 
   3.736523617878599*^9}, 3.736523670276553*^9, 3.7365237309340553`*^9, {
   3.736523859881588*^9, 3.736523887001202*^9}, {3.736523930854713*^9, 
   3.7365239399481163`*^9}, {3.7365240011634207`*^9, 3.736524014313908*^9}, 
   3.736524048596305*^9, 3.736524155921874*^9, 3.736524201640396*^9, 
   3.73652427483202*^9, 3.736524333369296*^9, 3.736524562941326*^9, 
   3.736524646140069*^9, 3.73652474315688*^9, 3.7365252543171473`*^9, 
   3.7365253572823687`*^9, 3.736525415817153*^9, {3.736525459829924*^9, 
   3.736525469338182*^9}, 3.736525646879739*^9, 3.736543106873024*^9, 
   3.736543195499382*^9, 3.736545850879722*^9, 3.7365459636860313`*^9, 
   3.736546161794252*^9, 3.736546499450292*^9, 3.7365465364602747`*^9, 
   3.736546598686184*^9, 3.73654681008366*^9, 3.7365468789376717`*^9, 
   3.736594101848825*^9, 3.7365977517125397`*^9, {3.7365990251850224`*^9, 
   3.736599051022747*^9}, 3.736601008953717*^9, 3.736616657029498*^9, 
   3.7366171535714207`*^9, 3.736617188941793*^9, 3.736618324720004*^9, 
   3.73668320650485*^9, 3.736697602184952*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\[Lambda]2 = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", 
      SqrtBox["k"]}], 
     SqrtBox["m"]]}]}],
  SequenceForm[
  "\[Lambda]2 = ", 
   Complex[0, -1] $CellContext`k^Rational[1, 2] $CellContext`m^
    Rational[-1, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.736522492365445*^9, 3.736522532429553*^9, 3.7365232392570753`*^9, 
   3.73652332836415*^9, 3.7365233887229357`*^9, {3.736523573495161*^9, 
   3.736523617878599*^9}, 3.736523670276553*^9, 3.7365237309340553`*^9, {
   3.736523859881588*^9, 3.736523887001202*^9}, {3.736523930854713*^9, 
   3.7365239399481163`*^9}, {3.7365240011634207`*^9, 3.736524014313908*^9}, 
   3.736524048596305*^9, 3.736524155921874*^9, 3.736524201640396*^9, 
   3.73652427483202*^9, 3.736524333369296*^9, 3.736524562941326*^9, 
   3.736524646140069*^9, 3.73652474315688*^9, 3.7365252543171473`*^9, 
   3.7365253572823687`*^9, 3.736525415817153*^9, {3.736525459829924*^9, 
   3.736525469338182*^9}, 3.736525646879739*^9, 3.736543106873024*^9, 
   3.736543195499382*^9, 3.736545850879722*^9, 3.7365459636860313`*^9, 
   3.736546161794252*^9, 3.736546499450292*^9, 3.7365465364602747`*^9, 
   3.736546598686184*^9, 3.73654681008366*^9, 3.7365468789376717`*^9, 
   3.736594101848825*^9, 3.7365977517125397`*^9, {3.7365990251850224`*^9, 
   3.736599051022747*^9}, 3.736601008953717*^9, 3.736616657029498*^9, 
   3.7366171535714207`*^9, 3.736617188941793*^9, 3.736618324720004*^9, 
   3.73668320650485*^9, 3.736697602188066*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\[Lambda]3 = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", 
    FractionBox[
     SqrtBox[
      RowBox[{"g", " ", "J", " ", 
       SuperscriptBox["m", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"k", " ", "lo"}], "-", 
         RowBox[{"g", " ", "m"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"J", " ", "k"}], "+", 
         RowBox[{"d", " ", "m", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"k", " ", 
             RowBox[{"(", 
              RowBox[{"d", "+", "lo"}], ")"}]}], "-", 
            RowBox[{"g", " ", "m"}]}], ")"}]}], "+", 
         SqrtBox[
          RowBox[{
           RowBox[{
            SuperscriptBox["J", "2"], " ", 
            SuperscriptBox["k", "2"]}], "+", 
           RowBox[{
            SuperscriptBox["d", "2"], " ", 
            SuperscriptBox["m", "2"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"k", " ", 
                RowBox[{"(", 
                 RowBox[{"d", "+", "lo"}], ")"}]}], "-", 
               RowBox[{"g", " ", "m"}]}], ")"}], "2"]}], "+", 
           RowBox[{"2", " ", "d", " ", "J", " ", "k", " ", "m", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"d", " ", "k"}], "-", 
              RowBox[{"k", " ", "lo"}], "+", 
              RowBox[{"g", " ", "m"}]}], ")"}]}]}]]}], ")"}]}]], 
     RowBox[{
      SqrtBox["2"], " ", "J", " ", "m", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "k"}], " ", "lo"}], "+", 
        RowBox[{"g", " ", "m"}]}], ")"}]}]]}]}],
  SequenceForm[
  "\[Lambda]3 = ", -2^
    Rational[-1, 
      2] $CellContext`J^(-1) $CellContext`m^(-1) (-$CellContext`k \
$CellContext`lo + $CellContext`g $CellContext`m)^(-1) ($CellContext`g \
$CellContext`J $CellContext`m^2 ($CellContext`k $CellContext`lo - \
$CellContext`g $CellContext`m) ($CellContext`J $CellContext`k + \
$CellContext`d $CellContext`m ($CellContext`k ($CellContext`d + \
$CellContext`lo) - $CellContext`g $CellContext`m) + ($CellContext`J^2 \
$CellContext`k^2 + $CellContext`d^2 $CellContext`m^2 ($CellContext`k \
($CellContext`d + $CellContext`lo) - $CellContext`g $CellContext`m)^2 + 
        2 $CellContext`d $CellContext`J $CellContext`k $CellContext`m \
($CellContext`d $CellContext`k - $CellContext`k $CellContext`lo + \
$CellContext`g $CellContext`m))^Rational[1, 2]))^Rational[1, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.736522492365445*^9, 3.736522532429553*^9, 3.7365232392570753`*^9, 
   3.73652332836415*^9, 3.7365233887229357`*^9, {3.736523573495161*^9, 
   3.736523617878599*^9}, 3.736523670276553*^9, 3.7365237309340553`*^9, {
   3.736523859881588*^9, 3.736523887001202*^9}, {3.736523930854713*^9, 
   3.7365239399481163`*^9}, {3.7365240011634207`*^9, 3.736524014313908*^9}, 
   3.736524048596305*^9, 3.736524155921874*^9, 3.736524201640396*^9, 
   3.73652427483202*^9, 3.736524333369296*^9, 3.736524562941326*^9, 
   3.736524646140069*^9, 3.73652474315688*^9, 3.7365252543171473`*^9, 
   3.7365253572823687`*^9, 3.736525415817153*^9, {3.736525459829924*^9, 
   3.736525469338182*^9}, 3.736525646879739*^9, 3.736543106873024*^9, 
   3.736543195499382*^9, 3.736545850879722*^9, 3.7365459636860313`*^9, 
   3.736546161794252*^9, 3.736546499450292*^9, 3.7365465364602747`*^9, 
   3.736546598686184*^9, 3.73654681008366*^9, 3.7365468789376717`*^9, 
   3.736594101848825*^9, 3.7365977517125397`*^9, {3.7365990251850224`*^9, 
   3.736599051022747*^9}, 3.736601008953717*^9, 3.736616657029498*^9, 
   3.7366171535714207`*^9, 3.736617188941793*^9, 3.736618324720004*^9, 
   3.73668320650485*^9, 3.736697602357006*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\[Lambda]4 = \"\>", "\[InvisibleSpace]", 
   FractionBox[
    SqrtBox[
     RowBox[{"g", " ", "J", " ", 
      SuperscriptBox["m", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"k", " ", "lo"}], "-", 
        RowBox[{"g", " ", "m"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"J", " ", "k"}], "+", 
        RowBox[{"d", " ", "m", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"k", " ", 
            RowBox[{"(", 
             RowBox[{"d", "+", "lo"}], ")"}]}], "-", 
           RowBox[{"g", " ", "m"}]}], ")"}]}], "+", 
        SqrtBox[
         RowBox[{
          RowBox[{
           SuperscriptBox["J", "2"], " ", 
           SuperscriptBox["k", "2"]}], "+", 
          RowBox[{
           SuperscriptBox["d", "2"], " ", 
           SuperscriptBox["m", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"k", " ", 
               RowBox[{"(", 
                RowBox[{"d", "+", "lo"}], ")"}]}], "-", 
              RowBox[{"g", " ", "m"}]}], ")"}], "2"]}], "+", 
          RowBox[{"2", " ", "d", " ", "J", " ", "k", " ", "m", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"d", " ", "k"}], "-", 
             RowBox[{"k", " ", "lo"}], "+", 
             RowBox[{"g", " ", "m"}]}], ")"}]}]}]]}], ")"}]}]], 
    RowBox[{
     SqrtBox["2"], " ", "J", " ", "m", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "k"}], " ", "lo"}], "+", 
       RowBox[{"g", " ", "m"}]}], ")"}]}]]}],
  SequenceForm[
  "\[Lambda]4 = ", 
   2^Rational[-1, 
      2] $CellContext`J^(-1) $CellContext`m^(-1) (-$CellContext`k \
$CellContext`lo + $CellContext`g $CellContext`m)^(-1) ($CellContext`g \
$CellContext`J $CellContext`m^2 ($CellContext`k $CellContext`lo - \
$CellContext`g $CellContext`m) ($CellContext`J $CellContext`k + \
$CellContext`d $CellContext`m ($CellContext`k ($CellContext`d + \
$CellContext`lo) - $CellContext`g $CellContext`m) + ($CellContext`J^2 \
$CellContext`k^2 + $CellContext`d^2 $CellContext`m^2 ($CellContext`k \
($CellContext`d + $CellContext`lo) - $CellContext`g $CellContext`m)^2 + 
        2 $CellContext`d $CellContext`J $CellContext`k $CellContext`m \
($CellContext`d $CellContext`k - $CellContext`k $CellContext`lo + \
$CellContext`g $CellContext`m))^Rational[1, 2]))^Rational[1, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.736522492365445*^9, 3.736522532429553*^9, 3.7365232392570753`*^9, 
   3.73652332836415*^9, 3.7365233887229357`*^9, {3.736523573495161*^9, 
   3.736523617878599*^9}, 3.736523670276553*^9, 3.7365237309340553`*^9, {
   3.736523859881588*^9, 3.736523887001202*^9}, {3.736523930854713*^9, 
   3.7365239399481163`*^9}, {3.7365240011634207`*^9, 3.736524014313908*^9}, 
   3.736524048596305*^9, 3.736524155921874*^9, 3.736524201640396*^9, 
   3.73652427483202*^9, 3.736524333369296*^9, 3.736524562941326*^9, 
   3.736524646140069*^9, 3.73652474315688*^9, 3.7365252543171473`*^9, 
   3.7365253572823687`*^9, 3.736525415817153*^9, {3.736525459829924*^9, 
   3.736525469338182*^9}, 3.736525646879739*^9, 3.736543106873024*^9, 
   3.736543195499382*^9, 3.736545850879722*^9, 3.7365459636860313`*^9, 
   3.736546161794252*^9, 3.736546499450292*^9, 3.7365465364602747`*^9, 
   3.736546598686184*^9, 3.73654681008366*^9, 3.7365468789376717`*^9, 
   3.736594101848825*^9, 3.7365977517125397`*^9, {3.7365990251850224`*^9, 
   3.736599051022747*^9}, 3.736601008953717*^9, 3.736616657029498*^9, 
   3.7366171535714207`*^9, 3.736617188941793*^9, 3.736618324720004*^9, 
   3.73668320650485*^9, 3.736697602439839*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\[Lambda]5 = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", 
    FractionBox[
     SqrtBox[
      RowBox[{"g", " ", "J", " ", 
       SuperscriptBox["m", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "k"}], " ", "lo"}], "+", 
         RowBox[{"g", " ", "m"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "J"}], " ", "k"}], "+", 
         RowBox[{"d", " ", "m", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "k"}], " ", 
             RowBox[{"(", 
              RowBox[{"d", "+", "lo"}], ")"}]}], "+", 
            RowBox[{"g", " ", "m"}]}], ")"}]}], "+", 
         SqrtBox[
          RowBox[{
           RowBox[{
            SuperscriptBox["J", "2"], " ", 
            SuperscriptBox["k", "2"]}], "+", 
           RowBox[{
            SuperscriptBox["d", "2"], " ", 
            SuperscriptBox["m", "2"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"k", " ", 
                RowBox[{"(", 
                 RowBox[{"d", "+", "lo"}], ")"}]}], "-", 
               RowBox[{"g", " ", "m"}]}], ")"}], "2"]}], "+", 
           RowBox[{"2", " ", "d", " ", "J", " ", "k", " ", "m", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"d", " ", "k"}], "-", 
              RowBox[{"k", " ", "lo"}], "+", 
              RowBox[{"g", " ", "m"}]}], ")"}]}]}]]}], ")"}]}]], 
     RowBox[{
      SqrtBox["2"], " ", "J", " ", "m", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "k"}], " ", "lo"}], "+", 
        RowBox[{"g", " ", "m"}]}], ")"}]}]]}]}],
  SequenceForm[
  "\[Lambda]5 = ", -2^
    Rational[-1, 
      2] $CellContext`J^(-1) $CellContext`m^(-1) (-$CellContext`k \
$CellContext`lo + $CellContext`g $CellContext`m)^(-1) ($CellContext`g \
$CellContext`J $CellContext`m^2 (-$CellContext`k $CellContext`lo + \
$CellContext`g $CellContext`m) (-$CellContext`J $CellContext`k + \
$CellContext`d $CellContext`m (-$CellContext`k ($CellContext`d + \
$CellContext`lo) + $CellContext`g $CellContext`m) + ($CellContext`J^2 \
$CellContext`k^2 + $CellContext`d^2 $CellContext`m^2 ($CellContext`k \
($CellContext`d + $CellContext`lo) - $CellContext`g $CellContext`m)^2 + 
        2 $CellContext`d $CellContext`J $CellContext`k $CellContext`m \
($CellContext`d $CellContext`k - $CellContext`k $CellContext`lo + \
$CellContext`g $CellContext`m))^Rational[1, 2]))^Rational[1, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.736522492365445*^9, 3.736522532429553*^9, 3.7365232392570753`*^9, 
   3.73652332836415*^9, 3.7365233887229357`*^9, {3.736523573495161*^9, 
   3.736523617878599*^9}, 3.736523670276553*^9, 3.7365237309340553`*^9, {
   3.736523859881588*^9, 3.736523887001202*^9}, {3.736523930854713*^9, 
   3.7365239399481163`*^9}, {3.7365240011634207`*^9, 3.736524014313908*^9}, 
   3.736524048596305*^9, 3.736524155921874*^9, 3.736524201640396*^9, 
   3.73652427483202*^9, 3.736524333369296*^9, 3.736524562941326*^9, 
   3.736524646140069*^9, 3.73652474315688*^9, 3.7365252543171473`*^9, 
   3.7365253572823687`*^9, 3.736525415817153*^9, {3.736525459829924*^9, 
   3.736525469338182*^9}, 3.736525646879739*^9, 3.736543106873024*^9, 
   3.736543195499382*^9, 3.736545850879722*^9, 3.7365459636860313`*^9, 
   3.736546161794252*^9, 3.736546499450292*^9, 3.7365465364602747`*^9, 
   3.736546598686184*^9, 3.73654681008366*^9, 3.7365468789376717`*^9, 
   3.736594101848825*^9, 3.7365977517125397`*^9, {3.7365990251850224`*^9, 
   3.736599051022747*^9}, 3.736601008953717*^9, 3.736616657029498*^9, 
   3.7366171535714207`*^9, 3.736617188941793*^9, 3.736618324720004*^9, 
   3.73668320650485*^9, 3.736697602612884*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\[Lambda]6 = \"\>", "\[InvisibleSpace]", 
   FractionBox[
    SqrtBox[
     RowBox[{"g", " ", "J", " ", 
      SuperscriptBox["m", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "k"}], " ", "lo"}], "+", 
        RowBox[{"g", " ", "m"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "J"}], " ", "k"}], "+", 
        RowBox[{"d", " ", "m", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "k"}], " ", 
            RowBox[{"(", 
             RowBox[{"d", "+", "lo"}], ")"}]}], "+", 
           RowBox[{"g", " ", "m"}]}], ")"}]}], "+", 
        SqrtBox[
         RowBox[{
          RowBox[{
           SuperscriptBox["J", "2"], " ", 
           SuperscriptBox["k", "2"]}], "+", 
          RowBox[{
           SuperscriptBox["d", "2"], " ", 
           SuperscriptBox["m", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"k", " ", 
               RowBox[{"(", 
                RowBox[{"d", "+", "lo"}], ")"}]}], "-", 
              RowBox[{"g", " ", "m"}]}], ")"}], "2"]}], "+", 
          RowBox[{"2", " ", "d", " ", "J", " ", "k", " ", "m", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"d", " ", "k"}], "-", 
             RowBox[{"k", " ", "lo"}], "+", 
             RowBox[{"g", " ", "m"}]}], ")"}]}]}]]}], ")"}]}]], 
    RowBox[{
     SqrtBox["2"], " ", "J", " ", "m", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "k"}], " ", "lo"}], "+", 
       RowBox[{"g", " ", "m"}]}], ")"}]}]]}],
  SequenceForm[
  "\[Lambda]6 = ", 
   2^Rational[-1, 
      2] $CellContext`J^(-1) $CellContext`m^(-1) (-$CellContext`k \
$CellContext`lo + $CellContext`g $CellContext`m)^(-1) ($CellContext`g \
$CellContext`J $CellContext`m^2 (-$CellContext`k $CellContext`lo + \
$CellContext`g $CellContext`m) (-$CellContext`J $CellContext`k + \
$CellContext`d $CellContext`m (-$CellContext`k ($CellContext`d + \
$CellContext`lo) + $CellContext`g $CellContext`m) + ($CellContext`J^2 \
$CellContext`k^2 + $CellContext`d^2 $CellContext`m^2 ($CellContext`k \
($CellContext`d + $CellContext`lo) - $CellContext`g $CellContext`m)^2 + 
        2 $CellContext`d $CellContext`J $CellContext`k $CellContext`m \
($CellContext`d $CellContext`k - $CellContext`k $CellContext`lo + \
$CellContext`g $CellContext`m))^Rational[1, 2]))^Rational[1, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.736522492365445*^9, 3.736522532429553*^9, 3.7365232392570753`*^9, 
   3.73652332836415*^9, 3.7365233887229357`*^9, {3.736523573495161*^9, 
   3.736523617878599*^9}, 3.736523670276553*^9, 3.7365237309340553`*^9, {
   3.736523859881588*^9, 3.736523887001202*^9}, {3.736523930854713*^9, 
   3.7365239399481163`*^9}, {3.7365240011634207`*^9, 3.736524014313908*^9}, 
   3.736524048596305*^9, 3.736524155921874*^9, 3.736524201640396*^9, 
   3.73652427483202*^9, 3.736524333369296*^9, 3.736524562941326*^9, 
   3.736524646140069*^9, 3.73652474315688*^9, 3.7365252543171473`*^9, 
   3.7365253572823687`*^9, 3.736525415817153*^9, {3.736525459829924*^9, 
   3.736525469338182*^9}, 3.736525646879739*^9, 3.736543106873024*^9, 
   3.736543195499382*^9, 3.736545850879722*^9, 3.7365459636860313`*^9, 
   3.736546161794252*^9, 3.736546499450292*^9, 3.7365465364602747`*^9, 
   3.736546598686184*^9, 3.73654681008366*^9, 3.7365468789376717`*^9, 
   3.736594101848825*^9, 3.7365977517125397`*^9, {3.7365990251850224`*^9, 
   3.736599051022747*^9}, 3.736601008953717*^9, 3.736616657029498*^9, 
   3.7366171535714207`*^9, 3.736617188941793*^9, 3.736618324720004*^9, 
   3.73668320650485*^9, 3.736697602699575*^9}],

Cell[BoxData["\<\"Eigenvalues as functions of stiffness k and distance \
r:\"\>"], "Print",
 CellChangeTimes->{
  3.736522492365445*^9, 3.736522532429553*^9, 3.7365232392570753`*^9, 
   3.73652332836415*^9, 3.7365233887229357`*^9, {3.736523573495161*^9, 
   3.736523617878599*^9}, 3.736523670276553*^9, 3.7365237309340553`*^9, {
   3.736523859881588*^9, 3.736523887001202*^9}, {3.736523930854713*^9, 
   3.7365239399481163`*^9}, {3.7365240011634207`*^9, 3.736524014313908*^9}, 
   3.736524048596305*^9, 3.736524155921874*^9, 3.736524201640396*^9, 
   3.73652427483202*^9, 3.736524333369296*^9, 3.736524562941326*^9, 
   3.736524646140069*^9, 3.73652474315688*^9, 3.7365252543171473`*^9, 
   3.7365253572823687`*^9, 3.736525415817153*^9, {3.736525459829924*^9, 
   3.736525469338182*^9}, 3.736525646879739*^9, 3.736543106873024*^9, 
   3.736543195499382*^9, 3.736545850879722*^9, 3.7365459636860313`*^9, 
   3.736546161794252*^9, 3.736546499450292*^9, 3.7365465364602747`*^9, 
   3.736546598686184*^9, 3.73654681008366*^9, 3.7365468789376717`*^9, 
   3.736594101848825*^9, 3.7365977517125397`*^9, {3.7365990251850224`*^9, 
   3.736599051022747*^9}, 3.736601008953717*^9, 3.736616657029498*^9, 
   3.7366171535714207`*^9, 3.736617188941793*^9, 3.736618324720004*^9, 
   3.73668320650485*^9, 3.736697602701358*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["VPP feedback controller design", "Subchapter",
 CellChangeTimes->{{3.736594162684614*^9, 3.736594166054892*^9}, {
  3.7366976132054567`*^9, 3.736697614347101*^9}}],

Cell["\<\
This doesn\[CloseCurlyQuote]t work yet! It\[CloseCurlyQuote]s based on a \
nonlinear control law from a Nature paper on walking.\
\>", "Text",
 CellChangeTimes->{{3.737802617001774*^9, 3.7378026480689793`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"xvl", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "ell"}], " ", "a"}], " ", "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"d", "+", "r"}], ")"}], "th"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yvl", "=", 
   RowBox[{
    RowBox[{"ell", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "a"}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"d", "+", "r"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "th"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"cos\[Gamma]l", "=", 
  RowBox[{"FullSimplify", "[", 
   FractionBox[
    RowBox[{
     SuperscriptBox["ell", "2"], "+", 
     SuperscriptBox["xvl", "2"], "+", 
     SuperscriptBox["yvl", "2"], "-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"d", "+", "r"}], ")"}], "2"]}], 
    RowBox[{"2", " ", "ell", " ", 
     RowBox[{"Sqrt", "[", 
      RowBox[{
       SuperscriptBox["xvl", "2"], "+", 
       SuperscriptBox["yvl", "2"]}], "]"}]}]], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"tan\[Gamma]l", "=", 
  RowBox[{
   RowBox[{"FullSimplify", "[", 
    RowBox[{"Expand", "[", 
     RowBox[{"Tan", "[", 
      RowBox[{"ArcCos", "[", "cos\[Gamma]l", "]"}], "]"}], "]"}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", "\"\<\[Alpha]\>\""}], ",", 
     RowBox[{
     "adot", "\[Rule]", 
      "\"\<\!\(\*OverscriptBox[\(\[Alpha]\), \(.\)]\)\>\""}], ",", 
     RowBox[{"th", "\[Rule]", "\"\<\[Theta]\>\""}], ",", 
     RowBox[{
     "thdot", "\[Rule]", 
      "\"\<\!\(\*OverscriptBox[\(\[Theta]\), \(.\)]\)\>\""}], ",", 
     RowBox[{"ell", "\[Rule]", "\"\<l\>\""}], ",", 
     RowBox[{
     "elldot", "\[Rule]", "\"\<\!\(\*OverscriptBox[\(l\), \(.\)]\)\>\""}]}], 
    "}"}]}]}]}], "Input",
 CellChangeTimes->{{3.736610333012526*^9, 3.736610576292016*^9}, {
  3.736610610588543*^9, 3.736610663304492*^9}, {3.736610817809642*^9, 
  3.736610847603181*^9}, {3.7366109298326807`*^9, 3.736610958563555*^9}, {
  3.736610991751248*^9, 3.736611071956871*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"ell", " ", 
    RowBox[{"(", 
     RowBox[{"ell", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "a"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "d"}], "+", 
         RowBox[{"a", " ", "ell"}]}], ")"}]}], "+", "r", "-", 
      RowBox[{"a", " ", "r"}]}], ")"}]}], "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"d", "+", "r"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"d", "+", "ell", "-", 
      RowBox[{"2", " ", "a", " ", "ell"}], "+", "r"}], ")"}], " ", "th"}], 
   "+", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"d", "+", "r"}], ")"}], "2"], " ", 
    SuperscriptBox["th", "2"]}]}], 
  RowBox[{"ell", " ", 
   SqrtBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"d", "+", "ell", "-", 
        RowBox[{"a", " ", "ell"}], "+", "r", "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"d", "+", "r"}], ")"}], " ", "th"}]}], ")"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"a", " ", "ell"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"d", "+", "r"}], ")"}], " ", "th"}]}], ")"}], 
      "2"]}]]}]]], "Output",
 CellChangeTimes->{
  3.736610664225162*^9, {3.736610829094151*^9, 3.7366108504872217`*^9}, 
   3.73661095921898*^9, {3.73661101830075*^9, 3.7366110432762136`*^9}, {
   3.7366110736302147`*^9, 3.736611076863138*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"\<\"l\"\>", " ", 
   SqrtBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"\<\"l\"\>", "-", 
        RowBox[{"\<\"l\"\>", " ", "\<\"\[Alpha]\"\>"}], "+", "d", "+", "r", 
        "-", 
        RowBox[{"\<\"\[Theta]\"\>", " ", 
         RowBox[{"(", 
          RowBox[{"d", "+", "r"}], ")"}]}]}], ")"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\<\"l\"\>", " ", "\<\"\[Alpha]\"\>"}], "+", 
        RowBox[{"\<\"\[Theta]\"\>", " ", 
         RowBox[{"(", 
          RowBox[{"d", "+", "r"}], ")"}]}]}], ")"}], "2"]}]], " ", 
   SqrtBox[
    RowBox[{"1", "-", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["\<\"\[Theta]\"\>", "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"d", "+", "r"}], ")"}], "2"]}], "-", 
         RowBox[{"\<\"\[Theta]\"\>", " ", 
          RowBox[{"(", 
           RowBox[{"d", "+", "r"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"\<\"l\"\>", "-", 
            RowBox[{"2", " ", "\<\"l\"\>", " ", "\<\"\[Alpha]\"\>"}], "+", 
            "d", "+", "r"}], ")"}]}], "+", 
         RowBox[{"\<\"l\"\>", " ", 
          RowBox[{"(", 
           RowBox[{"\<\"l\"\>", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\<\"\[Alpha]\"\>"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\<\"l\"\>", " ", "\<\"\[Alpha]\"\>"}], "-", "d"}], 
              ")"}]}], "+", "r", "-", 
            RowBox[{"\<\"\[Alpha]\"\>", " ", "r"}]}], ")"}]}]}], ")"}], "2"], 
      
      RowBox[{
       SuperscriptBox["\<\"l\"\>", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"\<\"l\"\>", "-", 
            RowBox[{"\<\"l\"\>", " ", "\<\"\[Alpha]\"\>"}], "+", "d", "+", 
            "r", "-", 
            RowBox[{"\<\"\[Theta]\"\>", " ", 
             RowBox[{"(", 
              RowBox[{"d", "+", "r"}], ")"}]}]}], ")"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\<\"l\"\>", " ", "\<\"\[Alpha]\"\>"}], "+", 
            RowBox[{"\<\"\[Theta]\"\>", " ", 
             RowBox[{"(", 
              RowBox[{"d", "+", "r"}], ")"}]}]}], ")"}], "2"]}], 
        ")"}]}]]}]]}], 
  RowBox[{
   RowBox[{
    SuperscriptBox["\<\"\[Theta]\"\>", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"d", "+", "r"}], ")"}], "2"]}], "-", 
   RowBox[{"\<\"\[Theta]\"\>", " ", 
    RowBox[{"(", 
     RowBox[{"d", "+", "r"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"\<\"l\"\>", "-", 
      RowBox[{"2", " ", "\<\"l\"\>", " ", "\<\"\[Alpha]\"\>"}], "+", "d", "+",
       "r"}], ")"}]}], "+", 
   RowBox[{"\<\"l\"\>", " ", 
    RowBox[{"(", 
     RowBox[{"\<\"l\"\>", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\<\"\[Alpha]\"\>"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\<\"l\"\>", " ", "\<\"\[Alpha]\"\>"}], "-", "d"}], ")"}]}], 
      "+", "r", "-", 
      RowBox[{"\<\"\[Alpha]\"\>", " ", "r"}]}], ")"}]}]}]]], "Output",
 CellChangeTimes->{
  3.736610664225162*^9, {3.736610829094151*^9, 3.7366108504872217`*^9}, 
   3.73661095921898*^9, {3.73661101830075*^9, 3.7366110432762136`*^9}, {
   3.7366110736302147`*^9, 3.736611076866918*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Reachability", "Section",
 CellChangeTimes->{{3.736594170804981*^9, 3.736594172681525*^9}}],

Cell[CellGroupData[{

Cell["Reachability of the full system", "Subsection",
 CellChangeTimes->{{3.736620790085738*^9, 3.736620795272476*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", "jacobian"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"B", "=", "Bmatrix"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Wr", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"Join", "[", 
     RowBox[{"B", ",", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"A", ".", "B"}], ",", " ", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"A", ".", "A", ".", "B"}], ",", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"A", ".", "A", ".", "A", ".", "B"}], ",", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"A", ".", "A", ".", "A", ".", "A", ".", "B"}], ",", 
              RowBox[{"A", ".", "A", ".", "A", ".", "A", ".", "A", ".", "B"}],
               ",", "2"}], "]"}], ",", "2"}], "]"}], ",", "2"}], "]"}], ",", 
        "2"}], "]"}], ",", "2"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<A = \>\"", ",", 
    RowBox[{"MatrixForm", "[", "A", "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<B = \>\"", ",", 
    RowBox[{"MatrixForm", "[", "B", "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<\!\(\*SubscriptBox[\(W\), \(r\)]\) = \>\"", ",", 
    RowBox[{"MatrixForm", "[", "Wr", "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<det(\!\(\*SubscriptBox[\(W\), \(r\)]\)) = \>\"", ",", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{"Det", "[", "Wr", "]"}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Rank(\!\(\*SubscriptBox[\(W\), \(r\)]\)) = \>\"", ",", 
    RowBox[{"MatrixRank", "[", "Wr", "]"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.736594177528504*^9, 3.736594214645122*^9}, {
  3.736594296280582*^9, 3.736594409921597*^9}, {3.736594464562523*^9, 
  3.736594560608136*^9}, {3.7365945971065083`*^9, 3.736594689608859*^9}, {
  3.736594724850049*^9, 3.7365947592921953`*^9}, {3.736599168946784*^9, 
  3.736599169772768*^9}, {3.7365992391621*^9, 3.736599263361184*^9}, {
  3.73660642265265*^9, 3.736606463920204*^9}, {3.736616583154912*^9, 
  3.7366166072428493`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"A = \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "1", "0", "0", "0", "0"},
       {
        FractionBox[
         RowBox[{"g", " ", "k", " ", 
          RowBox[{"(", 
           RowBox[{"J", "+", 
            RowBox[{
             SuperscriptBox["d", "2"], " ", "m"}]}], ")"}]}], 
         RowBox[{"J", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"k", " ", "lo"}], "-", 
            RowBox[{"g", " ", "m"}]}], ")"}]}]], "0", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["d", "2"], " ", "g", " ", "k", " ", "m"}], 
          RowBox[{
           RowBox[{"J", " ", "k", " ", "lo"}], "-", 
           RowBox[{"g", " ", "J", " ", "m"}]}]]}], "0", "0", "0"},
       {"0", "0", "0", "1", "0", "0"},
       {
        RowBox[{"-", 
         FractionBox[
          RowBox[{"d", " ", "g", " ", "m"}], "J"]}], "0", 
        FractionBox[
         RowBox[{"d", " ", "g", " ", "m"}], "J"], "0", "0", "0"},
       {"0", "0", "0", "0", "0", "1"},
       {"0", "0", "0", "0", 
        RowBox[{"-", 
         FractionBox["k", "m"]}], "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["A = ", 
   MatrixForm[{{0, 1, 0, 0, 0, 
     0}, {$CellContext`g $CellContext`J^(-1) $CellContext`k ($CellContext`J + \
$CellContext`d^2 $CellContext`m)/($CellContext`k $CellContext`lo - \
$CellContext`g $CellContext`m), 
      0, -$CellContext`d^2 $CellContext`g $CellContext`k \
$CellContext`m/($CellContext`J $CellContext`k $CellContext`lo - \
$CellContext`g $CellContext`J $CellContext`m), 0, 0, 0}, {0, 0, 0, 1, 0, 
     0}, {-$CellContext`d $CellContext`g $CellContext`J^(-1) $CellContext`m, 
      0, $CellContext`d $CellContext`g $CellContext`J^(-1) $CellContext`m, 0, 
      0, 0}, {0, 0, 0, 0, 0, 1}, {
     0, 0, 0, 0, -$CellContext`k/$CellContext`m, 0}}]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.736594533355007*^9, 3.736594561292007*^9}, {
   3.7365946647358313`*^9, 3.7365946921188717`*^9}, {3.736594725752954*^9, 
   3.736594760061261*^9}, 3.736599172959916*^9, 3.7365992640590887`*^9, {
   3.736601000171009*^9, 3.736601021307213*^9}, 3.736606465012823*^9, 
   3.736616665448604*^9, 3.736618334308633*^9, 3.736683218544846*^9, 
   3.736697619719903*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"B = \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0"},
       {
        RowBox[{"-", 
         FractionBox[
          RowBox[{"d", " ", "k"}], 
          RowBox[{
           RowBox[{"J", " ", "k", " ", "lo"}], "-", 
           RowBox[{"g", " ", "J", " ", "m"}]}]]}]},
       {"0"},
       {
        FractionBox["1", "J"]},
       {"0"},
       {"0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["B = ", 
   MatrixForm[{{
     0}, {-$CellContext`d $CellContext`k/($CellContext`J $CellContext`k \
$CellContext`lo - $CellContext`g $CellContext`J $CellContext`m)}, {
     0}, {$CellContext`J^(-1)}, {0}, {0}}]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.736594533355007*^9, 3.736594561292007*^9}, {
   3.7365946647358313`*^9, 3.7365946921188717`*^9}, {3.736594725752954*^9, 
   3.736594760061261*^9}, 3.736599172959916*^9, 3.7365992640590887`*^9, {
   3.736601000171009*^9, 3.736601021307213*^9}, 3.736606465012823*^9, 
   3.736616665448604*^9, 3.736618334308633*^9, 3.736683218544846*^9, 
   3.736697619722082*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(W\\), \\(r\\)]\\) = \"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"d", " ", "k"}], 
          RowBox[{
           RowBox[{"J", " ", "k", " ", "lo"}], "-", 
           RowBox[{"g", " ", "J", " ", "m"}]}]]}], "0", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"d", " ", "g", " ", "k", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", "k"}], "+", 
             RowBox[{"d", " ", "m", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"k", " ", 
                 RowBox[{"(", 
                  RowBox[{"d", "+", "lo"}], ")"}]}], "-", 
                RowBox[{"g", " ", "m"}]}], ")"}]}]}], ")"}]}], 
          RowBox[{
           SuperscriptBox["J", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"k", " ", "lo"}], "-", 
              RowBox[{"g", " ", "m"}]}], ")"}], "2"]}]]}], "0", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"d", " ", 
           SuperscriptBox["g", "2"], " ", "k", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["J", "2"], " ", 
              SuperscriptBox["k", "2"]}], "+", 
             RowBox[{"d", " ", "J", " ", "k", " ", "m", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "d", " ", "k"}], "+", 
                RowBox[{"k", " ", "lo"}], "-", 
                RowBox[{"g", " ", "m"}]}], ")"}]}], "+", 
             RowBox[{
              SuperscriptBox["d", "2"], " ", 
              SuperscriptBox["m", "2"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"k", " ", 
                  RowBox[{"(", 
                   RowBox[{"d", "+", "lo"}], ")"}]}], "-", 
                 RowBox[{"g", " ", "m"}]}], ")"}], "2"]}]}], ")"}]}], 
          RowBox[{
           SuperscriptBox["J", "3"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"k", " ", "lo"}], "-", 
              RowBox[{"g", " ", "m"}]}], ")"}], "3"]}]]}]},
       {
        RowBox[{"-", 
         FractionBox[
          RowBox[{"d", " ", "k"}], 
          RowBox[{
           RowBox[{"J", " ", "k", " ", "lo"}], "-", 
           RowBox[{"g", " ", "J", " ", "m"}]}]]}], "0", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"d", " ", "g", " ", "k", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", "k"}], "+", 
             RowBox[{"d", " ", "m", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"k", " ", 
                 RowBox[{"(", 
                  RowBox[{"d", "+", "lo"}], ")"}]}], "-", 
                RowBox[{"g", " ", "m"}]}], ")"}]}]}], ")"}]}], 
          RowBox[{
           SuperscriptBox["J", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"k", " ", "lo"}], "-", 
              RowBox[{"g", " ", "m"}]}], ")"}], "2"]}]]}], "0", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"d", " ", 
           SuperscriptBox["g", "2"], " ", "k", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["J", "2"], " ", 
              SuperscriptBox["k", "2"]}], "+", 
             RowBox[{"d", " ", "J", " ", "k", " ", "m", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "d", " ", "k"}], "+", 
                RowBox[{"k", " ", "lo"}], "-", 
                RowBox[{"g", " ", "m"}]}], ")"}]}], "+", 
             RowBox[{
              SuperscriptBox["d", "2"], " ", 
              SuperscriptBox["m", "2"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"k", " ", 
                  RowBox[{"(", 
                   RowBox[{"d", "+", "lo"}], ")"}]}], "-", 
                 RowBox[{"g", " ", "m"}]}], ")"}], "2"]}]}], ")"}]}], 
          RowBox[{
           SuperscriptBox["J", "3"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"k", " ", "lo"}], "-", 
              RowBox[{"g", " ", "m"}]}], ")"}], "3"]}]]}], "0"},
       {"0", 
        FractionBox["1", "J"], "0", 
        FractionBox[
         RowBox[{"d", " ", "g", " ", "m", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"k", " ", 
             RowBox[{"(", 
              RowBox[{"d", "+", "lo"}], ")"}]}], "-", 
            RowBox[{"g", " ", "m"}]}], ")"}]}], 
         RowBox[{
          SuperscriptBox["J", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"k", " ", "lo"}], "-", 
            RowBox[{"g", " ", "m"}]}], ")"}]}]], "0", 
        FractionBox[
         RowBox[{
          SuperscriptBox["d", "2"], " ", 
          SuperscriptBox["g", "2"], " ", "m", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"J", " ", 
             SuperscriptBox["k", "2"]}], "+", 
            RowBox[{"m", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"k", " ", 
                 RowBox[{"(", 
                  RowBox[{"d", "+", "lo"}], ")"}]}], "-", 
                RowBox[{"g", " ", "m"}]}], ")"}], "2"]}]}], ")"}]}], 
         RowBox[{
          SuperscriptBox["J", "3"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"k", " ", "lo"}], "-", 
             RowBox[{"g", " ", "m"}]}], ")"}], "2"]}]]},
       {
        FractionBox["1", "J"], "0", 
        FractionBox[
         RowBox[{"d", " ", "g", " ", "m", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"k", " ", 
             RowBox[{"(", 
              RowBox[{"d", "+", "lo"}], ")"}]}], "-", 
            RowBox[{"g", " ", "m"}]}], ")"}]}], 
         RowBox[{
          SuperscriptBox["J", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"k", " ", "lo"}], "-", 
            RowBox[{"g", " ", "m"}]}], ")"}]}]], "0", 
        FractionBox[
         RowBox[{
          SuperscriptBox["d", "2"], " ", 
          SuperscriptBox["g", "2"], " ", "m", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"J", " ", 
             SuperscriptBox["k", "2"]}], "+", 
            RowBox[{"m", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"k", " ", 
                 RowBox[{"(", 
                  RowBox[{"d", "+", "lo"}], ")"}]}], "-", 
                RowBox[{"g", " ", "m"}]}], ")"}], "2"]}]}], ")"}]}], 
         RowBox[{
          SuperscriptBox["J", "3"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"k", " ", "lo"}], "-", 
             RowBox[{"g", " ", "m"}]}], ")"}], "2"]}]], "0"},
       {"0", "0", "0", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["\!\(\*SubscriptBox[\(W\), \(r\)]\) = ", 
   MatrixForm[{{
     0, -$CellContext`d $CellContext`k/($CellContext`J $CellContext`k \
$CellContext`lo - $CellContext`g $CellContext`J $CellContext`m), 
      0, -$CellContext`d $CellContext`g $CellContext`J^(-2) $CellContext`k \
($CellContext`k $CellContext`lo - $CellContext`g $CellContext`m)^(-2) \
($CellContext`J $CellContext`k + $CellContext`d $CellContext`m \
($CellContext`k ($CellContext`d + $CellContext`lo) - $CellContext`g \
$CellContext`m)), 
      0, -$CellContext`d $CellContext`g^2 $CellContext`J^(-3) $CellContext`k \
($CellContext`k $CellContext`lo - $CellContext`g $CellContext`m)^(-3) \
($CellContext`J^2 $CellContext`k^2 + $CellContext`d $CellContext`J \
$CellContext`k $CellContext`m (
         2 $CellContext`d $CellContext`k + $CellContext`k $CellContext`lo - \
$CellContext`g $CellContext`m) + $CellContext`d^2 $CellContext`m^2 \
($CellContext`k ($CellContext`d + $CellContext`lo) - $CellContext`g \
$CellContext`m)^2)}, {-$CellContext`d $CellContext`k/($CellContext`J \
$CellContext`k $CellContext`lo - $CellContext`g $CellContext`J \
$CellContext`m), 
      0, -$CellContext`d $CellContext`g $CellContext`J^(-2) $CellContext`k \
($CellContext`k $CellContext`lo - $CellContext`g $CellContext`m)^(-2) \
($CellContext`J $CellContext`k + $CellContext`d $CellContext`m \
($CellContext`k ($CellContext`d + $CellContext`lo) - $CellContext`g \
$CellContext`m)), 
      0, -$CellContext`d $CellContext`g^2 $CellContext`J^(-3) $CellContext`k \
($CellContext`k $CellContext`lo - $CellContext`g $CellContext`m)^(-3) \
($CellContext`J^2 $CellContext`k^2 + $CellContext`d $CellContext`J \
$CellContext`k $CellContext`m (
         2 $CellContext`d $CellContext`k + $CellContext`k $CellContext`lo - \
$CellContext`g $CellContext`m) + $CellContext`d^2 $CellContext`m^2 \
($CellContext`k ($CellContext`d + $CellContext`lo) - $CellContext`g \
$CellContext`m)^2), 0}, {
     0, $CellContext`J^(-1), 
      0, $CellContext`d $CellContext`g $CellContext`J^(-2) $CellContext`m \
($CellContext`k $CellContext`lo - $CellContext`g $CellContext`m)^(-1) \
($CellContext`k ($CellContext`d + $CellContext`lo) - $CellContext`g \
$CellContext`m), 
      0, $CellContext`d^2 $CellContext`g^2 $CellContext`J^(-3) $CellContext`m \
($CellContext`k $CellContext`lo - $CellContext`g $CellContext`m)^(-2) \
($CellContext`J $CellContext`k^2 + $CellContext`m ($CellContext`k \
($CellContext`d + $CellContext`lo) - $CellContext`g $CellContext`m)^2)}, \
{$CellContext`J^(-1), 
      0, $CellContext`d $CellContext`g $CellContext`J^(-2) $CellContext`m \
($CellContext`k $CellContext`lo - $CellContext`g $CellContext`m)^(-1) \
($CellContext`k ($CellContext`d + $CellContext`lo) - $CellContext`g \
$CellContext`m), 
      0, $CellContext`d^2 $CellContext`g^2 $CellContext`J^(-3) $CellContext`m \
($CellContext`k $CellContext`lo - $CellContext`g $CellContext`m)^(-2) \
($CellContext`J $CellContext`k^2 + $CellContext`m ($CellContext`k \
($CellContext`d + $CellContext`lo) - $CellContext`g $CellContext`m)^2), 0}, {
     0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}}]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.736594533355007*^9, 3.736594561292007*^9}, {
   3.7365946647358313`*^9, 3.7365946921188717`*^9}, {3.736594725752954*^9, 
   3.736594760061261*^9}, 3.736599172959916*^9, 3.7365992640590887`*^9, {
   3.736601000171009*^9, 3.736601021307213*^9}, 3.736606465012823*^9, 
   3.736616665448604*^9, 3.736618334308633*^9, 3.736683218544846*^9, 
   3.736697619724917*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"det(\\!\\(\\*SubscriptBox[\\(W\\), \\(r\\)]\\)) = \"\>", 
   "\[InvisibleSpace]", "0"}],
  SequenceForm["det(\!\(\*SubscriptBox[\(W\), \(r\)]\)) = ", 0],
  Editable->False]], "Print",
 CellChangeTimes->{{3.736594533355007*^9, 3.736594561292007*^9}, {
   3.7365946647358313`*^9, 3.7365946921188717`*^9}, {3.736594725752954*^9, 
   3.736594760061261*^9}, 3.736599172959916*^9, 3.7365992640590887`*^9, {
   3.736601000171009*^9, 3.736601021307213*^9}, 3.736606465012823*^9, 
   3.736616665448604*^9, 3.736618334308633*^9, 3.736683218544846*^9, 
   3.736697619746437*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rank(\\!\\(\\*SubscriptBox[\\(W\\), \\(r\\)]\\)) = \"\>", 
   "\[InvisibleSpace]", "4"}],
  SequenceForm["Rank(\!\(\*SubscriptBox[\(W\), \(r\)]\)) = ", 4],
  Editable->False]], "Print",
 CellChangeTimes->{{3.736594533355007*^9, 3.736594561292007*^9}, {
   3.7365946647358313`*^9, 3.7365946921188717`*^9}, {3.736594725752954*^9, 
   3.736594760061261*^9}, 3.736599172959916*^9, 3.7365992640590887`*^9, {
   3.736601000171009*^9, 3.736601021307213*^9}, 3.736606465012823*^9, 
   3.736616665448604*^9, 3.736618334308633*^9, 3.736683218544846*^9, 
   3.736697619754019*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Reachability of reduced system - ignore spring length and d/dt of spring \
length\
\>", "Subsection",
 CellChangeTimes->{{3.7366208008504343`*^9, 3.736620805531611*^9}, {
  3.736697625443035*^9, 3.736697655780476*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Ared", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"A", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"A", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"A", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "3"}], "]"}], "]"}], ",", 
       RowBox[{"A", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "4"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"A", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"A", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"A", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "3"}], "]"}], "]"}], ",", 
       RowBox[{"A", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "4"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"A", "[", 
        RowBox[{"[", 
         RowBox[{"3", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"A", "[", 
        RowBox[{"[", 
         RowBox[{"3", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"A", "[", 
        RowBox[{"[", 
         RowBox[{"3", ",", "3"}], "]"}], "]"}], ",", 
       RowBox[{"A", "[", 
        RowBox[{"[", 
         RowBox[{"3", ",", "4"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"A", "[", 
        RowBox[{"[", 
         RowBox[{"4", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"A", "[", 
        RowBox[{"[", 
         RowBox[{"4", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"A", "[", 
        RowBox[{"[", 
         RowBox[{"4", ",", "3"}], "]"}], "]"}], ",", 
       RowBox[{"A", "[", 
        RowBox[{"[", 
         RowBox[{"4", ",", "4"}], "]"}], "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Bred", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"B", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"B", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "1"}], "]"}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"B", "[", 
       RowBox[{"[", 
        RowBox[{"3", ",", "1"}], "]"}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"B", "[", 
       RowBox[{"[", 
        RowBox[{"4", ",", "1"}], "]"}], "]"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Reduced A matrix = \>\"", ",", 
    RowBox[{"MatrixForm", "[", "Ared", "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Reduced B matrix = \>\"", ",", 
    RowBox[{"MatrixForm", "[", "Bred", "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Wrred", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"Join", "[", 
     RowBox[{"Bred", ",", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"Ared", ".", "Bred"}], ",", " ", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Ared", ".", "Ared", ".", "Bred"}], ",", 
          RowBox[{"Ared", ".", "Ared", ".", "Ared", ".", "Bred"}], ",", "2"}],
          "]"}], ",", "2"}], "]"}], ",", "2"}], "]"}], "]"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{
   "Here", " ", "I", " ", "am", " ", "forming", " ", "the", " ", 
    "\"\<controllability matrix\>\""}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Print", "[", 
   RowBox[{
   "\"\<Reduced \!\(\*SubscriptBox[\(W\), \(r, red\)]\) = \>\"", ",", 
    RowBox[{"MatrixForm", "[", "Wrred", "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<det(\!\(\*SubscriptBox[\(W\), \(r, red\)]\)) = \>\"", ",", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{"Det", "[", "Wrred", "]"}], "]"}]}], "]"}], ";", 
  RowBox[{"(*", 
   RowBox[{
   "A", " ", "nonzero", " ", "determinant", " ", "means", " ", "the", " ", 
    "system", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"or", " ", "here"}], ",", " ", 
      RowBox[{"the", " ", "reduced", " ", "system"}]}], ")"}], " ", "is", 
    " ", "\"\<reachable\>\""}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Rank(\!\(\*SubscriptBox[\(W\), \(r, red\)]\)) = \>\"", ",", 
    RowBox[{"MatrixRank", "[", "Wrred", "]"}]}], "]"}], ";", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "A", " ", "rank", " ", "equal", " ", "to", " ", "the", " ", "dimension", 
     " ", "of", " ", "the", " ", 
     RowBox[{"system", "'"}], "s", " ", "state", " ", "means", " ", "the", 
     " ", "system", " ", "is", " ", 
     RowBox[{"controllable", ".", " ", "Here"}]}], ",", " ", 
    RowBox[{
    "the", " ", "\"\<system\>\"", " ", "is", " ", "actually", " ", "the", " ",
      "reduced", " ", "system", " ", "explained", " ", "above"}], ",", " ", 
    RowBox[{
    "so", " ", "we", " ", "want", " ", "the", " ", "rank", " ", "to", " ", 
     "be", " ", "4."}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.736620818950478*^9, 3.736620824419776*^9}, {
  3.736620864980712*^9, 3.736620949406291*^9}, {3.7366210278790073`*^9, 
  3.736621173215399*^9}, {3.7366212677231913`*^9, 3.736621369630515*^9}, {
  3.736621443767771*^9, 3.736621457061208*^9}, {3.737802660845356*^9, 
  3.737802784617235*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Reduced A matrix = \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "1", "0", "0"},
       {
        FractionBox[
         RowBox[{"g", " ", "k", " ", 
          RowBox[{"(", 
           RowBox[{"J", "+", 
            RowBox[{
             SuperscriptBox["d", "2"], " ", "m"}]}], ")"}]}], 
         RowBox[{"J", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"k", " ", "lo"}], "-", 
            RowBox[{"g", " ", "m"}]}], ")"}]}]], "0", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["d", "2"], " ", "g", " ", "k", " ", "m"}], 
          RowBox[{
           RowBox[{"J", " ", "k", " ", "lo"}], "-", 
           RowBox[{"g", " ", "J", " ", "m"}]}]]}], "0"},
       {"0", "0", "0", "1"},
       {
        RowBox[{"-", 
         FractionBox[
          RowBox[{"d", " ", "g", " ", "m"}], "J"]}], "0", 
        FractionBox[
         RowBox[{"d", " ", "g", " ", "m"}], "J"], "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Reduced A matrix = ", 
   MatrixForm[{{0, 1, 0, 
     0}, {$CellContext`g $CellContext`J^(-1) $CellContext`k ($CellContext`J + \
$CellContext`d^2 $CellContext`m)/($CellContext`k $CellContext`lo - \
$CellContext`g $CellContext`m), 
      0, -$CellContext`d^2 $CellContext`g $CellContext`k \
$CellContext`m/($CellContext`J $CellContext`k $CellContext`lo - \
$CellContext`g $CellContext`J $CellContext`m), 0}, {0, 0, 0, 
     1}, {-$CellContext`d $CellContext`g $CellContext`J^(-1) $CellContext`m, 
      0, $CellContext`d $CellContext`g $CellContext`J^(-1) $CellContext`m, 
      0}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.736620952551413*^9, {3.7366210360810823`*^9, 3.736621049739634*^9}, {
   3.736621148986452*^9, 3.7366211742185173`*^9}, 3.73662125435744*^9, 
   3.7366213251048393`*^9, 3.736621372194084*^9, 3.7366214605455103`*^9, 
   3.736683228567315*^9, 3.7366976585070057`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Reduced B matrix = \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0"},
       {
        RowBox[{"-", 
         FractionBox[
          RowBox[{"d", " ", "k"}], 
          RowBox[{
           RowBox[{"J", " ", "k", " ", "lo"}], "-", 
           RowBox[{"g", " ", "J", " ", "m"}]}]]}]},
       {"0"},
       {
        FractionBox["1", "J"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Reduced B matrix = ", 
   MatrixForm[{{
     0}, {-$CellContext`d $CellContext`k/($CellContext`J $CellContext`k \
$CellContext`lo - $CellContext`g $CellContext`J $CellContext`m)}, {
     0}, {$CellContext`J^(-1)}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.736620952551413*^9, {3.7366210360810823`*^9, 3.736621049739634*^9}, {
   3.736621148986452*^9, 3.7366211742185173`*^9}, 3.73662125435744*^9, 
   3.7366213251048393`*^9, 3.736621372194084*^9, 3.7366214605455103`*^9, 
   3.736683228567315*^9, 3.73669765850918*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Reduced \\!\\(\\*SubscriptBox[\\(W\\), \\(r, red\\)]\\) = \
\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"d", " ", "k"}], 
          RowBox[{
           RowBox[{"J", " ", "k", " ", "lo"}], "-", 
           RowBox[{"g", " ", "J", " ", "m"}]}]]}], "0", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"d", " ", "g", " ", "k", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", "k"}], "+", 
             RowBox[{"d", " ", "m", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"k", " ", 
                 RowBox[{"(", 
                  RowBox[{"d", "+", "lo"}], ")"}]}], "-", 
                RowBox[{"g", " ", "m"}]}], ")"}]}]}], ")"}]}], 
          RowBox[{
           SuperscriptBox["J", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"k", " ", "lo"}], "-", 
              RowBox[{"g", " ", "m"}]}], ")"}], "2"]}]]}]},
       {
        RowBox[{"-", 
         FractionBox[
          RowBox[{"d", " ", "k"}], 
          RowBox[{
           RowBox[{"J", " ", "k", " ", "lo"}], "-", 
           RowBox[{"g", " ", "J", " ", "m"}]}]]}], "0", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"d", " ", "g", " ", "k", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"J", " ", "k"}], "+", 
             RowBox[{"d", " ", "m", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"k", " ", 
                 RowBox[{"(", 
                  RowBox[{"d", "+", "lo"}], ")"}]}], "-", 
                RowBox[{"g", " ", "m"}]}], ")"}]}]}], ")"}]}], 
          RowBox[{
           SuperscriptBox["J", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"k", " ", "lo"}], "-", 
              RowBox[{"g", " ", "m"}]}], ")"}], "2"]}]]}], "0"},
       {"0", 
        FractionBox["1", "J"], "0", 
        FractionBox[
         RowBox[{"d", " ", "g", " ", "m", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"k", " ", 
             RowBox[{"(", 
              RowBox[{"d", "+", "lo"}], ")"}]}], "-", 
            RowBox[{"g", " ", "m"}]}], ")"}]}], 
         RowBox[{
          SuperscriptBox["J", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"k", " ", "lo"}], "-", 
            RowBox[{"g", " ", "m"}]}], ")"}]}]]},
       {
        FractionBox["1", "J"], "0", 
        FractionBox[
         RowBox[{"d", " ", "g", " ", "m", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"k", " ", 
             RowBox[{"(", 
              RowBox[{"d", "+", "lo"}], ")"}]}], "-", 
            RowBox[{"g", " ", "m"}]}], ")"}]}], 
         RowBox[{
          SuperscriptBox["J", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"k", " ", "lo"}], "-", 
            RowBox[{"g", " ", "m"}]}], ")"}]}]], "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Reduced \!\(\*SubscriptBox[\(W\), \(r, red\)]\) = ", 
   MatrixForm[{{
     0, -$CellContext`d $CellContext`k/($CellContext`J $CellContext`k \
$CellContext`lo - $CellContext`g $CellContext`J $CellContext`m), 
      0, -$CellContext`d $CellContext`g $CellContext`J^(-2) $CellContext`k \
($CellContext`k $CellContext`lo - $CellContext`g $CellContext`m)^(-2) \
($CellContext`J $CellContext`k + $CellContext`d $CellContext`m \
($CellContext`k ($CellContext`d + $CellContext`lo) - $CellContext`g \
$CellContext`m))}, {-$CellContext`d $CellContext`k/($CellContext`J \
$CellContext`k $CellContext`lo - $CellContext`g $CellContext`J \
$CellContext`m), 
      0, -$CellContext`d $CellContext`g $CellContext`J^(-2) $CellContext`k \
($CellContext`k $CellContext`lo - $CellContext`g $CellContext`m)^(-2) \
($CellContext`J $CellContext`k + $CellContext`d $CellContext`m \
($CellContext`k ($CellContext`d + $CellContext`lo) - $CellContext`g \
$CellContext`m)), 0}, {
     0, $CellContext`J^(-1), 
      0, $CellContext`d $CellContext`g $CellContext`J^(-2) $CellContext`m \
($CellContext`k $CellContext`lo - $CellContext`g $CellContext`m)^(-1) \
($CellContext`k ($CellContext`d + $CellContext`lo) - $CellContext`g \
$CellContext`m)}, {$CellContext`J^(-1), 
      0, $CellContext`d $CellContext`g $CellContext`J^(-2) $CellContext`m \
($CellContext`k $CellContext`lo - $CellContext`g $CellContext`m)^(-1) \
($CellContext`k ($CellContext`d + $CellContext`lo) - $CellContext`g \
$CellContext`m), 0}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.736620952551413*^9, {3.7366210360810823`*^9, 3.736621049739634*^9}, {
   3.736621148986452*^9, 3.7366211742185173`*^9}, 3.73662125435744*^9, 
   3.7366213251048393`*^9, 3.736621372194084*^9, 3.7366214605455103`*^9, 
   3.736683228567315*^9, 3.736697658510684*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"det(\\!\\(\\*SubscriptBox[\\(W\\), \\(r, red\\)]\\)) = \"\>", 
   "\[InvisibleSpace]", 
   FractionBox[
    RowBox[{
     SuperscriptBox["d", "2"], " ", 
     SuperscriptBox["g", "2"], " ", 
     SuperscriptBox["k", "4"]}], 
    RowBox[{
     SuperscriptBox["J", "4"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"k", " ", "lo"}], "-", 
        RowBox[{"g", " ", "m"}]}], ")"}], "4"]}]]}],
  SequenceForm[
  "det(\!\(\*SubscriptBox[\(W\), \(r, red\)]\)) = ", $CellContext`d^2 \
$CellContext`g^2 $CellContext`J^(-4) $CellContext`k^4 ($CellContext`k \
$CellContext`lo - $CellContext`g $CellContext`m)^(-4)],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.736620952551413*^9, {3.7366210360810823`*^9, 3.736621049739634*^9}, {
   3.736621148986452*^9, 3.7366211742185173`*^9}, 3.73662125435744*^9, 
   3.7366213251048393`*^9, 3.736621372194084*^9, 3.7366214605455103`*^9, 
   3.736683228567315*^9, 3.736697658533967*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rank(\\!\\(\\*SubscriptBox[\\(W\\), \\(r, red\\)]\\)) = \"\>", 
   "\[InvisibleSpace]", "4"}],
  SequenceForm["Rank(\!\(\*SubscriptBox[\(W\), \(r, red\)]\)) = ", 4],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.736620952551413*^9, {3.7366210360810823`*^9, 3.736621049739634*^9}, {
   3.736621148986452*^9, 3.7366211742185173`*^9}, 3.73662125435744*^9, 
   3.7366213251048393`*^9, 3.736621372194084*^9, 3.7366214605455103`*^9, 
   3.736683228567315*^9, 3.736697658534827*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Stabilization of reachable subsystem by state feedback", "Subsection",
 CellChangeTimes->{{3.7366228476450872`*^9, 3.7366228906927137`*^9}}],

Cell[TextData[{
 "This ",
 StyleBox["also",
  FontSlant->"Italic"],
 " doesn\[CloseCurlyQuote]t work yet! Instead, look at the next section about \
LQR. Basically there are two alternatives for stabilizing the system.\n\tYou \
can solve the \[OpenCurlyDoubleQuote]pole placement problem\
\[CloseCurlyDoubleQuote], which often involves you deciding where you want \
the closed loop poles to be (and how do you know where you want them to be? \
It\[CloseCurlyQuote]s kind of arbitrary)\n\tOr, you can choose \
\[OpenCurlyDoubleQuote]optimal\[CloseCurlyDoubleQuote] pole locations, by \
implementing an LQR controller, where \[OpenCurlyDoubleQuote]optimality\
\[CloseCurlyDoubleQuote] is determined by your Q and R matrices.\n\t\tThat is \
an \[OpenCurlyDoubleQuote]infinite horizon\[CloseCurlyDoubleQuote] LQR \
controller, so it\[CloseCurlyQuote]s a little different from the finite \
horizon trajectory optimization we did in Todd\[CloseCurlyQuote]s class. \
Specifically, it\[CloseCurlyQuote]s easier, and Mathematica and MATLAB have \
software to do it for you.\nReference: \
http://www.cds.caltech.edu/~murray/books/AM05/pdf/am06-statefbk_16Sep06.pdf"
}], "Text",
 CellChangeTimes->{{3.736622870529207*^9, 3.736622876393731*^9}, {
  3.737802800040827*^9, 3.7378030114739847`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Cred", "=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Dred", "=", 
   RowBox[{"{", 
    RowBox[{"{", "0", "}"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Kred", "=", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"k1", ",", "k2", ",", "k3", ",", "k4"}], "}"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gs", "=", "9.81"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ms", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Js", "=", "0.25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ks", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"los", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ds", "=", "0.4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rs", "=", "0.6"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Open loop characteristic polynomial: \>\"", ",", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"Det", "[", 
     RowBox[{
      RowBox[{"s", " ", 
       RowBox[{"IdentityMatrix", "[", "4", "]"}]}], "-", "Ared"}], "]"}], 
    "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  "\"\<Open loop poles are the roots of the characteristic polynomial.\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"polesred", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"FullSimplify", "[", 
       RowBox[{"Det", "[", 
        RowBox[{
         RowBox[{"s", " ", 
          RowBox[{"IdentityMatrix", "[", "4", "]"}]}], "-", "Ared"}], "]"}], 
       "]"}], "\[Equal]", "0"}], ",", "s"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Poles: \>\"", ",", "polesred"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Particular poles: \>\"", ",", 
    RowBox[{"polesred", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"g", "\[Rule]", "gs"}], ",", 
       RowBox[{"m", "\[Rule]", "ms"}], ",", 
       RowBox[{"J", "\[Rule]", "Js"}], ",", 
       RowBox[{"k", "\[Rule]", "ks"}], ",", 
       RowBox[{"lo", "\[Rule]", "los"}], ",", 
       RowBox[{"d", "\[Rule]", "ds"}], ",", 
       RowBox[{"r", "\[Rule]", "rs"}]}], "}"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  "\"\<Check for non-minimum phase behavior by looking at open-loop zeros. \
NMP if zeros in RHP.\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Polynomial associated with zeros: \>\"", ",", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{"Det", "[", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"s", " ", 
            RowBox[{"IdentityMatrix", "[", "4", "]"}]}], "-", "Ared"}], ",", 
          RowBox[{"-", "Bred"}], ",", "2"}], "]"}], ",", 
        RowBox[{"Join", "[", 
         RowBox[{"Cred", ",", "Dred", ",", "2"}], "]"}], ",", "1"}], "]"}], 
      "]"}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zerosred", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"FullSimplify", "[", 
       RowBox[{"Det", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"s", " ", 
              RowBox[{"IdentityMatrix", "[", "4", "]"}]}], "-", "Ared"}], ",", 
            RowBox[{"-", "Bred"}], ",", "2"}], "]"}], ",", 
          RowBox[{"Join", "[", 
           RowBox[{"Cred", ",", "Dred", ",", "2"}], "]"}], ",", "1"}], "]"}], 
        "]"}], "]"}], "\[Equal]", "0"}], ",", "s"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Zeros: \>\"", ",", "zerosred"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<particular zeros: \>\"", ",", 
    RowBox[{"zerosred", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"g", "\[Rule]", "gs"}], ",", 
       RowBox[{"m", "\[Rule]", "ms"}], ",", 
       RowBox[{"J", "\[Rule]", "Js"}], ",", 
       RowBox[{"k", "\[Rule]", "ks"}], ",", 
       RowBox[{"lo", "\[Rule]", "los"}], ",", 
       RowBox[{"d", "\[Rule]", "ds"}], ",", 
       RowBox[{"r", "\[Rule]", "rs"}]}], "}"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"OLTF", "=", 
   RowBox[{"FullSimplify", "[", 
    FractionBox[
     RowBox[{"Expand", "[", 
      RowBox[{"FullSimplify", "[", 
       RowBox[{"Det", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"s", " ", 
              RowBox[{"IdentityMatrix", "[", "4", "]"}]}], "-", "Ared"}], ",", 
            RowBox[{"-", "Bred"}], ",", "2"}], "]"}], ",", 
          RowBox[{"Join", "[", 
           RowBox[{"Cred", ",", "Dred", ",", "2"}], "]"}], ",", "1"}], "]"}], 
        "]"}], "]"}], "]"}], 
     RowBox[{"Expand", "[", 
      RowBox[{"FullSimplify", "[", 
       RowBox[{"Det", "[", 
        RowBox[{
         RowBox[{"s", " ", 
          RowBox[{"IdentityMatrix", "[", "4", "]"}]}], "-", "Ared"}], "]"}], 
       "]"}], "]"}]], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Open loop TF: \>\"", ",", "OLTF"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"clcharpoly", "=", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"Det", "[", 
      RowBox[{
       RowBox[{"s", " ", 
        RowBox[{"IdentityMatrix", "[", "4", "]"}]}], "-", "Ared", "+", 
       RowBox[{"Bred", ".", "Kred"}]}], "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"g", "\[Rule]", "gs"}], ",", 
      RowBox[{"m", "\[Rule]", "ms"}], ",", 
      RowBox[{"J", "\[Rule]", "Js"}], ",", 
      RowBox[{"k", "\[Rule]", "ks"}], ",", 
      RowBox[{"lo", "\[Rule]", "los"}], ",", 
      RowBox[{"d", "\[Rule]", "ds"}], ",", 
      RowBox[{"r", "\[Rule]", "rs"}]}], "}"}]}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Closed loop poles: \>\"", ",", 
      RowBox[{"FullSimplify", "[", 
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{"clcharpoly", "\[Equal]", "0"}], ",", "s"}], "]"}], "]"}]}], 
     "]"}], ";"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"krred", "=", 
     RowBox[{"FullSimplify", "[", 
      FractionBox[
       RowBox[{"-", "1"}], 
       RowBox[{"Cred", ".", 
        RowBox[{"Inverse", "[", 
         RowBox[{"Ared", "-", 
          RowBox[{"Bred", ".", "Kred"}]}], "]"}], ".", "Bred"}]], "]"}]}], 
    ";"}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.736640649479954*^9, 3.7366408063177853`*^9}, {
   3.73664084244182*^9, 3.736640844515872*^9}, {3.736640924619912*^9, 
   3.736640956496876*^9}, {3.736641068283227*^9, 3.73664108243629*^9}, {
   3.736641300180295*^9, 3.736641364925988*^9}, {3.7366420345299463`*^9, 
   3.736642115233848*^9}, {3.7366421876545753`*^9, 3.7366422478110313`*^9}, {
   3.736642286149342*^9, 3.736642448826598*^9}, {3.7366426340258827`*^9, 
   3.736642667856318*^9}, {3.736642702156972*^9, 3.736642707885355*^9}, {
   3.736642746998592*^9, 3.736642783922165*^9}, {3.736642850904643*^9, 
   3.7366428789656487`*^9}, {3.73664293761135*^9, 3.736642966749455*^9}, {
   3.736643000041411*^9, 3.7366430324187393`*^9}, {3.736643095945225*^9, 
   3.7366431177076807`*^9}, {3.7366432194502993`*^9, 3.736643236330389*^9}, {
   3.7366432925219107`*^9, 3.7366433123221083`*^9}, {3.73664337768988*^9, 
   3.736643384090081*^9}, {3.736643905521624*^9, 3.7366439180880947`*^9}, {
   3.73664411093049*^9, 3.736644201308118*^9}, {3.736644856233532*^9, 
   3.736644931732299*^9}, {3.73664511235925*^9, 3.736645137550386*^9}, {
   3.73664550149026*^9, 3.736645600993701*^9}, {3.736645635010982*^9, 
   3.7366456467654257`*^9}, {3.736645690830988*^9, 3.736645730274324*^9}, {
   3.736645804362261*^9, 3.736645819805779*^9}, {3.7366458799851017`*^9, 
   3.736646014328388*^9}, {3.7366825315578823`*^9, 3.7366825821395817`*^9}, 
   3.736683056287958*^9, {3.736686428213696*^9, 3.736686491696891*^9}, {
   3.736688067658133*^9, 3.736688069928907*^9}, {3.736688148801159*^9, 
   3.736688206122353*^9}, {3.736688336353208*^9, 3.736688370302268*^9}, {
   3.7366884500815783`*^9, 3.736688458599656*^9}, {3.736698156133493*^9, 
   3.736698159605013*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Characteristic polynomial: \"\>", "\[InvisibleSpace]", 
   FractionBox[
    RowBox[{
     RowBox[{"d", " ", 
      SuperscriptBox["g", "2"], " ", "k", " ", "m"}], "-", 
     RowBox[{"g", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"J", " ", "k"}], "+", 
        RowBox[{"d", " ", "m", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"k", " ", 
            RowBox[{"(", 
             RowBox[{"d", "+", "lo"}], ")"}]}], "-", 
           RowBox[{"g", " ", "m"}]}], ")"}]}]}], ")"}], " ", 
      SuperscriptBox["s", "2"]}], "+", 
     RowBox[{"J", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"k", " ", "lo"}], "-", 
        RowBox[{"g", " ", "m"}]}], ")"}], " ", 
      SuperscriptBox["s", "4"]}]}], 
    RowBox[{"J", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"k", " ", "lo"}], "-", 
       RowBox[{"g", " ", "m"}]}], ")"}]}]]}],
  SequenceForm[
  "Characteristic polynomial: ", $CellContext`J^(-1) ($CellContext`k \
$CellContext`lo - $CellContext`g $CellContext`m)^(-1) ($CellContext`d \
$CellContext`g^2 $CellContext`k $CellContext`m - $CellContext`g \
($CellContext`J $CellContext`k + $CellContext`d $CellContext`m \
($CellContext`k ($CellContext`d + $CellContext`lo) - $CellContext`g \
$CellContext`m)) $CellContext`s^2 + $CellContext`J ($CellContext`k \
$CellContext`lo - $CellContext`g $CellContext`m) $CellContext`s^4)],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.736641367289095*^9, {3.736642036706172*^9, 3.736642040989921*^9}, 
   3.736642116067031*^9, 3.736642450684926*^9, 3.7366426373098907`*^9, {
   3.7366426696895742`*^9, 3.73664270874685*^9}, {3.736642748240006*^9, 
   3.736642770068405*^9}, {3.736642854702677*^9, 3.7366428799736767`*^9}, {
   3.736642943434815*^9, 3.736642968103815*^9}, {3.736643014376471*^9, 
   3.7366430418120213`*^9}, 3.736643119496276*^9, 3.736643318116234*^9, 
   3.7366433857143908`*^9, 3.736643919190359*^9, {3.73664418847106*^9, 
   3.7366442021213913`*^9}, 3.736644935446559*^9, {3.7366451257590027`*^9, 
   3.736645148789838*^9}, {3.736645514090645*^9, 3.7366455296892557`*^9}, 
   3.7366456025290127`*^9, {3.7366456354900208`*^9, 3.7366456519323063`*^9}, 
   3.736645822580954*^9, {3.736645888885749*^9, 3.736645991448409*^9}, 
   3.736646049455971*^9, 3.736683234197053*^9, 3.736686512515226*^9, 
   3.7366880872376204`*^9, {3.73668820030548*^9, 3.736688207067061*^9}, 
   3.736688243811904*^9, 3.736688344537389*^9, 3.73668845929305*^9, 
   3.736697666792295*^9}],

Cell[BoxData["\<\"Open loop poles are the roots of the characteristic \
polynomial.\"\>"], "Print",
 CellChangeTimes->{
  3.736641367289095*^9, {3.736642036706172*^9, 3.736642040989921*^9}, 
   3.736642116067031*^9, 3.736642450684926*^9, 3.7366426373098907`*^9, {
   3.7366426696895742`*^9, 3.73664270874685*^9}, {3.736642748240006*^9, 
   3.736642770068405*^9}, {3.736642854702677*^9, 3.7366428799736767`*^9}, {
   3.736642943434815*^9, 3.736642968103815*^9}, {3.736643014376471*^9, 
   3.7366430418120213`*^9}, 3.736643119496276*^9, 3.736643318116234*^9, 
   3.7366433857143908`*^9, 3.736643919190359*^9, {3.73664418847106*^9, 
   3.7366442021213913`*^9}, 3.736644935446559*^9, {3.7366451257590027`*^9, 
   3.736645148789838*^9}, {3.736645514090645*^9, 3.7366455296892557`*^9}, 
   3.7366456025290127`*^9, {3.7366456354900208`*^9, 3.7366456519323063`*^9}, 
   3.736645822580954*^9, {3.736645888885749*^9, 3.736645991448409*^9}, 
   3.736646049455971*^9, 3.736683234197053*^9, 3.736686512515226*^9, 
   3.7366880872376204`*^9, {3.73668820030548*^9, 3.736688207067061*^9}, 
   3.736688243811904*^9, 3.736688344537389*^9, 3.73668845929305*^9, 
   3.7366976667937403`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Poles: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s", "\[Rule]", 
       RowBox[{"-", 
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"g", " ", "J", " ", "k"}], 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "J"}], " ", "k", " ", "lo"}], "+", 
               RowBox[{"g", " ", "J", " ", "m"}]}], ")"}]}]]}], "-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["d", "2"], " ", "g", " ", "k", " ", "m"}], 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "J"}], " ", "k", " ", "lo"}], "+", 
              RowBox[{"g", " ", "J", " ", "m"}]}], ")"}]}]], "-", 
          FractionBox[
           RowBox[{"d", " ", "g", " ", "k", " ", "lo", " ", "m"}], 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "J"}], " ", "k", " ", "lo"}], "+", 
              RowBox[{"g", " ", "J", " ", "m"}]}], ")"}]}]], "+", 
          FractionBox[
           RowBox[{"d", " ", 
            SuperscriptBox["g", "2"], " ", 
            SuperscriptBox["m", "2"]}], 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "J"}], " ", "k", " ", "lo"}], "+", 
              RowBox[{"g", " ", "J", " ", "m"}]}], ")"}]}]], "-", 
          FractionBox[
           SqrtBox[
            RowBox[{
             RowBox[{"4", " ", "d", " ", 
              SuperscriptBox["g", "2"], " ", "k", " ", "m", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "J"}], " ", "k", " ", "lo"}], "+", 
                RowBox[{"g", " ", "J", " ", "m"}]}], ")"}]}], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"g", " ", "J", " ", "k"}], "+", 
                RowBox[{
                 SuperscriptBox["d", "2"], " ", "g", " ", "k", " ", "m"}], 
                "+", 
                RowBox[{"d", " ", "g", " ", "k", " ", "lo", " ", "m"}], "-", 
                RowBox[{"d", " ", 
                 SuperscriptBox["g", "2"], " ", 
                 SuperscriptBox["m", "2"]}]}], ")"}], "2"]}]], 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "J"}], " ", "k", " ", "lo"}], "+", 
              RowBox[{"g", " ", "J", " ", "m"}]}], ")"}]}]]}]]}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"s", "\[Rule]", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"g", " ", "J", " ", "k"}], 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "J"}], " ", "k", " ", "lo"}], "+", 
              RowBox[{"g", " ", "J", " ", "m"}]}], ")"}]}]]}], "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["d", "2"], " ", "g", " ", "k", " ", "m"}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "J"}], " ", "k", " ", "lo"}], "+", 
             RowBox[{"g", " ", "J", " ", "m"}]}], ")"}]}]], "-", 
         FractionBox[
          RowBox[{"d", " ", "g", " ", "k", " ", "lo", " ", "m"}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "J"}], " ", "k", " ", "lo"}], "+", 
             RowBox[{"g", " ", "J", " ", "m"}]}], ")"}]}]], "+", 
         FractionBox[
          RowBox[{"d", " ", 
           SuperscriptBox["g", "2"], " ", 
           SuperscriptBox["m", "2"]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "J"}], " ", "k", " ", "lo"}], "+", 
             RowBox[{"g", " ", "J", " ", "m"}]}], ")"}]}]], "-", 
         FractionBox[
          SqrtBox[
           RowBox[{
            RowBox[{"4", " ", "d", " ", 
             SuperscriptBox["g", "2"], " ", "k", " ", "m", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "J"}], " ", "k", " ", "lo"}], "+", 
               RowBox[{"g", " ", "J", " ", "m"}]}], ")"}]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"g", " ", "J", " ", "k"}], "+", 
               RowBox[{
                SuperscriptBox["d", "2"], " ", "g", " ", "k", " ", "m"}], "+", 
               RowBox[{"d", " ", "g", " ", "k", " ", "lo", " ", "m"}], "-", 
               RowBox[{"d", " ", 
                SuperscriptBox["g", "2"], " ", 
                SuperscriptBox["m", "2"]}]}], ")"}], "2"]}]], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "J"}], " ", "k", " ", "lo"}], "+", 
             RowBox[{"g", " ", "J", " ", "m"}]}], ")"}]}]]}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"s", "\[Rule]", 
       RowBox[{"-", 
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"g", " ", "J", " ", "k"}], 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "J"}], " ", "k", " ", "lo"}], "+", 
               RowBox[{"g", " ", "J", " ", "m"}]}], ")"}]}]]}], "-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["d", "2"], " ", "g", " ", "k", " ", "m"}], 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "J"}], " ", "k", " ", "lo"}], "+", 
              RowBox[{"g", " ", "J", " ", "m"}]}], ")"}]}]], "-", 
          FractionBox[
           RowBox[{"d", " ", "g", " ", "k", " ", "lo", " ", "m"}], 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "J"}], " ", "k", " ", "lo"}], "+", 
              RowBox[{"g", " ", "J", " ", "m"}]}], ")"}]}]], "+", 
          FractionBox[
           RowBox[{"d", " ", 
            SuperscriptBox["g", "2"], " ", 
            SuperscriptBox["m", "2"]}], 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "J"}], " ", "k", " ", "lo"}], "+", 
              RowBox[{"g", " ", "J", " ", "m"}]}], ")"}]}]], "+", 
          FractionBox[
           SqrtBox[
            RowBox[{
             RowBox[{"4", " ", "d", " ", 
              SuperscriptBox["g", "2"], " ", "k", " ", "m", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "J"}], " ", "k", " ", "lo"}], "+", 
                RowBox[{"g", " ", "J", " ", "m"}]}], ")"}]}], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"g", " ", "J", " ", "k"}], "+", 
                RowBox[{
                 SuperscriptBox["d", "2"], " ", "g", " ", "k", " ", "m"}], 
                "+", 
                RowBox[{"d", " ", "g", " ", "k", " ", "lo", " ", "m"}], "-", 
                RowBox[{"d", " ", 
                 SuperscriptBox["g", "2"], " ", 
                 SuperscriptBox["m", "2"]}]}], ")"}], "2"]}]], 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "J"}], " ", "k", " ", "lo"}], "+", 
              RowBox[{"g", " ", "J", " ", "m"}]}], ")"}]}]]}]]}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"s", "\[Rule]", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"g", " ", "J", " ", "k"}], 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "J"}], " ", "k", " ", "lo"}], "+", 
              RowBox[{"g", " ", "J", " ", "m"}]}], ")"}]}]]}], "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["d", "2"], " ", "g", " ", "k", " ", "m"}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "J"}], " ", "k", " ", "lo"}], "+", 
             RowBox[{"g", " ", "J", " ", "m"}]}], ")"}]}]], "-", 
         FractionBox[
          RowBox[{"d", " ", "g", " ", "k", " ", "lo", " ", "m"}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "J"}], " ", "k", " ", "lo"}], "+", 
             RowBox[{"g", " ", "J", " ", "m"}]}], ")"}]}]], "+", 
         FractionBox[
          RowBox[{"d", " ", 
           SuperscriptBox["g", "2"], " ", 
           SuperscriptBox["m", "2"]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "J"}], " ", "k", " ", "lo"}], "+", 
             RowBox[{"g", " ", "J", " ", "m"}]}], ")"}]}]], "+", 
         FractionBox[
          SqrtBox[
           RowBox[{
            RowBox[{"4", " ", "d", " ", 
             SuperscriptBox["g", "2"], " ", "k", " ", "m", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "J"}], " ", "k", " ", "lo"}], "+", 
               RowBox[{"g", " ", "J", " ", "m"}]}], ")"}]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"g", " ", "J", " ", "k"}], "+", 
               RowBox[{
                SuperscriptBox["d", "2"], " ", "g", " ", "k", " ", "m"}], "+", 
               RowBox[{"d", " ", "g", " ", "k", " ", "lo", " ", "m"}], "-", 
               RowBox[{"d", " ", 
                SuperscriptBox["g", "2"], " ", 
                SuperscriptBox["m", "2"]}]}], ")"}], "2"]}]], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "J"}], " ", "k", " ", "lo"}], "+", 
             RowBox[{"g", " ", "J", " ", "m"}]}], ")"}]}]]}]]}], "}"}]}], 
    "}"}]}],
  SequenceForm[
  "Poles: ", {{$CellContext`s -> -(
        Rational[-1, 
           2] $CellContext`g $CellContext`J $CellContext`k/(-$CellContext`J \
$CellContext`k $CellContext`lo + $CellContext`g $CellContext`J \
$CellContext`m) + 
        Rational[-1, 
           2] $CellContext`d^2 $CellContext`g $CellContext`k \
$CellContext`m/(-$CellContext`J $CellContext`k $CellContext`lo + \
$CellContext`g $CellContext`J $CellContext`m) + 
        Rational[-1, 
           2] $CellContext`d $CellContext`g $CellContext`k $CellContext`lo \
$CellContext`m/(-$CellContext`J $CellContext`k $CellContext`lo + \
$CellContext`g $CellContext`J $CellContext`m) + 
        Rational[
          1, 2] $CellContext`d $CellContext`g^2 \
$CellContext`m^2/(-$CellContext`J $CellContext`k $CellContext`lo + \
$CellContext`g $CellContext`J $CellContext`m) + 
        Rational[-1, 
           2] (-$CellContext`J $CellContext`k $CellContext`lo + \
$CellContext`g $CellContext`J $CellContext`m)^(-1) (
           4 $CellContext`d $CellContext`g^2 $CellContext`k $CellContext`m \
(-$CellContext`J $CellContext`k $CellContext`lo + $CellContext`g \
$CellContext`J $CellContext`m) + ($CellContext`g $CellContext`J \
$CellContext`k + $CellContext`d^2 $CellContext`g $CellContext`k \
$CellContext`m + $CellContext`d $CellContext`g $CellContext`k $CellContext`lo \
$CellContext`m - $CellContext`d $CellContext`g^2 $CellContext`m^2)^2)^
          Rational[1, 2])^Rational[1, 2]}, {$CellContext`s -> (
       Rational[-1, 
          2] $CellContext`g $CellContext`J $CellContext`k/(-$CellContext`J \
$CellContext`k $CellContext`lo + $CellContext`g $CellContext`J \
$CellContext`m) + 
       Rational[-1, 
          2] $CellContext`d^2 $CellContext`g $CellContext`k \
$CellContext`m/(-$CellContext`J $CellContext`k $CellContext`lo + \
$CellContext`g $CellContext`J $CellContext`m) + 
       Rational[-1, 
          2] $CellContext`d $CellContext`g $CellContext`k $CellContext`lo \
$CellContext`m/(-$CellContext`J $CellContext`k $CellContext`lo + \
$CellContext`g $CellContext`J $CellContext`m) + 
       Rational[
         1, 2] $CellContext`d $CellContext`g^2 \
$CellContext`m^2/(-$CellContext`J $CellContext`k $CellContext`lo + \
$CellContext`g $CellContext`J $CellContext`m) + 
       Rational[-1, 
          2] (-$CellContext`J $CellContext`k $CellContext`lo + $CellContext`g \
$CellContext`J $CellContext`m)^(-1) (
          4 $CellContext`d $CellContext`g^2 $CellContext`k $CellContext`m \
(-$CellContext`J $CellContext`k $CellContext`lo + $CellContext`g \
$CellContext`J $CellContext`m) + ($CellContext`g $CellContext`J \
$CellContext`k + $CellContext`d^2 $CellContext`g $CellContext`k \
$CellContext`m + $CellContext`d $CellContext`g $CellContext`k $CellContext`lo \
$CellContext`m - $CellContext`d $CellContext`g^2 $CellContext`m^2)^2)^
         Rational[1, 2])^
      Rational[1, 2]}, {$CellContext`s -> -(
        Rational[-1, 
           2] $CellContext`g $CellContext`J $CellContext`k/(-$CellContext`J \
$CellContext`k $CellContext`lo + $CellContext`g $CellContext`J \
$CellContext`m) + 
        Rational[-1, 
           2] $CellContext`d^2 $CellContext`g $CellContext`k \
$CellContext`m/(-$CellContext`J $CellContext`k $CellContext`lo + \
$CellContext`g $CellContext`J $CellContext`m) + 
        Rational[-1, 
           2] $CellContext`d $CellContext`g $CellContext`k $CellContext`lo \
$CellContext`m/(-$CellContext`J $CellContext`k $CellContext`lo + \
$CellContext`g $CellContext`J $CellContext`m) + 
        Rational[
          1, 2] $CellContext`d $CellContext`g^2 \
$CellContext`m^2/(-$CellContext`J $CellContext`k $CellContext`lo + \
$CellContext`g $CellContext`J $CellContext`m) + 
        Rational[
          1, 2] (-$CellContext`J $CellContext`k $CellContext`lo + \
$CellContext`g $CellContext`J $CellContext`m)^(-1) (
           4 $CellContext`d $CellContext`g^2 $CellContext`k $CellContext`m \
(-$CellContext`J $CellContext`k $CellContext`lo + $CellContext`g \
$CellContext`J $CellContext`m) + ($CellContext`g $CellContext`J \
$CellContext`k + $CellContext`d^2 $CellContext`g $CellContext`k \
$CellContext`m + $CellContext`d $CellContext`g $CellContext`k $CellContext`lo \
$CellContext`m - $CellContext`d $CellContext`g^2 $CellContext`m^2)^2)^
          Rational[1, 2])^Rational[1, 2]}, {$CellContext`s -> (
       Rational[-1, 
          2] $CellContext`g $CellContext`J $CellContext`k/(-$CellContext`J \
$CellContext`k $CellContext`lo + $CellContext`g $CellContext`J \
$CellContext`m) + 
       Rational[-1, 
          2] $CellContext`d^2 $CellContext`g $CellContext`k \
$CellContext`m/(-$CellContext`J $CellContext`k $CellContext`lo + \
$CellContext`g $CellContext`J $CellContext`m) + 
       Rational[-1, 
          2] $CellContext`d $CellContext`g $CellContext`k $CellContext`lo \
$CellContext`m/(-$CellContext`J $CellContext`k $CellContext`lo + \
$CellContext`g $CellContext`J $CellContext`m) + 
       Rational[
         1, 2] $CellContext`d $CellContext`g^2 \
$CellContext`m^2/(-$CellContext`J $CellContext`k $CellContext`lo + \
$CellContext`g $CellContext`J $CellContext`m) + 
       Rational[
         1, 2] (-$CellContext`J $CellContext`k $CellContext`lo + \
$CellContext`g $CellContext`J $CellContext`m)^(-1) (
          4 $CellContext`d $CellContext`g^2 $CellContext`k $CellContext`m \
(-$CellContext`J $CellContext`k $CellContext`lo + $CellContext`g \
$CellContext`J $CellContext`m) + ($CellContext`g $CellContext`J \
$CellContext`k + $CellContext`d^2 $CellContext`g $CellContext`k \
$CellContext`m + $CellContext`d $CellContext`g $CellContext`k $CellContext`lo \
$CellContext`m - $CellContext`d $CellContext`g^2 $CellContext`m^2)^2)^
         Rational[1, 2])^Rational[1, 2]}}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.736641367289095*^9, {3.736642036706172*^9, 3.736642040989921*^9}, 
   3.736642116067031*^9, 3.736642450684926*^9, 3.7366426373098907`*^9, {
   3.7366426696895742`*^9, 3.73664270874685*^9}, {3.736642748240006*^9, 
   3.736642770068405*^9}, {3.736642854702677*^9, 3.7366428799736767`*^9}, {
   3.736642943434815*^9, 3.736642968103815*^9}, {3.736643014376471*^9, 
   3.7366430418120213`*^9}, 3.736643119496276*^9, 3.736643318116234*^9, 
   3.7366433857143908`*^9, 3.736643919190359*^9, {3.73664418847106*^9, 
   3.7366442021213913`*^9}, 3.736644935446559*^9, {3.7366451257590027`*^9, 
   3.736645148789838*^9}, {3.736645514090645*^9, 3.7366455296892557`*^9}, 
   3.7366456025290127`*^9, {3.7366456354900208`*^9, 3.7366456519323063`*^9}, 
   3.736645822580954*^9, {3.736645888885749*^9, 3.736645991448409*^9}, 
   3.736646049455971*^9, 3.736683234197053*^9, 3.736686512515226*^9, 
   3.7366880872376204`*^9, {3.73668820030548*^9, 3.736688207067061*^9}, 
   3.736688243811904*^9, 3.736688344537389*^9, 3.73668845929305*^9, 
   3.736697666823888*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Particular poles: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s", "\[Rule]", 
       RowBox[{"-", "10.712235364053607`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"s", "\[Rule]", "10.712235364053607`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"s", "\[Rule]", 
       RowBox[{"-", "2.656165021566265`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"s", "\[Rule]", "2.656165021566265`"}], "}"}]}], "}"}]}],
  SequenceForm[
  "Particular poles: ", {{$CellContext`s -> -10.712235364053607`}, \
{$CellContext`s -> 
     10.712235364053607`}, {$CellContext`s -> -2.656165021566265}, \
{$CellContext`s -> 2.656165021566265}}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.736641367289095*^9, {3.736642036706172*^9, 3.736642040989921*^9}, 
   3.736642116067031*^9, 3.736642450684926*^9, 3.7366426373098907`*^9, {
   3.7366426696895742`*^9, 3.73664270874685*^9}, {3.736642748240006*^9, 
   3.736642770068405*^9}, {3.736642854702677*^9, 3.7366428799736767`*^9}, {
   3.736642943434815*^9, 3.736642968103815*^9}, {3.736643014376471*^9, 
   3.7366430418120213`*^9}, 3.736643119496276*^9, 3.736643318116234*^9, 
   3.7366433857143908`*^9, 3.736643919190359*^9, {3.73664418847106*^9, 
   3.7366442021213913`*^9}, 3.736644935446559*^9, {3.7366451257590027`*^9, 
   3.736645148789838*^9}, {3.736645514090645*^9, 3.7366455296892557`*^9}, 
   3.7366456025290127`*^9, {3.7366456354900208`*^9, 3.7366456519323063`*^9}, 
   3.736645822580954*^9, {3.736645888885749*^9, 3.736645991448409*^9}, 
   3.736646049455971*^9, 3.736683234197053*^9, 3.736686512515226*^9, 
   3.7366880872376204`*^9, {3.73668820030548*^9, 3.736688207067061*^9}, 
   3.736688243811904*^9, 3.736688344537389*^9, 3.73668845929305*^9, 
   3.736697666825027*^9}],

Cell[BoxData["\<\"Check for non-minimum phase behavior by looking at \
open-loop zeros. NMP if zeros in RHP.\"\>"], "Print",
 CellChangeTimes->{
  3.736641367289095*^9, {3.736642036706172*^9, 3.736642040989921*^9}, 
   3.736642116067031*^9, 3.736642450684926*^9, 3.7366426373098907`*^9, {
   3.7366426696895742`*^9, 3.73664270874685*^9}, {3.736642748240006*^9, 
   3.736642770068405*^9}, {3.736642854702677*^9, 3.7366428799736767`*^9}, {
   3.736642943434815*^9, 3.736642968103815*^9}, {3.736643014376471*^9, 
   3.7366430418120213`*^9}, 3.736643119496276*^9, 3.736643318116234*^9, 
   3.7366433857143908`*^9, 3.736643919190359*^9, {3.73664418847106*^9, 
   3.7366442021213913`*^9}, 3.736644935446559*^9, {3.7366451257590027`*^9, 
   3.736645148789838*^9}, {3.736645514090645*^9, 3.7366455296892557`*^9}, 
   3.7366456025290127`*^9, {3.7366456354900208`*^9, 3.7366456519323063`*^9}, 
   3.736645822580954*^9, {3.736645888885749*^9, 3.736645991448409*^9}, 
   3.736646049455971*^9, 3.736683234197053*^9, 3.736686512515226*^9, 
   3.7366880872376204`*^9, {3.73668820030548*^9, 3.736688207067061*^9}, 
   3.736688243811904*^9, 3.736688344537389*^9, 3.73668845929305*^9, 
   3.7366976668259687`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Polynomial associated with zeros: \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", "s"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"g", " ", "k"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"d", " ", "k"}], "-", 
           RowBox[{"k", " ", "lo"}], "+", 
           RowBox[{"g", " ", "m"}]}], ")"}], " ", 
         SuperscriptBox["s", "2"]}]}], ")"}]}], 
     RowBox[{"J", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"k", " ", "lo"}], "-", 
        RowBox[{"g", " ", "m"}]}], ")"}]}]]}]}],
  SequenceForm[
  "Polynomial associated with zeros: ", -$CellContext`J^(-1) ($CellContext`k \
$CellContext`lo - $CellContext`g $CellContext`m)^(-1) (
    1 + $CellContext`s) ($CellContext`g $CellContext`k + ($CellContext`d \
$CellContext`k - $CellContext`k $CellContext`lo + $CellContext`g \
$CellContext`m) $CellContext`s^2)],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.736641367289095*^9, {3.736642036706172*^9, 3.736642040989921*^9}, 
   3.736642116067031*^9, 3.736642450684926*^9, 3.7366426373098907`*^9, {
   3.7366426696895742`*^9, 3.73664270874685*^9}, {3.736642748240006*^9, 
   3.736642770068405*^9}, {3.736642854702677*^9, 3.7366428799736767`*^9}, {
   3.736642943434815*^9, 3.736642968103815*^9}, {3.736643014376471*^9, 
   3.7366430418120213`*^9}, 3.736643119496276*^9, 3.736643318116234*^9, 
   3.7366433857143908`*^9, 3.736643919190359*^9, {3.73664418847106*^9, 
   3.7366442021213913`*^9}, 3.736644935446559*^9, {3.7366451257590027`*^9, 
   3.736645148789838*^9}, {3.736645514090645*^9, 3.7366455296892557`*^9}, 
   3.7366456025290127`*^9, {3.7366456354900208`*^9, 3.7366456519323063`*^9}, 
   3.736645822580954*^9, {3.736645888885749*^9, 3.736645991448409*^9}, 
   3.736646049455971*^9, 3.736683234197053*^9, 3.736686512515226*^9, 
   3.7366880872376204`*^9, {3.73668820030548*^9, 3.736688207067061*^9}, 
   3.736688243811904*^9, 3.736688344537389*^9, 3.73668845929305*^9, 
   3.7366976668596087`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Zeros: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s", "\[Rule]", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"s", "\[Rule]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          SqrtBox["g"], " ", 
          SqrtBox["k"]}], 
         SqrtBox[
          RowBox[{
           RowBox[{
            RowBox[{"-", "d"}], " ", "k"}], "+", 
           RowBox[{"k", " ", "lo"}], "-", 
           RowBox[{"g", " ", "m"}]}]]]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"s", "\[Rule]", 
       FractionBox[
        RowBox[{
         SqrtBox["g"], " ", 
         SqrtBox["k"]}], 
        SqrtBox[
         RowBox[{
          RowBox[{
           RowBox[{"-", "d"}], " ", "k"}], "+", 
          RowBox[{"k", " ", "lo"}], "-", 
          RowBox[{"g", " ", "m"}]}]]]}], "}"}]}], "}"}]}],
  SequenceForm[
  "Zeros: ", {{$CellContext`s -> -1}, {$CellContext`s -> -$CellContext`g^
       Rational[1, 2] $CellContext`k^
       Rational[
        1, 2] (-$CellContext`d $CellContext`k + $CellContext`k \
$CellContext`lo - $CellContext`g $CellContext`m)^
       Rational[-1, 2]}, {$CellContext`s -> $CellContext`g^
       Rational[1, 2] $CellContext`k^
       Rational[
        1, 2] (-$CellContext`d $CellContext`k + $CellContext`k \
$CellContext`lo - $CellContext`g $CellContext`m)^Rational[-1, 2]}}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.736641367289095*^9, {3.736642036706172*^9, 3.736642040989921*^9}, 
   3.736642116067031*^9, 3.736642450684926*^9, 3.7366426373098907`*^9, {
   3.7366426696895742`*^9, 3.73664270874685*^9}, {3.736642748240006*^9, 
   3.736642770068405*^9}, {3.736642854702677*^9, 3.7366428799736767`*^9}, {
   3.736642943434815*^9, 3.736642968103815*^9}, {3.736643014376471*^9, 
   3.7366430418120213`*^9}, 3.736643119496276*^9, 3.736643318116234*^9, 
   3.7366433857143908`*^9, 3.736643919190359*^9, {3.73664418847106*^9, 
   3.7366442021213913`*^9}, 3.736644935446559*^9, {3.7366451257590027`*^9, 
   3.736645148789838*^9}, {3.736645514090645*^9, 3.7366455296892557`*^9}, 
   3.7366456025290127`*^9, {3.7366456354900208`*^9, 3.7366456519323063`*^9}, 
   3.736645822580954*^9, {3.736645888885749*^9, 3.736645991448409*^9}, 
   3.736646049455971*^9, 3.736683234197053*^9, 3.736686512515226*^9, 
   3.7366880872376204`*^9, {3.73668820030548*^9, 3.736688207067061*^9}, 
   3.736688243811904*^9, 3.736688344537389*^9, 3.73668845929305*^9, 
   3.736697666886241*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"particular zeros: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s", "\[Rule]", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"s", "\[Rule]", 
       RowBox[{"-", "4.219669239930866`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"s", "\[Rule]", "4.219669239930866`"}], "}"}]}], "}"}]}],
  SequenceForm[
  "particular zeros: ", {{$CellContext`s -> -1}, {$CellContext`s -> \
-4.219669239930866}, {$CellContext`s -> 4.219669239930866}}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.736641367289095*^9, {3.736642036706172*^9, 3.736642040989921*^9}, 
   3.736642116067031*^9, 3.736642450684926*^9, 3.7366426373098907`*^9, {
   3.7366426696895742`*^9, 3.73664270874685*^9}, {3.736642748240006*^9, 
   3.736642770068405*^9}, {3.736642854702677*^9, 3.7366428799736767`*^9}, {
   3.736642943434815*^9, 3.736642968103815*^9}, {3.736643014376471*^9, 
   3.7366430418120213`*^9}, 3.736643119496276*^9, 3.736643318116234*^9, 
   3.7366433857143908`*^9, 3.736643919190359*^9, {3.73664418847106*^9, 
   3.7366442021213913`*^9}, 3.736644935446559*^9, {3.7366451257590027`*^9, 
   3.736645148789838*^9}, {3.736645514090645*^9, 3.7366455296892557`*^9}, 
   3.7366456025290127`*^9, {3.7366456354900208`*^9, 3.7366456519323063`*^9}, 
   3.736645822580954*^9, {3.736645888885749*^9, 3.736645991448409*^9}, 
   3.736646049455971*^9, 3.736683234197053*^9, 3.736686512515226*^9, 
   3.7366880872376204`*^9, {3.73668820030548*^9, 3.736688207067061*^9}, 
   3.736688243811904*^9, 3.736688344537389*^9, 3.73668845929305*^9, 
   3.7366976668890457`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Open loop TF: \"\>", "\[InvisibleSpace]", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", "s"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"g", " ", "k"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"d", " ", "k"}], "-", 
          RowBox[{"k", " ", "lo"}], "+", 
          RowBox[{"g", " ", "m"}]}], ")"}], " ", 
        SuperscriptBox["s", "2"]}]}], ")"}]}], 
    RowBox[{
     RowBox[{
      RowBox[{"-", "d"}], " ", 
      SuperscriptBox["g", "2"], " ", "k", " ", "m"}], "+", 
     RowBox[{"g", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"J", " ", "k"}], "+", 
        RowBox[{"d", " ", "m", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"k", " ", 
            RowBox[{"(", 
             RowBox[{"d", "+", "lo"}], ")"}]}], "-", 
           RowBox[{"g", " ", "m"}]}], ")"}]}]}], ")"}], " ", 
      SuperscriptBox["s", "2"]}], "+", 
     RowBox[{"J", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "k"}], " ", "lo"}], "+", 
        RowBox[{"g", " ", "m"}]}], ")"}], " ", 
      SuperscriptBox["s", "4"]}]}]]}],
  SequenceForm[
  "Open loop TF: ", (
    1 + $CellContext`s) ($CellContext`g $CellContext`k + ($CellContext`d \
$CellContext`k - $CellContext`k $CellContext`lo + $CellContext`g \
$CellContext`m) $CellContext`s^2)/(-$CellContext`d $CellContext`g^2 \
$CellContext`k $CellContext`m + $CellContext`g ($CellContext`J $CellContext`k + \
$CellContext`d $CellContext`m ($CellContext`k ($CellContext`d + \
$CellContext`lo) - $CellContext`g $CellContext`m)) $CellContext`s^2 + \
$CellContext`J (-$CellContext`k $CellContext`lo + $CellContext`g \
$CellContext`m) $CellContext`s^4)],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.736641367289095*^9, {3.736642036706172*^9, 3.736642040989921*^9}, 
   3.736642116067031*^9, 3.736642450684926*^9, 3.7366426373098907`*^9, {
   3.7366426696895742`*^9, 3.73664270874685*^9}, {3.736642748240006*^9, 
   3.736642770068405*^9}, {3.736642854702677*^9, 3.7366428799736767`*^9}, {
   3.736642943434815*^9, 3.736642968103815*^9}, {3.736643014376471*^9, 
   3.7366430418120213`*^9}, 3.736643119496276*^9, 3.736643318116234*^9, 
   3.7366433857143908`*^9, 3.736643919190359*^9, {3.73664418847106*^9, 
   3.7366442021213913`*^9}, 3.736644935446559*^9, {3.7366451257590027`*^9, 
   3.736645148789838*^9}, {3.736645514090645*^9, 3.7366455296892557`*^9}, 
   3.7366456025290127`*^9, {3.7366456354900208`*^9, 3.7366456519323063`*^9}, 
   3.736645822580954*^9, {3.736645888885749*^9, 3.736645991448409*^9}, 
   3.736646049455971*^9, 3.736683234197053*^9, 3.736686512515226*^9, 
   3.7366880872376204`*^9, {3.73668820030548*^9, 3.736688207067061*^9}, 
   3.736688243811904*^9, 3.736688344537389*^9, 3.73668845929305*^9, 
   3.736697666985565*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"0.00420631999579368`", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"192.47220000000002`", " ", 
     RowBox[{"(", 
      RowBox[{"1000", "+", 
       RowBox[{"5", " ", 
        SuperscriptBox["s", "2"]}]}], ")"}]}], "+", 
    RowBox[{"1000", " ", 
     SuperscriptBox["s", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"k3", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"k4", "+", 
          RowBox[{"0.25`", " ", "s"}]}], ")"}], " ", "s"}], "-", 
       RowBox[{"0.4`", " ", 
        RowBox[{"(", 
         RowBox[{"k1", "+", 
          RowBox[{"k2", " ", "s"}]}], ")"}]}]}], ")"}]}], "-", 
    RowBox[{"9.81`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"5", " ", 
        SuperscriptBox["s", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"k3", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"k4", "+", 
             RowBox[{"0.25`", " ", "s"}]}], ")"}], " ", "s"}]}], ")"}]}], "+", 
       RowBox[{"1000", " ", 
        RowBox[{"(", 
         RowBox[{"k3", "+", 
          RowBox[{"s", " ", 
           RowBox[{"(", 
            RowBox[{"k4", "+", 
             RowBox[{"3.05`", " ", "s"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.736688233975383*^9, 3.7366883193090076`*^9, 
  3.736688360217091*^9, 3.7366884593800793`*^9, 3.736697667373513*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["LQR control of the linearized system", "Subchapter",
 CellChangeTimes->{{3.736683074841035*^9, 3.736683091136134*^9}}],

Cell["See my block of text in the previous section.", "Text",
 CellChangeTimes->{{3.737803030776602*^9, 3.737803037092639*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ssmred", "=", 
  RowBox[{"StateSpaceModel", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Ared", ",", "Bred", ",", "Cred", ",", "Dred"}], "}"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"g", "\[Rule]", "gs"}], ",", 
      RowBox[{"m", "\[Rule]", "ms"}], ",", 
      RowBox[{"J", "\[Rule]", "Js"}], ",", 
      RowBox[{"k", "\[Rule]", "ks"}], ",", 
      RowBox[{"lo", "\[Rule]", "los"}], ",", 
      RowBox[{"d", "\[Rule]", "ds"}], ",", 
      RowBox[{"r", "\[Rule]", "rs"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Qred", "=", 
   RowBox[{"DiagonalMatrix", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rred", "=", 
   RowBox[{"DiagonalMatrix", "[", 
    RowBox[{"{", "1", "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Kred", "=", 
   RowBox[{"LQRegulatorGains", "[", 
    RowBox[{"ssmred", ",", 
     RowBox[{"{", 
      RowBox[{"Qred", ",", "Rred"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<LQR gains: \>\"", ",", "Kred"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7366830939035873`*^9, 3.736683104791246*^9}, {
  3.736683135859005*^9, 3.736683154487459*^9}, {3.736683242650991*^9, 
  3.736683324070076*^9}, {3.7366841580602818`*^9, 3.736684245879366*^9}, {
  3.7366844025749617`*^9, 3.736684442155087*^9}, {3.73669671211401*^9, 
  3.736696713998974*^9}, {3.736697133532587*^9, 3.736697134806797*^9}, {
  3.736697255048841*^9, 3.736697274418318*^9}, {3.7366982521361*^9, 
  3.7366982528124523`*^9}, {3.736698560967207*^9, 3.736698561294393*^9}}],

Cell[BoxData[
 TemplateBox[{
  "0","1","0","0","0","43.327199116672816`","0",
   RowBox[{"-", "33.01119932698881`"}],"0",
   RowBox[{"-", "1.6825279983174721`"}],"0","0","0","1","0",
   RowBox[{"-", "78.48`"}],"0","78.48`","0","4.`","1","1","1","1","0",
   InterpretationBox["\[InvisibleSpace]", None],{
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2, \
$CellContext`stname3, $CellContext`stname4}, {{Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
      Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
    Automatic, 1, 1, 4, 1, {}, {False, False}, False, Automatic, None, 
    Automatic},{}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3, #4, #5}, {#6, #7, #8, #9, #10}, {#11, #12, #13, \
#14, #15}, {#16, #17, #18, #19, #20}, {#21, #22, #23, #24, #25}}, 
        AllowedDimensions -> {5, 5}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, 
          "Columns" -> {False, False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #26, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 4}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{6, 9}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{11, 14}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{16, 19}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{5, 5}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{10, 10}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{15, 15}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{20, 20}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{21, 24}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{25, 25}, ","], "}"}], "}"}], "}"}], ",", 
     "SamplingPeriod", "->", 
     RowBox[{#26}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellChangeTimes->{{3.7366842257077208`*^9, 3.736684246622838*^9}, 
   3.736684438398386*^9, {3.7366967060456333`*^9, 3.7366967152482567`*^9}, 
   3.736697135808123*^9, 3.736697275306017*^9, 3.736697673213045*^9, 
   3.736698255206512*^9, 3.73669856525511*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"LQR gains: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "214.0955266101023`"}], ",", 
      RowBox[{"-", "60.24789073378702`"}], ",", 
      RowBox[{"-", "0.02546767069361522`"}], ",", 
      RowBox[{"-", "18.54572753917836`"}]}], "}"}], "}"}]}],
  SequenceForm[
  "LQR gains: ", {{-214.0955266101023, -60.24789073378702, \
-0.02546767069361522, -18.54572753917836}}],
  Editable->False]], "Print",
 CellChangeTimes->{3.736697275311743*^9, 3.736697673216864*^9, 
  3.736698255211858*^9, 3.736698565259261*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Numerical simulation of linearized system with LQR", "Subchapter",
 CellChangeTimes->{{3.736697154798616*^9, 3.7366971661265507`*^9}}],

Cell["Doesn\[CloseCurlyQuote]t work yet!", "Text",
 CellChangeTimes->{{3.737803045034849*^9, 3.7378030472134247`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"EOMred", "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[Xi]", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{"Ared", ".", 
       RowBox[{"\[Xi]", "[", "t", "]"}]}]}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"g", "\[Rule]", "gs"}], ",", 
       RowBox[{"m", "\[Rule]", "ms"}], ",", 
       RowBox[{"J", "\[Rule]", "Js"}], ",", 
       RowBox[{"k", "\[Rule]", "ks"}], ",", 
       RowBox[{"lo", "\[Rule]", "los"}], ",", 
       RowBox[{"d", "\[Rule]", "ds"}], ",", 
       RowBox[{"r", "\[Rule]", "rs"}]}], "}"}]}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"EOMred", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\[Xi]", "'"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"Ared", ".", 
         RowBox[{"\[Xi]", "[", "t", "]"}]}], "+", 
        RowBox[{"Bred", ".", 
         RowBox[{"(", 
          RowBox[{"Kred", ".", 
           RowBox[{"\[Xi]", "[", "t", "]"}]}], ")"}]}]}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"g", "\[Rule]", "gs"}], ",", 
        RowBox[{"m", "\[Rule]", "ms"}], ",", 
        RowBox[{"J", "\[Rule]", "Js"}], ",", 
        RowBox[{"k", "\[Rule]", "ks"}], ",", 
        RowBox[{"lo", "\[Rule]", "los"}], ",", 
        RowBox[{"d", "\[Rule]", "ds"}], ",", 
        RowBox[{"r", "\[Rule]", "rs"}]}], "}"}]}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ICred", "=", 
   RowBox[{
    RowBox[{"\[Xi]", "[", "0", "]"}], "\[Equal]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Pi", "/", "6"}], "}"}], ",", 
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "Pi"}], "/", "6"}], "}"}], ",", 
      RowBox[{"{", "0", "}"}]}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solred", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"EOMred", ",", "ICred"}], "}"}], ",", 
     RowBox[{"{", "\[Xi]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"\[Xi]", "[", "t", "]"}], "/.", "solred"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Automatic"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.736697175628379*^9, 3.736697234357614*^9}, {
  3.736697282109589*^9, 3.7366974560116568`*^9}, {3.736697493458807*^9, 
  3.736697523629081*^9}, {3.736697689999819*^9, 3.7366977395340357`*^9}, {
  3.736697863287175*^9, 3.736697948294631*^9}, {3.7366980034845953`*^9, 
  3.736698013593738*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwUV3dcz98Xbu/xGUWoaNOUGaV73oO0jDTwTZImSqVSGkhCmrS0F0JEQ0p7
UKJdklTaey/NX7+/3q/7es49z/Oce173fY+Y2XU9CyYGBobDrAwM///Gepmx
KZs/VlfpUVDRK+lC5Y07dIx22CA7q9DE9tIutP6l8N6OHW5or4XhqPvXLsT3
5ON7rlZvxKn+6IpybReKLQ7YzrrjEVIZOayw/qsLyU+YB65bBaGyy21CgwNd
6A9f3NrKzyfIUiKlf2KxC0m+4DywtByGjvD9kN7G+xddO+Jsu7D9GVoccILr
kn9RZlNXyiwRg8yeud+YVv+Llq7qtE9ZxaPpAqW2N8Z/UQJj+6OFo4mo2cLh
SrLnX0T+CJGa/5mECt/ZL/5N/IsGIzVKZm1SkJ6vCHKo+ov8zVeNZ5afI3Pt
2p//zf5FjcvWoZPbX6Hp5NI+B/1u5PJVdPfEh9doCbcTynnUjbY+baoeI9JQ
wLftex+XdiMzWWAesUpHcbfP9YmgHsS0fKt21uM9ajIbm1r17kFNXQYis0c/
IFzsXkz6tx7kmsadO/0zAznm5Hm3WPQirSf9bNMJmWjTjpJdzrm9SNi1RH/K
JguFHFv5okLtQ8XEzcmJ5WzExWl2NuhHH3qyS099ovwjMgi9qaW/px+Z8yv4
jwfkoIv8PUwp0f2I/Xe3zNj2XIS05lP0PQZQa3GB8+hgLrrXN+k0PTOAXr+I
LBv5kIeEo3tePrUfRCccT1wcJvJR8lAfzcptCO04u+vtEE8BOmbihv9lHUbT
R1iWB5sLkAyT4PhoxDAK58wLH7AqQrEu+obnf4ygrJtajjeEihHX87wgPodR
FDN8cMuMRzEi2SLXlreOIbs6mtX00RI0pb4mqeo9jmgxlUxTP0tRdc77yo76
SbTM9/GVvVoZUrlvFHEaTaHeu8mnJhPKUDd/D0PG+yn00corbsKmHKmnkmk5
8dMovu3q0es15eiiikRPrMgMeqh7bnR8TwUyTvzZMh0/g87v3Xd4fLkCid3h
euSWMYuIF2J/bU2/oOSq2vJZfA7Jb+F/OFb+BQWK8ag6tc6htbWh5tGAr+jy
GGutOH0BJX6LdxjZXoW+b43j5Pj+D81GZst2+lehY/cC9sY+W0LHrKp7Gv5V
oY/7/2v7ZreMRpkXDPIavyH2Z7dbmZVXEWrg4X8H1ciio+5ugugaepIgXpn4
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

       "]], LineBox[CompressedData["
1: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
khk9wgyVbVvGLvg/wPEHGoPeBDMketWL8rmG4hpnSoqrNZihtylaeenOQ1x3
m9LzLbrMsHxtdO07EYabJkvqvzVhBlrE8ssdZuG4tcNLmQVLZqhWWVscmgvH
L8sKcWL2zKAzwc6QEfIId8vnLWlxZYZTn7POddY/xp80z8owPGQGJTZN1Xcx
T/DnMY6cpyKZIXYtdLe2SRSebN4/GPWMGTifBW5Y743GM8d/PpdKYYbi32cV
Jiqf4rmZOnduv2eG8tarSzUvY/Ci2xX6pVnMsDF+BbiDn+E/mHI5jYuZgdm8
eEuh/XP8Z7Xc0IsKZlhXP1T40ToO7whLLZmsZYanbZMMNId4fFQw9o7/b2Z4
/WrINbE8AWdW8B5Kn2OGehRbNLnnBc61uliyssz8b7958LeXv8D5il3iVOhY
gOnpe5J0ScaFT1mea+diAaVXrhNk80tcnL9ddh8/C4gqtwhgD1/h0m1nua5u
Z4GFrZ+sfHRf4yesVUpZ9rHAoLgd47PBFJyQ+BqnJ8kCHnqTwwNf3uCaM0fc
YuVZ4Ny1OuJcdCpu5LlfTh6xgBSPufUT2zT8RiRn/EUjFvgsHVFw6dAH3P2C
v1uKKQtQ3tznPvj1A+4rsn5uzooFLhwunHp8KgMPezfJde8qC2z52B+45JaJ
R123HW66xQK5FynvVLd/xOOO9ZQKebHA7dKB8935H/G0bw1uWcEsULWwpviW
lo1/vK9psBnGAo3e0wWoKhvP0yuV04xiAR+LwYEuv094ZWfWcPcLFqhnEDDg
4MrB+/9GGXAWsIB1Ro4T6fQFT8IOXe8sZYF+DxlGvSv5uFnIj4fp1SywO/K+
zAvXAvz3Xuaqs60s0Nan+tjxRSEe7ZIwINbNArMm1ZdqrIpwg3wlhqUBFqDX
21J5bL0Ibzh7TSl2jgVs7+44OahcgofGcxs5rfzTLyxkeH+4BNceS7kB9KyA
imRGzkeX4pW+3e/6eVhhb919bzPOb/jXDG1hqYOs4L4jZ+OrSiXusT50YlOW
FTaEld9cEa/Cj2n4GTccZQWZJrUAHWo1ntWT+8hVhRU4nK8J9WzU4Nckz6Wr
abNCh2d7kxRjLS5ze7pm+1lW+PhrVW2S8gNP5RVn/mrOCqa5bw/vEKvH7S6U
iITZssJ/1N4bil/qcbHXF5UtnVghDuumrzJowBOUI26xeLBC7eBHd1p8Ix51
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
9nUK1DDqeeK7eyjQHmi+P5+C15EHBH/fKkA9/2zh2KKZ/LTo/jC3QnRe1FJ/
+wEFCSbXA3QUirDYXHfnSDkFC78MrG64X4yfPrrKL3pGQbbZ9s/qp0pQNCSh
b3kVBfKC8a3hTg/QvWDI91A1BWOXMx1UlcswwUZan1tHgcvTltXD1EN8OGD1
t6CBgt//RppyRR+huPzNU7/eU9BCqH0lhMrxSYxbamAvBfzJW6bjLZ/ioEri
rtR+CkwG2hPtep8iXflEsWyQgtDitpS1ERW4/4/0nalRCj4/kuTsfv8MLySv
Pyz9c0Zf50vkhiMrsVIryGjVJAVBTkWL3cyeo6Tn+2eh/yhI3lgQ+7qiCs35
+CPTZ9GgeCTqhErMC/RL07N+OoeGI3uSrNY4vcRXjYnv+YRoSD5f6pxIvsYA
0w3fT9E0aPKU05u7ajCzPej+dQkaCo1C55r21WKt/62AF9I0fE+cPXz4aB0q
5fHzCSjSkKR6lWpJeYu2FvovVJVp6LI9tuDe0noM+rQ7ep0aDZvTg0NPvazH
Bk4FFa1FQ9VVxee1Io04XTDSnqtDw9d9YeVpJY2oait7tUafhq1d1Z4Se99h
aMQx9QUmNIz4jKV0tTfh0jF900RLGgStLnY6iLbi9lj3ufnraYgzl2xhv7Vi
uCr3daMNDU/2ZS9Pqm/D9l2jdqQ9DbzJ8XHW+R3I/1dWQn87Da6bbLrg7gfU
PmfdZb9zxr/7WM+lwk6MrM7Ze96VBsu2wMr2b11Y6Nm27IE7DbLiRdSc4G7s
5hMYb91Dg3qd1rLJRT1oYOQRIulDw8XXRj0D6z7i52tySZeDaOBe4cqUTn/G
wbDuSb5QGroX54/Iv+rFUZd0J8+TNOi262R2X+xDHhk5Na1IGlQv2BYEbevH
uVNdcdxoGsrKf+PX1V9RuO3Kz8k4GvTIIcUavQHknJN9+vQcDcuadUT19b+h
3OGuJUtSaei7UauxG7+j8qYr0VFpNPy5dN7FbucQ6orKbtucRYOzu8XQyLth
tImQGf58j4bfl+Md1nj8QPvdnXaWhTSILJO9dp8zho6rL5fmldDgaVXhdLlx
DL3+SUf4l9PwtvELb7PDTzzY8WGwrYIG8SMBbhlqvzCgNG0jVNEQUc1f0887
gaf8paXn19AwTzJ8+kflJEbbfTjp/XbGb7+o0SL/NyZpp/W/baQh64PLrZW3
/mD6kFTBhTYaLLK9NxvlT2GZh5SVev9M/Eslv79SvGwFdtyNG6RhvSYvD1vG
y75SuESND9FwZrxHwHzXLLa5U/Ljw58zvAObb6x7wMd+eNhuLv+bBpPDhmdL
fGazn1Iv5p2aouH9s/0nH2nMYUftJQOtZzOQo9J4NKJsLjup2955fx4Dyjlp
FS9i5rE84heRFmTggdSEdbonPytcJ7GweyEDA2vP7luhI8Aqm0vcOCjDQE8J
+9tWW4RdptQm3CzPwC3FZ16plqKs3uxUvxVKDFTOaoK/ugvY1eWcVbM1GDCO
7eUaeCxkLdNaMz01Z/r73Lyqwr+ItQm6IFCtzYDg3us3+/MWsY4GnCauEQM7
XXgu3xMRZ3eTrSt+r2TgP5Uq02UvxNl9Y+fTHU0Z6DaxiXc8TbBH7jDeS8wZ
wCrB19VSFJukzMwusWPgbNAXg62ZHNbBUen6x60MiBzZqysaKcEuTtK2FHFg
wKZuBSfMX5LN/7c+ztWFgRfSt01z9kqzQbo7tGN2z+x3V/rtNx8Zdo2XZ1Ox
JwMb/R3t+UCWbWw6ISlygIFT3fy64w5y7EWhuMcGBxkwslK4kD0qx7qZXXJx
PczAux1b8vdEy7NjuUU3io8yUOzLU1dar8CKhQ/quJ5mYOSraV9puhLb+mCy
OTqKgZo0PqLTbQl7dXju0eIYBt6bnhVJXKrMLneQeyLMZcBhsabUhSYV9nf8
UjeDFAaaySh9twJV9mnVinmuqQzE61Rp5KaqsRu1t6wvTmdg1gbudGWIBsvZ
4zrck8nAyrrlt2WDl7I9aT6JwjeYmf9zu4pQ+DL2oEDUe5e8mfsIXF3X0aTJ
JnQ/3i1cygD/SlfdTENtdjtVzW/wiIEPIyUaHp3arPz61lsuT2b6cd/fKY/U
Ye8Vj40UVTHwI/hL79ioLhv4nZfb84qBrXgtTPuOHmu2WNRAuGbmHsVp/A1+
+mx9rEqwSyMDo7m3IhaKGrIXKvXkopsZeJwZ7yfbZ8i6/Fn9rKiVAYXAq7b/
PTdiR90dBYS7Z/TyR/v0RKoxu9AkMbnoGwNj1sdz6zcD2+J3xbBneGbfiJG0
jG5gr2TntguNMVBnu8dRy8+U1SReyLv8ZqB3SLBWLcuMnbB8V3l2ioGSstla
w7iaLQ/t8Szi4YCTuUWI9OBq1mbwb57QPA4YNotsP2iBLC0vsFFfgAO1Vwdl
p3hYtsueGncW5sC4nqlr0SOW9anQWlEkxgH3tQ0ZkevN2bgL7lXOshwo9Er5
Oe/xOtb/vxN+QQoc0BpoDwzItmIdN6bJnFPiwNZT11yup65n1QWa/N+ocyDI
RmnB2hRrVqx3RKFvGQegx8MpzdaG/f1EuI5XmwMbJA5MhrbZsO4OPTdydDjw
kij7xqrYsv8DDhGjwQ==
       "]], LineBox[CompressedData["
1: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
TYmj17lL5dI44dp/vCXb98wI2llBsd0sTni8YfJnnog5sV4oMeiQxwm/dEW5
ptBZEJNex5ObCjhhoaeU4odZC6JlRYOUWMIJuzOYRg27rxD4p7ONe+X7flGm
1T36Y0WUB+g/dqrihL9n22zJo1eJ1zsW6wooJ6yqru7XZ7UlnGj9Bpqb9+ej
XHG9/aEd8R9/w6+tVk7I3BeQ1ytgTzQrH/kp1skJzx1EOA2/2RNKN+q+BPdw
QvmP91TEBB2JySeHygr7OGFXYqvH3G9HIjXtZkHvP06o71YrOxznRNC1H3it
NM4J01ruNkkLuRBV067R9lOccPHvk2tzyy6EO11NaOQsJxzQu9/55bsr0aXi
5D+5zAmD9hLbAqPdiKz0ctNUSjI8cOXaXso9D8K8iulCEw0ZhoVN0q5rexIs
HdZa6/Rk6NV64mJluyfhS0+vYMxGhqOKZkU5W16EmMAVifscZKjiRr4kEe9N
9KoWChRwkaHhE+zdzEkfQsv9MonuMBmerGA7ORnqS6yHvKNX4CNDBWWB3idq
fkTBm71dG4H9eikeNseW/AiuzpyZSlEypJjRqhDzu00Mq6033lQkwxNR6puJ
jXeIBFN9LOkkGTLXHHl2tvguoe+RXvlNlQxzMk911b0JJEozzuUKaJLhsofM
iEliEOFSnZxmoEWGAheSA2fe3Cd4u+bj7uqQoVnPPMtniwfEY8bEJ50XyHBJ
hT/kfMBDQllwJpDq4r4+7yZhR1IwMa2u6StrQob2gYGHEguCCRPPCbtQSzJE
hY5a0q48IoR+qcBTzmTIeWDR81DTU6J7Pvzk9etkWKf/4+SJyBDiBdOgTPxN
MtTmLhLduPKMWD4VdmTBhwxvZw2YWTOEEbmX+7j4bpNh/gt+98CJMMLKS55F
7w4ZBvLkmCq1PSeIzD+bmQ/I8JG3UlLQ53DCv0ZmsfURGbKNsaYmVkcQUt3B
E7tPybDmtdCS49eXRAyzZLd5OBmma4hvJm9GEvbed8tYkvb5FsJtzB1eEUry
fWXiKWR4DRnULWSIIZgWYbl2Ohnee5l86HZxDPHRi+7Tg2wybL/8w5P7YBzx
6Ljrp5Q8MqSHUs/02+IIs4WmT1UFZHh05kt8yat4YtszqmK5mAyF9fp45sUT
iZ9yyxUc5WSov2z/S2EvkciYN6uUqdyfZ5fkoSc9SYSuJ2+VSy0ZznEczz+b
n0zEeeR87m0iw0XehL95l9IJV1mm6o1mMuy91vWbvi+dUJ+7Uc3dRoY3i/ws
t268IYbc5b8YdZOh6Xe/CNXEDKJcJvbLzR4y3FVfNO1WekuEza59CesjQ8B/
hqfw91tCzv1LDTFMhq3G4tPlslkEtczR2n9jZCjj+STr9FAW0TUTXLs7SYa/
OI58QJKzicCb5xDlBTIM3ZrSsj2WSzTcaEcLdsjwyfJ2CGPQOyJZSglroOCC
mYxBiwzOBYTndAI2Ss0FQ5gyH1Vffk9w37DGjzJxwedtez2GFwuJCUkUP8XK
BQ+zR925Kv2RqJ4SJCxJXLCMQU/ndvlHws5tgojh5oKUYjNeN7qKiBOS+nVF
h7igV1DV/YSbxQTD1Ie6Zl4ueGIpw/ErYwlReN33K4MgF1z6MeX042Ipse26
9y1QlgvmzV4Vjxf+RPwUt6tPlOeCk+nLvMjEJyJjgqgvP8EFkw06clxKKwhd
17CGeTUuuGvZsHTAuorgFZ9pYAVcUGo6Oj7s1GdiftywUeI0F7z/9Ua5g1A1
EedyoMnhHBe8VhHQqsdYQ7iK+Tc91OOCXBuRtH/oawn18T9NqQZc0Pcu231X
eoQYdE7/3m3CBeMu+gzHH0YJWWfJZv1rXDBmR39lPRAn+lz5Pd47cEGxTWLI
UY4gXtwgk9hcuGCPQfaC9iRBTHhtXfzpzgUvf8s6a+T9lUjwnVuU9eaCQ2Z+
jhvw2/72PvQq0o8Lkio7VDkP1hNvA5s6LwZywd/UGiZpfxoI4/u1t4rvc8Gq
Qo6/2fWNBEVwyUHyIy4ofiosC9Q2EVdDXlt0hHLBwdvnNy2+/SAORrv9NYvn
gtgn7PAFkVbia4xN0KckLpi+4WMlR7QSvvGX+HlSueCf+wJemHMb0Zqsdu13
Jhek0dB8jiPtxIM0WSrVXC4osjvhmnqrg5DJEHyb9I4LHmM2fESj0Ek8z2Ee
uVLMBf2s9mIckS5CNX/vSXUZF3y293egJ+oXMV6wJHKkkgv2p1zs/nO9mzhb
3OPSV8sFRedj4iIU/xB71e+mbX/sf2+GrLRzMn3Eh9q0cLSFC95KU9Ft1+on
rLBXMsc69v28e+R/DZJ3PNX/F8cVISvrcz/3c+2RnexV6SijkMwvlRQyIhSV
fohEGojsbEmSUspMirrvj5KVncgoSohkZv3un+eP1+O8zvM8S4+oDdGrG4LP
fusThILurQF/nYfpno1+fIZfBSFP49qHtU0jdEqz6/P7w4IwsdmstaFwhB7Q
bjbn9pPB9/gEZ+CW73TJrr3J5IQgzA2psDXXfqe39ahryU4LQuwq+eBtyCh9
x4DQpZ/zgrBLutggatsP+o8fEytezBi0rBcZPY/7RU/5NZj5kRUDzUQ/Df3I
CbrhVMceJQ4Mrqq9lUoJn6TnzdaETfFi0BP/dc946m+65fxTcQtBDA4nuHcm
lk7T1xfz60twDObPi+c985qhH1uLZj4risFUEpXjdPYfOgfTlfttEhgobZZv
z4ZZetXm80aq2zFoWl00Lf45S8fYHa/PKmKgf8CIEDKbo7fyK3Fe0MVgr1JD
fu2JRbq+j894xm4MKsJ0s6zkluglDSUNb/diMN1hKZ27uES/HaIayWuMQXb7
Iyfb4n/09W5/F+2DGOyz/ZW4M36F7qNaBk7mGIhnlLZWhKzSzce01oqtMUiv
p93s8Vmnv4JLX9rtMJhUiFRZ8t+gK2VUVy87YBC7zvnKG5gQp+XuiyYnMPCI
ZO/c4rgJNVYbTI94Y5BTdSL8Zgsz0hOMaN7qx8gXmBhEXGJBj3zpxSr+GPw1
DAncKbcF3ZQy8Qy9hIG2LaeU811WtHT5hnFBMAadEyyplsfYkGfvB+mmUAwK
r21xrJdiRwdizYeJaxhkhFqSTB+2oqofsW/gBgbnrzbYGj/gQLL7WrM8ojHo
Cn5waekWJ2JdtDpafgeD7jXji1ne3AidtO+wzMaAfyqIqHjPizRq0koD8zDQ
vdcYXOvAh+5jfXHZ9zGov+VQkTbFhyIbHc0nH2Gwmd/yvwsyAmhOOltBoASD
mvSzvE2NAsg1bJBdrxSDurLay/nnBdE+DRd0vRKDXYNsbOmfMfT8dn5+yUsG
j2SuMuFkCpIc/x7eVYtBiKni1Nh/ONqU7aEvRcdgZjSvV/k3FdWx+VS+bsMA
i+H5M3NOGKm4lCSPdmAwGElZ43AXQbmvpgO4ejAItRg5aOciisLO+ascHWD4
WmEbaqwnjn5/fMETPoRB7ZnLZdeROHKSmZ8s/IaBWoII6wU7CaT/JbBofhyD
T+Z0p9kISVSiWX1deAqD8KCopU5JKSQS/89t/wzD73eWfZwNUmjV8LLknQUM
Duj2Se8U345qSq5mKDFToEdAii+XJodYze1oqawU0LUxHhBbkUNW47J3N3FQ
IKpo0ez9N3n0Q6o5pZuXAp+2PznZ1qKI1OpzMANBCpjFDEm2fVJCl538k4px
Ctzi9DLW/boDCdzFE66IUsD5s/+moxwqyEnrF++EBAXKuhL16nJUUFHHqzi7
7RR4UFdQkKSnivbyuMQqKFGgxjnH1D5cDXlHPL7RqUsBdj8uPdMjmqhCPIxt
7x4K7H/pIyohroU2vbaKKgJGn6fGghq/tVDq0kJEqAkFHNS52Yg8HTSS/GHz
uCkFTP1adl2O0kU71DPDbSwoMH+GZVLvvB5652MQJmdHgbwBf6a507sRD6fg
eoIDBZ5faFZK9d+DjjwcC1k7RoG7h90m+iP10fRIdFC7CwVEZLY09bgCEnLo
vhBylgI51vISKT/3Iff5h3NjAQx+I/fbn6XtR6UJwQFWgRSwutonq3nYEJk0
i5+TCWXw8Psq7dFmhBK8/k7Hh1Pg5daPrHcyjNEAG+m7EkmBcKMzseK+Jihg
n/eZtmgKHO3awhKpcBC9HtwzoRdHAbsdU2hU0BRtvczrVZBAgd0163GtbGYo
p7LcI+guBZa4dR6HsB9CH5WYXKULKcCyMTZ18I0lojS2D99+RIFW/uRv+49Z
IWePgpPLTyjQ4Fs+Or5qhRbzTJ1ayijwIjr3o6C1Ddq3V2RAp4oCCcM1ymys
tii2f/pYfg0FrgZk/42os0VSePKRS28pIMb34A3N9D/kW+bRO4IYPrzpCCsj
7FG1lZ79oQ8UID9vDfw8Y48OxwzaSrZRQHBjjf1XxREUvEnBsmmAAqeV57rP
PzqOxgw5e2WGKWBZzDaSW+2ELG9Mngj/ToFfZqpEUPsJJL3tqZ/WBAWmMuT+
mfM5o9vW8YvxvynwpZXKbPnEGS0lnwub+MPg6VAgNmrhgpqENeJylyiQdTfV
Ji7fFWmdxPCVFQr4NAmN8tufQrn5C9l2GxToOKauwMTnhi4oVJdwsOIQ82w1
YS3NHYnq6LecF8BhsyVTwg0mL3QjWOy/VgoOC38Gb2v89kKzr5m+ytNwuHSi
Yc3puzdqMHo39VUcB9fbgRbOEz5I7eb9C7rSOAQ9FZT5suqLMpuurSXK4oBp
r57k5jqLztoc4D6ojEPFh7yOQq1zqC9FPjlfFQcm7Xa79Y5zyLCPQ2RdAweL
Dx4v/170R4Rzs9KLXTj4y4nwR7cEoLe+1uYiB3HoPekQ6994ESk9V+8MNMeh
ku75i54eiFLmBR3bD+PgoBAgHeV/CXmH9Hhf/w8H8kjfBz/dINT9purv8BEc
RM+vvN8uH4yAOT1493Ecykfj7D0lQpDgLcfoP644tDzadOuzUigKbd4jYO6B
Q5ryY/cnEIZ+8oplPPDCoZn+dFBx5xVUmzr86Ng5HAaJgYdWjuHIvcC9EYXi
EB0Qyje8HIHafppYi19l8DU8JR30LBLpKcn3BV3DYVMvy4k0n2to24uJ8Z0x
ONySVVezXI1CQQtN527F4RCs3czv3XIdfdctWf6egIMOj+VFtoc3UFXd2a3p
d3F46VmT+cn/FpJksb4zl4nDjmbhxYRT0SjGRJ04nIvD6dXSiUWnGOTcMi/H
UogDymiYH/a9jTj6gw74luHQ1tJOWF69g7QCi7jjKnFQDLwa4oknIGf+3van
L3GQkfENCixNQFUHNI//qcNBMMYxR3I+EX3/5irJT8fhp3x/jWBOEtoWlvBD
rQEH1jo/vMQiGbmXT58734xDSsGEYuabFJRgKaqd3IYD55fq1zbhqah2wny1
vAMHp3eTGsEH05Cg5KOoxc8Mvicv0jam7qL626cygsZwOGd2RcrodhaalE88
mTGOg1tlYdL8zWxERfXbX00y+pv9z2bL7RzkuyL6bG0Wh1qbf3zKvbkoPeXQ
BdEFHORUlj9me+QhpBqit3eZ4WtwybeulTwk7PmZfmUDh0wn+W+a6vnoADP7
rbzNVGCeJ7+WdeejgGytw2+3UIEyrOtSEHYfNXYmfmbmooLKo1cuCSMF6JKB
xe8oKhUEZY8ncM8+RPf7Q14UClFhj2/f8/+RRag1sPjSe1EqXBkXG5nPe4Rk
StiZObZTgeCansX9HiOrg9rvFeSoUGnCeV/P+QkK+e4Wa6ZIhSovjSLPYyWo
g/YOj1WlwtCYm8NVjWdovfxP/xMNKui6V++4+voZUrASv9eiTQV1KedA6qFS
dOX6ZSVefSos8o+2FVx6jpTntA0STalghtZbf3GXo6Nx7qxlh6igPyuVr1Ff
jq4pJH/stKRC8ov06ItBFaj/5KwdxZ7RVzMSFW1UIvZVcSHto1SIX2NX3NJU
hdRTDw/ZH6eCX7WSqnJONbrV/Njrrivj3rgHeW1Ha1CF55edL92pIGFuvPFm
/ys0zMwx33eaCjdMXff4adQiHT2PMOGzVKjmm7wupPwGjT6QSMoJoUIWR9cv
RVSPJiOHl5mvUOHtCltZ+Om3aNYl74RnBBXE3/QHIoF3iElMQlH1FhXYBZ6v
LwfREevaUHxyLBUq8vh4T+ogxP0ld2E5ngpuPHx2masI0VLF375NpUISx5bk
tPQGJHFhSFY2gwqZO+cVhs+/R3I2ubHR2VSQrFtl4rL/gDS3iR+xLaBCqI6y
uKLGR2R5XWxm9DkVTv/ylDc72ors3QbtTCsY86JFjIh+G3Lan1NTUk2F1+Fh
zDadbch7Q/R6YB0Vbu3mVtPga0f+A18nv7xj/NNltNykqh1dqsm2hgYqjP28
lu7m1oGiAkVFt7ZQIW/i5fOM9k4Ua/c1wucTwwfO72PyiV0oST17/FMnFf53
XMy55Gg3ypsWKU//QgW18dtZaRs96JWHiLnSOCMvjekmPvyC3hkNlMZPUuGr
2NBZ+4f9qFEqC5+fpsKWBWmOo6UDqGdQ+FvtAhV8i8YNzg8Noq+1/Qck/1GB
9bS3f1bEEPqekVkStUaFew6GH2yEh9GsvXDQYRYCjHf/PBLhNIKWNfsHX7AR
QK5INDqzf0NMgplGVE4CDPB+PZeqb4i7TYhvmI8AJQOLU2WKo0jugNBDfzEC
DFnU6MbuP9FOmS/cPZIEbJCSg79MxpEWS0bALhkCfEsERF+o/kL762h7WXYQ
kF61X3ZcdBKZZvfd91QhIKh7xXZRcgpZhqRzNKsTEFs1oOep8hs56dC6k/UI
+DnzvtFLYwa5Ufp2/dtDQPOd0nDjxhl0Zu5unpMBAScDh25Gu/1B/3tG+Mge
IMCiUcCV9mQWJckRLNV2BDBfYjE/EDWPHJ1kCr85EDDstyNmcO8Ckk5SN+Vx
JKDz2B2Wqo0FVLZxKN7VhYCuQAu1jYQlFKJ5TP22GwGSvnKDQ+7LyNDbs7vK
kwCWokXhHwb/UGf3VWEePwI+aG2uteFZRZlc8W90/AmoLVOo0GVaQ6f2Zbm4
XiCgTT5t0PjfGpp7UvmwKpiAKj2R1CVmJlLg2qSG6w0CtI+lOQ0c2Ez2vVzu
iY0mQEyySfDa2Gby3gxrcNVtArbradUG3WQm1Rwl6rmTCdhnUyO9bYiF/HdH
+ZROGgECqeFcPElbyLcNu9hcMwgInDy2W8iClbRW/+9QVR4BHhCRpd3FRtJO
u86M3CfgqPO35Yp77ORI9tlE7ocElI/J/ZYI3Er6c0R/dikhILptu2+hJieZ
MPzGjbuGgLytx2fu8G4jj+LN7DqvCbisq72owcNLSh7qK3apJ2C6S7H6fhov
+bxq7k9lAwGZ+wQeP6zhI4N+b0oeaSRATicrJdaWn9wnvU2Hu4UAyzfs9Xdn
+cn2OPlQl04CtrXvUOvTFyTTkZZEbA8Bv5uMxz2nBEmXlf30yj4CVgekXvXm
YeSsuxMH9zABQ93K/YoiOMmnn5hSOcXwh9lF57orjewNyNUdmSFAdL+mH6+J
EJlb9KSfa44An5s/7A3UhEkV7L2kyz8GH5e/cY/ERckl0y4Us8bw587P+LPS
YmTdlRHPSiYa1Ch6bQRRxUnLydUSLjYaVHd3ny5XkyCpkhzW2hw0mG5eH10n
Jcghe3zemZsG8t/1y01OSpJn36nuqhSgQedgYFLYPSkyPt29wVmcBh+pYjeK
vWTIwItXA0KkaMBasLAiICdLOllni6XK0ODx4STO1xOypBJHd2CTEg1Y0ut2
FUfJkwJjf6R+7KSB8ObntUecFMh/9dxtm9RpQBdKiZLZo0h++J+RnLYuY3/X
gyx+vh3kMzvnTqvdNIgfSyGfsCqTaaqXr5zZSwOTt2danFl2ku7jZb15Roz8
x0++d2NUyM1HpG9yWdOAY3q0Xr9XjRzXAE1ZOxoo75AvCwpUJ9t4HYcNHGiw
JbnVf0lIg8x5n6gb6ESD7Sk9CR4XNMmo+09H7zgz7uV5SK9S0CJ9r3y88/gU
DVIt8qzYxrTI3TrMv4a9aKBC7fBw8dMhpQTFUlZ9aLDww3upd48uyTGjtw8/
R4M1BZ44CQE9srfQP908kAbeU/zXeTp2kRfwEdPKCBoczvDwFXi6l3T8u7bw
KYoGTv9i8t2OA2nYSuRP3qSB1CbdpOIfQPJft1qRiKdBz4kzLnwc+8hlF5/C
3YkMHr3DF8Pu7SOH9G/a2KfQ4KZsi9Dc3v1kyUJdcUwmDbZOnaTm3jIkk9v7
7QtzaLDbI+axmo4RGVKyxPz2Hg32v8E6wyaMSDN3FcfFhzTwES8X23rKhPzZ
lcPlUk4DBdM2lHPPlGwtrakKqaLBv6vVT55EmJEVsT2nUmtokKPqMKtwxpyM
NNpW21RPA80YX7Mzthakt4Ti6R90GmjtkhEqtT1MWq8ZY5vf06AooliuQtmS
lCgP9dFuYfQvucZVZmhFst9JJ6w/0WAxREYsq9uKnDlTgc500iBsodLhPx9r
8rX0b5F7fTTo1+zyGimyIYct312MHKQB15fCUzdf2ZL/BxqypMk=
       "]], 
      LineBox[CompressedData["
1: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
wD9YvOd0gyPzf9OQf0c=
       "]]},
     Annotation[#, "Charting`Private`Tag$14022#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10}, {-6.571650121208101*^30, 5.438613582491824*^30}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.736697950427306*^9, {3.736698008210767*^9, 3.736698019629163*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Numerical simulation of nonlinear system", "Subchapter",
 CellChangeTimes->{{3.7365162398106623`*^9, 3.7365162430542803`*^9}, {
  3.736697145908167*^9, 3.736697151729827*^9}}],

Cell["Doesn\[CloseCurlyQuote]t work yet!", "Text",
 CellChangeTimes->{{3.7378030582373457`*^9, 3.737803060480012*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"gs", "=", "9.81"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ms", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Js", "=", "0.25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ks", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"los", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ds", "=", "0.4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rs", "=", "0.6"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Tau]s", "=", 
   RowBox[{
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"Flatten", "[", "Kred", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "]"}], ".", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q1", "[", "t", "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"q1", "'"}], "[", "t", "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"q2", "[", "t", "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"q2", "'"}], "[", "t", "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"q3", "[", "t", "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"q3", "'"}], "[", "t", "]"}], "}"}]}], "}"}]}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"EOM", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\[Alpha]", "''"}], "[", "t", "]"}], "\[Equal]", "fx"}], ",", 
      
      RowBox[{
       RowBox[{
        RowBox[{"\[Theta]", "''"}], "[", "t", "]"}], "\[Equal]", "gx"}], ",", 
      
      RowBox[{
       RowBox[{
        RowBox[{"l", "''"}], "[", "t", "]"}], "\[Equal]", "hx"}]}], "}"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"g", "\[Rule]", "gs"}], ",", 
      RowBox[{"m", "\[Rule]", "ms"}], ",", 
      RowBox[{"J", "\[Rule]", "Js"}], ",", 
      RowBox[{"k", "\[Rule]", "ks"}], ",", 
      RowBox[{"lo", "\[Rule]", "los"}], ",", 
      RowBox[{"d", "\[Rule]", "ds"}], ",", 
      RowBox[{"r", "\[Rule]", "rs"}], ",", 
      RowBox[{"\[Tau]", "\[Rule]", "\[Tau]s"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ICs", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"q1", "[", "0", "]"}], "\[Equal]", 
       RowBox[{"Pi", "/", "12"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"q1", "'"}], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
      RowBox[{
       RowBox[{"q2", "[", "0", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"-", "Pi"}], "/", "12"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"q2", "'"}], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
      RowBox[{
       RowBox[{"q3", "[", "0", "]"}], "\[Equal]", "los"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"q3", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol", "=", 
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"EL\[Alpha]", ",", "EL\[Theta]", ",", "ELl", ",", "ICs"}], 
        "}"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"g", "\[Rule]", "gs"}], ",", 
         RowBox[{"m", "\[Rule]", "ms"}], ",", 
         RowBox[{"J", "\[Rule]", "Js"}], ",", 
         RowBox[{"k", "\[Rule]", "ks"}], ",", 
         RowBox[{"lo", "\[Rule]", "los"}], ",", 
         RowBox[{"d", "\[Rule]", "ds"}], ",", 
         RowBox[{"r", "\[Rule]", "rs"}], ",", 
         RowBox[{"\[Tau]", "\[Rule]", "\[Tau]s"}]}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"q1", ",", "q2", ",", "q3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"q1", "[", "t", "]"}], ",", 
       RowBox[{"q2", "[", "t", "]"}], ",", 
       RowBox[{"q3", "[", "t", "]"}]}], "}"}], "/.", "sol"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Alpha]\>\"", ",", "\"\<\[Theta]\>\"", ",", "\"\<l\>\""}], 
     "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], "/.", "sol"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"g", "\[Rule]", "gs"}], ",", 
      RowBox[{"m", "\[Rule]", "ms"}], ",", 
      RowBox[{"J", "\[Rule]", "Js"}], ",", 
      RowBox[{"k", "\[Rule]", "ks"}], ",", 
      RowBox[{"lo", "\[Rule]", "los"}], ",", 
      RowBox[{"d", "\[Rule]", "ds"}], ",", 
      RowBox[{"r", "\[Rule]", "rs"}], ",", 
      RowBox[{"\[Tau]", "\[Rule]", "\[Tau]s"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(x\), \(CoM\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(y\), \(CoM\)]\)\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xVPP", ",", "yVPP"}], "}"}], "/.", "sol"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"g", "\[Rule]", "gs"}], ",", 
      RowBox[{"m", "\[Rule]", "ms"}], ",", 
      RowBox[{"J", "\[Rule]", "Js"}], ",", 
      RowBox[{"k", "\[Rule]", "ks"}], ",", 
      RowBox[{"lo", "\[Rule]", "los"}], ",", 
      RowBox[{"d", "\[Rule]", "ds"}], ",", 
      RowBox[{"r", "\[Rule]", "rs"}], ",", 
      RowBox[{"\[Tau]", "\[Rule]", "\[Tau]s"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(x\), \(VPP\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(y\), \(VPP\)]\)\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"\[Tau]", "/.", "sol"}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"g", "\[Rule]", "gs"}], ",", 
       RowBox[{"m", "\[Rule]", "ms"}], ",", 
       RowBox[{"J", "\[Rule]", "Js"}], ",", 
       RowBox[{"k", "\[Rule]", "ks"}], ",", 
       RowBox[{"lo", "\[Rule]", "los"}], ",", 
       RowBox[{"d", "\[Rule]", "ds"}], ",", 
       RowBox[{"r", "\[Rule]", "rs"}], ",", 
       RowBox[{"\[Tau]", "\[Rule]", "\[Tau]s"}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", "\"\<\[Tau]\>\""}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Etot", "=", 
   RowBox[{"KE", "+", "PE"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"Etot", "/.", "sol"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"g", "\[Rule]", "gs"}], ",", 
      RowBox[{"m", "\[Rule]", "ms"}], ",", 
      RowBox[{"J", "\[Rule]", "Js"}], ",", 
      RowBox[{"k", "\[Rule]", "ks"}], ",", 
      RowBox[{"lo", "\[Rule]", "los"}], ",", 
      RowBox[{"d", "\[Rule]", "ds"}], ",", 
      RowBox[{"r", "\[Rule]", "rs"}], ",", 
      RowBox[{"\[Tau]", "\[Rule]", "\[Tau]s"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<E\>\""}]}], "]"}], "\n"}], "Input",
 CellChangeTimes->{{3.736516251897436*^9, 3.736516276359495*^9}, {
   3.7365163091558037`*^9, 3.736516319289554*^9}, {3.736516363318837*^9, 
   3.736516676835204*^9}, {3.736516742247307*^9, 3.736516763570147*^9}, {
   3.7365168014087887`*^9, 3.736517003843437*^9}, {3.736517086369216*^9, 
   3.7365171035683327`*^9}, {3.7365171612086077`*^9, 3.736517163977754*^9}, {
   3.736517237668106*^9, 3.7365172391577787`*^9}, {3.736517303585773*^9, 
   3.736517478303873*^9}, {3.736517522494616*^9, 3.736517540352668*^9}, {
   3.736518488703261*^9, 3.736518593193028*^9}, {3.736518627434277*^9, 
   3.73651871179158*^9}, {3.736533464448594*^9, 3.7365334694820213`*^9}, {
   3.7365339543746023`*^9, 3.736533982164732*^9}, {3.736535350745142*^9, 
   3.7365354001725197`*^9}, {3.736535930014945*^9, 3.7365359443605843`*^9}, {
   3.7365360471187897`*^9, 3.7365361221894417`*^9}, {3.736539057440064*^9, 
   3.7365390886198874`*^9}, 3.736539794243577*^9, {3.736539936231162*^9, 
   3.7365399557890387`*^9}, 3.736541586396906*^9, 3.736541652527224*^9, 
   3.73654508586843*^9, {3.736595060496829*^9, 3.736595084713395*^9}, {
   3.7365998032878036`*^9, 3.7365998485252323`*^9}, 3.736618364780468*^9, {
   3.7366184360159283`*^9, 3.736618448524275*^9}, {3.7366184822479153`*^9, 
   3.736618483976836*^9}, {3.736618568400517*^9, 3.736618568811865*^9}, {
   3.7366186199935303`*^9, 3.736618640358107*^9}, {3.73661868847099*^9, 
   3.736618739675844*^9}, {3.736698193872917*^9, 3.7366983146221867`*^9}, {
   3.7366983455108633`*^9, 3.736698476238504*^9}, {3.736698643815864*^9, 
   3.7366986606797237`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "214.0955266101023`"}], " ", 
    RowBox[{"q1", "[", "t", "]"}]}], "-", 
   RowBox[{"0.02546767069361522`", " ", 
    RowBox[{"q2", "[", "t", "]"}]}], "-", 
   RowBox[{"60.24789073378702`", " ", 
    RowBox[{
     SuperscriptBox["q1", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], "-", 
   RowBox[{"18.54572753917836`", " ", 
    RowBox[{
     SuperscriptBox["q2", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.736698422433514*^9, 3.7366984777564373`*^9}, 
   3.7366985699410973`*^9, 3.736698662449966*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwUV3k81F8XxjCMGUtZkxj7Li1KkXMthUgqSwpJdiWEUGkhVEh+tjYRFZK0
CcncsiRbRDX2fUn2sa/vvH99P+dz7z33nOd5zrnnK+V0/qgLGwsLC5WbheX/
38ehTsRtznd0L8Wpax390gDlTVQzG6oHnPq8rz7+WwOsV5aGUanBIK5Hs7zf
2gC88QX53PQbMP1ee5221ACPcYwkB/UW7DU5EmGk2AiqE86x6253wWT74E2z
M43QwZu6tvInHsbV/U59etkIss9Ju5aWE4HbRVbbgPUnnN0XcG5e8j6wuo1o
mJz5Ce+auzNnDB5BycKIYkfDT1jyMmufcnsCI1PpoW+Nm8Cw7p7c3J+nQFxX
OkS1aIamZfeESclsCJENr0sO/Q2B3yQ0Jt7kADY62DDC9gfE/muuGTPIhV03
Ty8evfYHSh1uu43+egVSLs5cYbN/wEkZEf65vYYbfKX6OafpwLYc8mPmcj78
272y26ecDs3dVltm9r+BvWSPmMEtLfC8UsOLwfsWahcSjvt7t0BQLrlo+s9b
2Jck3VBa0AIH4weJ02nvILifMyZ+vgXEg75YTnm8hxXHLY9+bGuFcftHTye3
f4ARX6u7tq6tgA0uTk4sf4An0jJ0clIrxCsd1Z0oL4CkwVTht19awZlPLXo8
5iMU1gm8JYy0Amdbr8KYZBFg8elukR1tQMefA0aHi6CLmgVtlm2Q8zyl7N+b
YlhKFdxpHtAG5n7mp0YMSuChtMeS/7s2SCIVJw250cBMQGtgs3I7vL940O+C
KIaZ+7UZmkbt8Ghk9ybGZQyV1pQ+Jed28G7Y6Da9/wtkPBDbn/y4HTY+qmKb
+vMV2Ay+aujzdMAyb0G2j04ZkH+kb96k2AH91zMsJtPK4N+eZiNL/Q4ocAtN
nfAoh+4joofi/TvgSavX/vP15SDvzO16OroDog7Zjo5vr4AiDsSlntEBJ3bs
3Du+XAHJc4EKJ+s6wOC5VM85x0oQL56+eKe7A1Q38UWNlVcCW7BlgO10BwhF
r6ifU/oGd/X19uezdcLa2t9fozHfQLi+/fnlDZ0w5Pvn8tnpb1AyUsH/SqIT
GvrLZUatq4CqUli5TbkTCm3eVnt9qgLjWcXhlR2dkF79xPef5HdYX8wIYtPp
hJmUD8pd0d9Bvt7wQ5Z+Jxxwq+n7ufgdzrwmFsoYdcJ9zZ5Hla7VIKU+WuZl
0gmjhHmr4qZqCHxp++IS04afFL48VAMuHvRcC+b++DTpqvRXNcCX8yZqhOlv
wFvreqJYLfwNrjtgyrxPa5/53luRtVDO7aJ5kRnPHbIz4/JMLZzVbv/hr9gJ
nS3BuT6n68BAdSDLbHMnbMu66+JcXwfug6ctSZROCA98JnFcux7y3mVafFzq
gD+Gn/6YZtWDQsfFCeehDlAWaIwDoR8Q0vFJV/pnBzS8XmFTmPgBHJW2+oJP
O2AjkBx41Bvgjntxv09kB2jLJ+yNdG6AW15L3apeHRA7k80IaWwACOpWllLv
gJ33frk4Mev6yG+p+KrMdnAIctRv72mEYyfJHP1X2yHy1D8Ja9GfcIZ9x7ft
J9qhVY2VbnLzJ3wbSQ/uorTD1WrVg9tONcHkXoZS/rk2yHrzUf5lYhNIn87z
fby/DX6m6BPkapvg+la9Ny+2tIGs2/ES0T3NoHxhxOl6fStUE8LVWQR+weG+
MbLUrlaYGeElh5j8AudvjVsaN7TClp/3hxhXfwGrsgicGW8Bn7TXaUOjv+CY
IOF9SE4LPIjce+W0zG8Y7yoWkLndAmXeFbZttr9h1u7CdYZnCwjva9v4o/I3
GLv0ndPXaAEk6zphvPobJBxmuOiCLeBBnqr5uuMPZHCY95Ut0SF++lKWjucf
oHsbP+fppUNJC/FmQdof4A34fPZTNR0G8b3TGn/+wLeD1ysb39OBL0tcN4eH
DspSvZ+PpdHBKXD7/OMQOhjZn9F/cokO0fafm0Te0EGFRznJzYsOHwyN8+8N
0eHFirPqfTs6dKo0RZMlWuAzxypJ4zAduAQcPG5atsD+L95z8gZ02L40vH+d
mRf3sazoi1p0ONlzQTr4Swvo7/A3F9tKh/CqtbVpZp86YXq5gKhAh7zXt9rO
qreCJrw230Glw8jGkeiDp1th187k7H9idFAIPKirmNAK018+KWcL08G5JWeC
41srBNfWH3ASoEOaDjm9b7EVBDbbLFM20KH9idfRL6ptUByR35nKR4dNhFrC
k1NtoLZTR4OHaVu7qn64HN8Gt0R8h82Ydvz3aNcTFW0g96ax6ig/HepVx0S0
Ftrg9NQnL4GNdCDHHfoupNIOtAv8lmGCdDBmvAph2DP7EkN7JUmEmY81r2pj
XDv43Tw9oL+ZDrjIuyOvrB1E7IWfX5Kkw6r4j9jouXbgs/mwoClLh73XtiJP
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
hKmDlBfTfPn/5OBZWWL3HUMdbHFUyPbolIPthU4vNpJ1MKqdK3nntRycTc26
taxHG03s9Hxnv5UDV/krlaUF2vi1EVo3jMjBfC4pforQP99mrX7BFzlweoFT
Rj7a6FHjmTo1KQercoaHlzlpI8Ny79Sav3Lwbted/lg3bWy/H+V5UVIeNn47
e98pQRtj+Mn1E3PlYWHxl1nuP7TRovTyUhFJHgp2+j3566aDk7ySxDSaPOwK
eZFgvUsHi4rrvo8oycMdburyMCsd9Fn6fJP5InnoTZ7lpa+gg0r57x6e1pCH
ssMjjsI+bXy2eHLxgK487EWwopZr48mLUieWGcrDj33aHUsztVHIoX+OMZOH
iapzARaJ2vg7fcn6l0J5yDfJ1+nKJuaBzq9YaisPI2jzXzGhx46zKziH7OVB
7qrApmW9DiqTN0Z3OMlDTeBEVc4NHeyK3/FBxVUeyInuB99f08FEmbDVwV7y
UGyd/DAgVAfFsSduN/jKg6d5i8FDgQ5OS2bQWQHy0F/0b8cDQv+7R65H7AqW
h3b5P+Y4qo3+f+/3V4XLwzJfmYN3nmjj4rDHInKUPNh2S5xd3KqNPZM9173j
5KGntDo+Z0Qbk/d9It1NkAe/mwZeMbY6uPLL32DpFHmAsBqz3T06ONNf/tWm
DHnILk1dyp2vixXDHCi6KE/cN+5ujhvRwcBtunn/rsqDwuhXiReFOqg+aCnj
WCwPbK8G89B9Oti3xSEgt0Qevl2sdsmw1sFzPR7PJu/Jg95M4BxX0cE1G/cY
21bLw+lN75veEHykXkRmZzQQeqiUXV/J1cFKxyTJsVZ5WB/kp2pH+BnUfskX
nsnDHKXlRW85uqhld6c1qVsedv6+eKz/pC6+bazVf/dGHg5EqZx6u00XM2ye
pRoNyUOhhogTS+x3rHk7dfyTPBxee3Nu1SsdlLH87tkzIQ9JKZJdFld0MFSg
Ln33tzzsMOrudT+og++tNhefnqEA5WcW5e8i+q8XJazfIa0AqTOaBg1O6GDN
iurfQgUFGDpACpdfrIt6q77lKNEU4Nh/VqbOMnqYvXqJeFJJAfqHdmxokdRD
WYdNn9oXKUCCcFjK/LouhjnGJ1/TVABxdMHmDS66+GE9GkfzFMByq3m7MksX
nTdM9LnyFSB9a/eY5bgO1m1UizG0JM5Xre17M6yD+q4btUgiBbgt9fr8Pg1d
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
pcZpPGR33LX+tYiG2bkZ+TVvePjue9TWhCU05D3cPVu6jIcHxATuzFIaciZP
TDO8zEM5ZXn/MnUamAaf4tYvPCxY0R0iXE4Dh2LJGN/nIZd7PeqDBg18CX0n
ivD33nlPYqgWDc5HLNVTfvIwLHjNmdk6NJhHuf/Z9piH8xJFM6+uoMGxatbN
ods8LMx6lGu0koY32W5bZ0/hI/9u6u1nejSsWl652bmT7OtTp3ue+jQke6/O
QcJfxOclDf8MaPCff+iYsTQf5/8bbDm1hoa/E2bRmh94WDz37kt1I8Kf+jLt
Gw/JvS+L+lhtTEP8Ur3WLmU+fjazGtgMNHg91phZ+Z2Hh+3lfn8zpaGnb6HO
9w4eqvi9mRK1lobTzY39Yep8LI25JjnfgoZGwarPIr95uPG8v3zBOhqOHl+Q
/uwzD/uKVlPr2IQv3lXBVX0+xjROUX/JoeGe+JFTEwQP6+1D3T08Mp+M8dfb
Y+Ref50ynm5Fw8C8iohucz5uknJiXxDQEHV8l3y9JB/7FyzZqLue8LEn+e5H
CT4eXTPo0LiBhsA7/0W8FfKR3lju5mxN9muqWXOwPB8rPA77/txEQ8uF8bt7
aT7ahvP3x9vSMLPrZ/hZez4OnJp7mLajQc7FoWclxce4vNfxpfbkPqSU130w
4OOC2qupAgcyn/72pMXb+di8bDTrpSMN1rNDL74j+Pelsou8ttEgZuRw4RWf
9Bc5Wz3qRMP+pO74Sbv42OTZ+zjGhYbeR7TcwCo+Bj4zeC27g4YlKd8cHzjy
UcUori/TlQZD45ddG4L5+N+Vzt9aO2n4pudZU7SWj3uk1cXvudMQ1As773nz
USkkVN7Kk4bX05OOLTvExwc9TQu7vGgIU0qqW0Dw77ZS0vX0oaFEqnXrif18
nHfHx+zXLhpKA4fuZcXxsYZVuT7al+AZNpRavYWPPnGSTnP8abh+azxveQwf
5Ya37rq0h/CRrlbSmMLHe1vzQzUDadgSh6w+Vz561E/EVu4lfJpa8jKS+Sij
LTzDC6Zhr8kJXm464ftcxpWOfTQ03dG7pOfLx52iA8XuITT8168bNo3EpXdD
7UgoDbLLxnavz+ZjWXvS08MHafjo3Ttdgcy73fTtm9nhNKg1WL5NJHGJXO3+
jAhSf3rbQPUNPpbIRo4vjyR4whxPp0by0TmsZUbFYbJvs26JO+fziT/SCtxo
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
f+T33IY68xYh/g+J4931
          "]]}, 
        Annotation[#, "Charting`Private`Tag$17030#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$17030#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
DzfTnmV3beBisAnn+L0cKaixnyxXtCb2e1ca++voJNxJeFBpsJmL/GsN1x3l
JKAtd8fG3o6L9TeuPppuOwwPQ5JaTthzccVu7RAXXzHoCRLdUnZwMTOz0QpU
ZTD7QEJf+S4unjzovjywbQyW/I4J6HLm4pfJoG+Ti4SQ5xApo+jGxQyFmMcR
v0Ww/ENYjME+Lq78u22967tJKLE4SbP34uJtf5uQzXMI//DKP+XEQQKvvQ7f
FmYRfDE8rJviQ+TLZaG5TLcArB7uzyn35WKRbPWUH4snoE7NfWWXPxF/V0t5
s6UMbkl0fjsrkIurKqqy2tdIoGHWzi0GQQSfWOVMjrkAdpze2rotlIuyOfHc
xntSaBvd5H7iFBdvCFSzz0TJoMvhDQO3IrgY8WGJZHXcGHR0mgeWR3HRO+le
edaAAMxvf7i7IJaL6qzhmW0BYkjd4Vh3KY6LQ/GMw5EHZHCS/HdEcpGL246I
/UPOjIFzra/m3kQuDlLX+yq5CqA4Yty69joX2/lH/4tvFQN3dfTxxclcjMyb
XUdFGQwaod1Nus1Fv5ioczsjpNCanfpeNo3AK85G7vz9YTA9oDdy8AEXh5n7
7RNMJHBdK1+jIYPAx/bKmat9kzDStsZ6ZSbBt51WVsWGEth+9WPAvWwuym8f
6vCt58OLzbvuKOZy0T81I3L2LQnQZnbV+ucR5xt9lqFJ+NOj5X6i/1V05XEx
vV18ImmxFBFpZu7MpUVJ/ISIcySVLBFtVCpRlCSyVKQkS4s1KiUiotIqbaKi
ECFptWdJWqfZ1/e+fz6fe++c85zzXc75az5V6OHt8DkdefFCaA6XE6uq9fBl
ckhVlDYH5pmfXZNXQ+Fr8fPy6PHUPjEw5eCU53qo+L331V2RDAbv3rxx9AXF
V6t1dZtT+bDee07jr0Y93N/TdionZxjydMt5695S/c2cNG90tATGtVgTpc16
eKdjvA4RJ4WAhHf2jFYKf/52mWb+XHhl4x4a26GHxveT2vYODYMRrSdj4JMe
VgccXW//XQKny/e/cv6mh6Gj5zgdrRHDnxAFt7qb4l+j7EniVA7YmMQxDf7o
4WR6p623wQhk/Zpqf65XD7d/U6/eriQF5YzMA4J+PWy0OBRMXhHCdlfTjG3D
enjGjP5a9nMQarUqXjZw9fBn978y+2U8YDWu4s4V6uEG/+A/csq/j8e8ZyRL
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
OPA/K02TGQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$17030#1"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 10}, {-63.702731904318036`, 1063.7204946378065`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Alpha]\"", "\"\[Theta]\"", "\"l\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.736698422433514*^9, 3.7366984777564373`*^9}, 
   3.7366985699410973`*^9, 3.736698685774597*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwUV3k4lN8XH/vOGGNJQiWkSCUl5VylUKhEi2xJSYSIUlq+SFIk2SqkqBCK
EMK1RrbsO4mxr7NgbPnN76/3+TznnnPPdt/zORvtXE0vsxMIhBFuAuH/39j7
dtw77Z/q9PMcG43sL8PlzfJGZ+Ud4Q4zuvP/eO1nkZ+8vDfoPCldimBh4bCc
r/wdvhDnWb45jIVji4PluOSfQAh56MVjFt4+Yx+y5vAcQm5xZrmxcK9w3L+V
9jBoqgwbOsLCCh/5NJeWI0Bo9ab06p8y7HzQ8/qC3CsQsla++4SFv7X0JzIO
x0DWHh5GV18ZXnIy6qE6vAXnHYpFvb1lOJ6t58nCkXdw5ozisHdPGdare7Fl
vv091CmT/oR1leHRaP0ShmMiLHgLqvJ0lOFn9quW9OUPMLPyUvNrSxlWV//G
pAZ/Ahfn28ftGspw8/LV8Fm5ZKjiiZ2crC7DXpWy6jMZKfAy+pTF+vIyLP2y
pWbqcCp8rIhwyP5RhousgxwmW9PgoMC7wIcZZdhOBXFMOHwBn2oGv+6HMsy+
fOc3w+cr1IssXvwRWYZb+s03MI5kwKxZk1v2ozL88ae6E104E25+21awcKMM
304VyKO1Z0KuzeebJhfK8LGwYW5a/Dfgn2oxCdItwzK3S8yojlmQdTdf4T+F
MjxtFfN+dlc2DIsI2AlzluHiw7dmZ5azIUaiQkesvxSHbTXVmSnPAYYp9bdX
bim2F1F9Nh38HVZuTM5tCS7FPN0DSlNyeeD/V8RGc1sp7igu9JwcZWGjTV7P
GCU45WN02URGPqS0p6lI5pdgE3cTm/HDBRCC5VeHtUqw/LmtaWOChRB9bkJH
j1GMaQc5l0dbC4FhW4q5PhfjSL78yBEHDKnPnU35hYtx1q1j7h5SxaBgt9F8
9SbGMeN719F9isH/PjnevbIIuzSQHGhHSqBfl3xq6XwhJsVUsVPbS6F8tvwu
78F8vCyck+x2oAxWPPHuEsc8TPkv4eRsfBlIPZORNAzLxTkO9+NmHMvBbcdJ
d6mOHGyxW2P/9HIFyMzkrp1H3/C76rc3JuR+QXzCFZP8lE+YEZ2t8ufZLwh8
d/3IsdQP+KhDzWDT4i9o4FleY89MwJMcC+b5zdXwVVP3jWDMW7zvoMn+J49r
4euXm/by1aH4qYA93YdRC8X/jF0vhAXhvk7vVLeLdWBby3P+d4kf9vf6IHtO
ux4IYoxMbjEn3K73o/14EgvHcytd4NTAKmKNoSD+GwibB7z8hS5Dw5cVdqWZ
3yCvsbp3ee9DIAGftZBaA6C6ecI33UegrRi+/7F9A8RPbF8ftfwE7IXkJNne
NIDtP22jnXYhEMJIpt9pbIBZWWlM0noBud0aDQyeRnAzla9YR34Jf0txqotO
I3w9OuwVUxwO/CnHnozebISHF27sWHcwEjRetF62+9wI8UvKWbKBUWB92/ZQ
z1+WPvv8qFF8NDy2mZA9I9UE6s0S98z9X7HseC3/NmmC2a64kJVdr6FLla3D
8BFLTqdprPv8GjjEn2WV/WDJK04uREy8hu0rEi8O0pqguOqf2Q36azgz+O76
d+VmcGv3kSwqeQ0Pqrcf22nTDKEMnw8J5q8hKeO74ueIZuhXcT9knf4KmqIP
cWypbYZi5bajUBMNyw/q/sSxt0C8pY1B2ucoUHA4VyCl1QLEo7ekFE5EgonJ
YHSYK0uuoTygkR0Ot/a4eAp+bAF5W3HZgN4wiJdZPBXQ0wIPXZ8HNFeGQjWH
vxpBrBXQsaiq7pFnwBgXFrhj2AoPnRUXPMsew4amVyP0B61AiMmOv7bJF47m
KZRfz2mFYiebpC98t8Et/kv8yCTrPFPDj5h6GV4/3n/v4uY2ILy3fSSbcgyX
uVSc7z7fBsX8wem8t9yxxMFu0u+fbRCv9jBmuOYJRgpXZgxW2+DrfMD2IvsX
2FGAWlO6ux0aBMOGDspF4oJO7kc58e2grg+O5pvi8XDxi4vq7e0Qr1ezgb/9
PRZJktFJEeoAt6TObvGkD9jOa9dC7J0OIKoG9Z+O/YyfWRU2S2Z0QLk0v4Ff
cTrO1jP4+mKkA4Yp+Wrsa18xr5i14yOzTlC2ZKxrssvC6V+edDurdYFKy72Y
H/k/8Dhp/Nmxi12Q7m5acf1pIVbyOqajHN4FvKqJwYaXMY4/IPBucLELNFyU
FWJfleCwX8+uWFR0w8YFT0ebqArsNficqm/ZC30voSdbpR6/FajxEz3SD/cr
PGvbd3VgnYN3LR9a98PJecn9D8s7cI/Ltj0zt/qhsrvyRIp5J5Zqejpcm9IP
Zte73iOvLvwi2sgwkPgXFMITUWt6D/bbUi+81v0Xsjav3CLc6ccO0Phq0n0Q
PlbaK/rYUjDh/Xx+99NBEKtpUYl4TcHRnDI91YmDwC11pvq/Fgqu+nVFNrlt
EHabG29hMxjCymYr7y/vp4DTkNOmCbVhXJyzsdzsNAUuPTCKmLk6jM+t0x86
7EyBRGUv9R0Jwziw74XSpjgKGOWb/omXGsGjV5VS+9iGQIPfdfkQ3yh+WGNU
Vyc9BM6mwCTqj2IpNffpgt1D8FVXQvPbo1FsQC9Qf3N5CIT9utdaucZw8j3T
7LO/hsBuRfrSW/I4PtR/q+3owBAEyLbokC3Hcdeh2IU9y0NQv5o8dubDOObn
HdUiqw5D0SH6HQ6dCXwt7F5RQ+gw6L+o0xkJmcTsc+//4ORhWGbX902emMSv
z1YRvpQOQ+zfkG/xRlO4WkbscDBjGCa+H67okp7Gdg/22fsIjcCbovFvbAHT
eOmv1SMnxRG4ZR9Sd4M6jbd9Sqo0PDcCXxlHJE6VzuByvvrRfTdGYPHAQuwr
0iy2dKbzKQeNwOFRu6FXurOYUS+1TTJhBFS3ndLovj6Ln+3UMeIuGIG7hiuX
NkbNYoXwS9fnWkYg3LGg/kDhLC6YDwyhTI3AMX3VZO7+WWx2Pv1LM/coqLTt
SbBem8WTP5obSuVGYYlN22breir2l12kZuwbhXcOax4ndlOxzH+yYu9OjUL9
5u7KAn0qzho8rBF6bRQUtjdssT1HxUZHHc0f+I2CvYI6U+UyFVOSQrxcYkaB
XebHelEXKvYRyIqyyh6F19UZpbweVEx26cw1qh+F/bqmdvw3qTit4V+n9sgo
rARwfCLeoOKjuxWWVQhjgPZiZ6lrVNwXYSgjvW4MFF3V8uVtqNiL6XKQb9cY
tCmZFKqcpGLhC+HWzGNj4BdOq9I6SMUfC/MejFwaA/8TH0xPK1Kxjvyf+Daf
MVa9A2fvC1Bxmy9naUXEGKy0s5/9OTmLXYa2DmaljwHPS5Eze6pncb91J2/J
rzGwDBe8cT1+Fp/uCFSro4zBm14sq+c+i3+e2mfWuTYGojsfFbGmBN5XM+I9
JD0O9TJyvqp8s/izXtRb6p5x8D16sWo6ZgbLFh2tWD05DgFOF/bHyM1gjowP
RInH44BPbcyzFJ7GXirmmpvej8N0rLU0390pPJrAaalWOA6HJY2fsf2dxPWR
lz4dpY+DpTRvCLyewNE+G3Vu2UyAvP/1R5W1o5h/vuGS350JmNxhxhEoPIrv
uT588jxiAnzD9NeajEawnd2flk81E5DwuDRnrHgIbzeIderYOwn1ucMpheED
uERs3Sst4hTo2uy3GcjpwBrBVUVHtk2BrccFty7ddvyR+zbl1NEpeOFLPvax
tRU/W2zbcc1nChS1BCXPr2/G/9wDzL2ipqD81Vlbwu9GfGNyz13fzCmY9OTW
WA5pwGf+hP98PToFvBXTPw641OKqc3qTHzmmQRBJHH6lW421m+ii32SnwfR2
luO33VU4/XjCXqw1DcalIpEjR35i+QpTqxqzaUgS+Vzx0Lsch+mw+7W7TsP2
iNZdub9ZHCk3I2kwaBrUO6cEsw1L8O2dF+tnPkzDP8fJq1KNGI+nEBnLxdPQ
keHG99CiEFsqFK/j7ZmGO+18+g93/sC/Y12BvDANRbTYjKazefiQpNxledIM
nBtWa+L//R1nhdYHbVedAaNUmz8R0TlYif/+130GMyBx5JpvfnY2fu2n2qZ3
aQZauBVDopWyseBqz/LJ+zMwLlxWoDyThR94Pdto9WoG5mOvHTsglI1pM9r6
jlkzoOMnsvWebza2d5xw9vw9A8LKqYTrJ3Jw+8DrsP/GZyBucMOhyze/4y1q
W3p+ss+Cnnx9TyQ1F/eNr0wbEWfBekHqD19lPo7+1MLWvGEWJHZyqMUyCvAp
+1Ty+W2zsH/N6xj3HYz5N/or/dk3Cw/ZPZ9c3VaCqw682HH/yCy4qajIPkgq
xQHn4vZuMJ0FEq/eCeHj5Vjv5mcosJ6FgY3yMdmkn5g9NFf/gtMsmJ2cT+Vc
q8TFnytOLN2ahQC7WMe7ItX4fmXT2Vf+s0ALFpUMOlyLl/5NOrTHsvDOskTq
kwacK73k6pUyC0KT3twX2xuxlybPbfHvs1DaPkJV39OMadc3Bp5uYNn3UHbc
K9+GJ3rMk36zUwG7lUed/tiDU5h2X11EqDCyrJjj5tiHr5LdcoVkqPBUrPOo
s0w/phwPqjq+hwoNSRfUhFf/4p78otFKByq84rv2yWFpCNdGK20trqWCz0Dz
IRwzjYOyNHbadFLBKipcKjB/Bhs06Gr9G6LC2KS5d47zLC7nsTQ8sEaFj9WH
7+Q/o+ICr1DH3J00uLnl5InGOjq+ExZ746wODWYdUzTTrRh4X3qK9/wxGpy1
sfffOcXAWUPlTzTsacDWRSV18s/jNLPF5K+RNPhtyB5+Q4eJnd24M08k0IC7
X6po4y8mVnkmlj/9hQYbIjpuRpou4o9lqtXbf9GALyBO65HtErb/s7+pppUG
V5yHDspQlvCmZf2uawM0qE35tpJjv4zjdtmNJy3TILFMjOhvsYItTVxp+rx0
kC/3fupXv4Klr/ksDZPpMFvWOqB2cBV3PHrCHrCRDvd3PQoR+riKI99F8m9R
o4PjBUOV77z/sFlhAql8Px0i6a/fN9n/w6TOr9KX9Ongcb63lZz/DzcwCjex
m9Fhcn8tCXjXcAixRuWdLR0aNblSN5xYw3l7N2SbuNBh/dkqwfsv1zDF2hVW
7tLhSI6CIK1+DRMDSn4lP6FD5b46vTQCoVg7TczsbBQd9gkp854SJxRfabnc
x/mBDjEdFv+sthCKw5a/X83MpEPcyXuURnVCceEmfrpNMR00g/drp+8lFI8a
Wt4TqqcD+eI6bqYWoZh8I53nRzcrvu2WYd9ZcogmhF0do4MxHDjMZOlfw6Yy
Egt0kNowerGKZT9yOPFjGScDKiQUZvdJEIpLhBbUb5AYwHe8zseKnVA8qWH4
Q1aeAX4rEfSoljUsZfnmSK0qA0rZTytqxazhw35Tv721GaDwyE+4+cIadkkB
CyVDBlzRrFyLFVvDrxtfUFrOMOBj84HO1rJ/uII56OJrz4DDcusK8pz/4Vk5
zcUd7gx4F/61/KnwPyyjH+jX+4ABzio9FaHJq1jfpUvoaTADJq8XcRN1VnFc
wf1Nw0ks+wWXt38wW8G/BhtSX+YwwO1y4tfT7cuYwb95r245A/o/Lh5MM1vG
x89XHo/5w4CmISO792gJM+dEPE0l5sDxVu/Vp8MLePMGu7W1zXOgaBfmeF9/
AZvoZT1J2zkH7JvBPv3DPP4Qdi6O13gObEinPEQuzGHTHe8qi/zmQH9XYXBG
Jg2nXd0lvY06B4/4Uv4b+zKOO577J3b8mwOza6G+9ItjmPN7m1qA4DzEUXM/
hkmOYguuu4f/Ks2DxwY5y4vPhzDv+zLnKOt58Hu8pHilsB/v/iW+oOc8D392
bg5JVv+DrWcd/qN5z8NHF79kL0YPztYRjDSOmIdn/+XVDCd1YLtuM8xROw8W
7d1Dju0NmP/N3+s3OufhXNI563wWP860cJH5MzwPiucud5jnVmOOrsfe+WwL
oB5nYEEvKcOJHfm7b+xdAO+torte8H7Cw63ySX3vF8AsJ2XXme0/ISQi7YzR
1wU4oTz+X9vHX6Bpvp8rv3ABxPnGbijI18HjltN2ER0LkFfkMHyMpwmUmwNk
jISZcD9pS3TERAdca5gMzfNmAtNDOuil7iCQQr1B6TETbuqZxf6WokD+Ce7p
8HAmqJu4lCXNUEDgt9xxty9M1v45ecQnZhhS60y5lIaY0DYXwNE/NwZmwX++
hdOY0LCW6rKzbhxWjJzt2AmLYP9JMvn6hwkwrn2Ee6UXQQOnHdljMQXT1bne
4ScX4ZL+CBvh+ixEBh1RZrdeBGXhkmybnlnQOdbU5uq0CKaa/APHDKnw/NfE
7uMBi/DdRz1GQYoG+57cHsh9uQh4ZO1Y3W0a9BtwvVB8twj7XiQvnW+hgXqV
7DRbwSLw/zOS6LlDh47Hn2Ncfy3Cf3M+d05V0OGh/r7jvW2LcPTXxrYEPgYo
81QsHqMsQrHjEctP+gxo+HkqKZe6CCdVJfr3sPr+dkDfGcW1RRhYPaqr9pUB
8keduMIFl+C1DkniZhcDqriY39ikl2C39qu7M6sMuFHhb+eqtASGzmb/nknP
gSzlKPf87iVIfi+9m7BjDmrY+VJ80BKsrf/DvHRwDm5vrDHmMF4Cd12hkcwj
c7AFBVOfnF+C98vB8+P6c9BkfSKCeGUJVhqjg4T05uDBPVGtKPcl0LjidEdu
/xxsj2nu2fBgCYZ1gtZvVZmDzvyIh4lPl+DRDXkjTfIcBHSeVdgWvQT7nA7c
O8NkwG7muqqMxCXINE8siGljvUuJHqd9GUvgtJdWKPeFAcF74kRw4RKYOpQM
LP7HgP1mtt+OVC+B49tgXcMTDBhx33S2tm0JmtWmUnZIMiD8BWXJdHAJfvlW
pzZ10kH368e4zpklCCBovrzA+o9O1189ZLuyBFaJZ64snKDDmymV4WHeZfhp
rTPUxkGHOZUvqoyNy5Ca8ENb05oG7w1vNN5RW4ar+RZ4KxcNTlzd7cmmvQxD
jEo5gyQqJH/4XiBstgxe4ZsjSJRZOFPubRthu8ya//c1je/NAsegNqfM9WW4
xn3I97fYLFjJFx/fGrAMc5M2PA0e0yD6pqrrcO4yNL2nfNszMg5FeUH3q8uX
IdHF4qItYRycOow2nWpchrS3Wrf/Y/H8CvFGR+vxZejQeCP81mQE3DVeCg3N
L4NBwS4dOedhkDttnuHEsQI71IvjYp8NgXdoJ/O2zApE1fyUrugcBMUvb2LW
lFdA/EqaDZl3EJrrrFDAnhVAw6/PZx4YAFWBgccvTVagRPXK2vuCfujamrhN
+sIKhGndHV/H3w+PDa78jndYgX0HDDvcyvvg76NxifSHK2BtfDoi9WQPhCSm
5msEr8CDjAbBreu7QbvMxfrHqxXoCk6g2g53QgSB/qEqcwUUF79vKrrbDoZ3
lzUGKSx//kTY5L5tggw3wdNShqsgu+2c2LxSKdS+FvNOO7MKVRrxmrk2GIbL
pd8esl+F3IgnZuhRPkiv2zrh/GAVMgNak/4jZIB/yRG/kuxVQOcPX7G7+wCf
IT34dm3TP+gQTy7OXSrFbgcCOtd2/AMyd7qPzvYKHHQleC384D/otY/LrrWs
xDj/zXF87h/I6N+NDS2swcqXcgfFnv8Dg+ldyqlHm/DSN6pY4fI/GL8i+KRU
pxuT+5hapnxrcPyPocnyhR6sxkuwHZFYA6UzxUa5Xr34kqVwquiuNXjd67uz
LO4Pvh8g3vQR1mBeeSov8HQ/jv4qw9Q2XoN3WzUDWhr7cS3nNr0rV9fgCIVd
JzT3Lx5W23Vt2XMNOghh2yrlBjDhvFZoqN8amDTuz/G/P4Cl/VDOlhdr8IaP
+1BWywDek6bfkx/HOp9hIHR+0yA+2W7CfjJ1DSoEybsfOwzia2xnlIfy1sBa
tFfFNnEQ+2+zMrlTuQYiv9eriHYO4jhz+5sirWtgOxt3o4mLgnMfOL1OHFiD
iwa0pWEVCm5Odi/WmmXJNZr2xRhQ8HSz93D96hpUuo8UGdpQMOcDxJ3JRUBC
jZtyT7pSsChZ75WPIAHZXR7ZsN6bgmWT9bfrixGQ+cH+JOl7FLxN5zgWlSYg
E/OtdyrvUvC+ZhPTHnkCSpv18I3zpOAjV02HPioR0HCEQYacEwWbrprfvqFG
QBYlm9ZqLCnYJuy8wIE9BFRr8fza5uMU7KxkFcd9gICWNXbyJmhSsHeB7c7G
Qyx7tsnHyuQoOOCUffkbQwLKktiXNM9Nwe/uOo2rn2Xp098l6TQOYvViPuZj
KwIqUs7fvJQziIs5k7j+XCKg+yM2ihdiBnF/MEU+2I2A7na879Jh5dOtyVeN
4kVAtmc3fLxhPIjXJDYe0L5HQF8cpR5XaAzikAvYMMyPgHJ24c3ssoNYNt7q
7NgTAuo1vcwZwD+I0ynL9iiUgL4rbZ85tzKAD2597R4VycpH8JX7+fQBXHt9
38PpGFb8tj+MeqcGsGVmW/CRBAIyM+DUFB8dwJPzN9/EJBNQ9BBxPeHvAL6r
LZZM/0JAnlzaqZs7BjD/w4ycYzkExLi5QfBB3QB+XX6i/F0BAQVEZAgYlwxg
Fb7pRmYpAcVsEhQZ+TaA84yf/Tnxi4BOGwYQcz8MYIMwlamPvwmIT7WmVzNq
AHe0VS2tthJQPDb2HgwcwFfXO/Ca9xDQUPP33iN3B/CCDZdE6gABbUMW7lMu
AzggMWEzxxgBhX15ueJmP4AlxnR3WswQkAjP8npXywH8UbVfJ2OOgGQ480Of
n2X1r/t9I94VAnLjFap+dGYAl+fIWNiws6FXKoKZ4hYD2Gw53yGHlw2t3Atq
kLk0gClw3lNIhA0lfLZU+eA+gD38F3ztxdkQH5GuKhY0gNl/RYT+WM+Gfobc
qn3/eQCHCWnEkTaxIcve2HnUPoA3mTZ9dlRmQxd8H/QzuQdxRqRbXrEaG+KO
+Ss/v3cQN8iltbhosyGKZNP15OhBbGt/fKBClw2pj/oYV1UO4pmksRkZAzaU
tIlv07H5QSy8S1GgxowNPTnbe3LClILjvMqlNl1gQ2qHPTyY/1Gw6g87Re+L
bOiRY9uybiYFF6wRNBoc2JB7/4OPbhQKNtJ7q6vkwobyyLb3Dq8bwj2BB0/c
v8mGCv/aBIaeGsJOdd2WrXfYUKAWKtcNGcJBZ6Ru+z1mQ5uWJEbEpIax9Juc
R13BbIgxnPIq3n4YJ/8xe7kznA3t2tVVp/5tGFddfZH+J54NmQs29bwyGcHn
0nYUaH5iQ0rqcudtokfwCLXuV3AaG7Jet9wz0DvC2ked2ynf2BBNoWWbkewo
5r7LP6Sdz4aMuN8VrJ0bxZE4iRZWzIZk2mt3Pg8exVs49QnjP9nQgah/X778
GMVZBkNCunVsqCDEgrBncBTrBfutj25mQ+nbImpFOMdwS+PGrTOdbKhxXcBH
Y9kxfEmiWPNoPxs68T57cd2uMUyzsNaLHWZDqXzjxzCMYd+3K6cYk6x80oJP
JOmP4ZPquTe20dkQ4aedn/WxMSxb4vHCbpENxaj+rMo1GMOTp3ZkvFpjQ2sq
O8o8Do/h/IHxhgYudpRGnRu4qD2GAz0+zvIIsqPGei07m51j+AynHRFI7Mif
fVJFS5F1/5bOE2my7MhE9etlQ+ExXJwT7kpRYEdGvvBJl20Mh+iffL5+Gzsa
3XAqpJ02ii07BL6Y7mRHp25/1DMdGMUqjpX1T/ayo61TIRr19aOYueg7XXyQ
HX07UiVy4fso/hmkI8w8zI5wNle49JtRHL5+SXXHMXbknXbW0MR7FNulZhtf
OcmOssYSF8+dGsXqB29cjz3Djoql4kN+bBrF/+q2B7dYsqO+Vq4w0akRXGs9
mipwiR2hXQ96hL+O4NczCbWHHNnRbFJazn2nEXz1oc2ktysrnoKNWnpyI1hT
dL1ghic7+qFgGn6hZhg37Qo7LufLjuy+1hgsCg7j+DJjpzOB7KhUJjqfO2EI
u5jxPQ0OYUfMjZkxt3YNYX6vh9XLr9kRu3aS0DxQsG6ei2HHN3bEbbs9rHP7
ABY+puIoks+OCpw7D6wk/MU9XUOBR4tZ9neTDtKk/+LbK5ZVWbXsKAL+Dd3g
7cdf4bj+iyF25KWUl/c4txvL/1Q6ckySA404e5NSlZowobkfFdzhQGjiudZ7
rk/gP1b07s5/HEj6eY4kYUMG8BFi2bUCOdC1HuW5luwcIKmeL8+O4EASCkWX
99CLYcvjRv0vXzmQXqjDPZENtXBMu9Tk/TAH8nK9n9zf3AEvExIsA0050Wvn
yJwdymMglf9f4dHznEh11XitX2AcYhpsZLlsOZHZ9T2b902Ow8fV9f3/XedE
e0bOa5skTkLu2fBLdwM50T7d8oUU9lk44OJervWcE30fCdde7zYLJf4ntzAj
OFFVErJw+TML1RmCIzcTOFG3AI3ZWUEFk6px/d0pnOgT1fWggDYNmvuqkqhf
ORH3uagnwek06BF4dM2liBONiRatxj2hg+2mSzXbKzjRLx7PLWYzdBjap7t9
ooYT+ZkoLhux+PG1E3LByU2cqI/ftOJ2MgOmL69OOXRyIrWvZgQ6az/w8Ok2
UeznRBoF5LVlozlghuV9oQxzok23hoPmIueArdjzxkUGJyIY/7vTu2EeAtpO
N8ktc6KFM3f3brGcB/6pnbv72LhQseGrjbzR80CWnmZYiHChr0dzSnsEFiBa
vdZ8nQQXuuzA9jdNbwE26KfktMtwoRnG7Wra3QV4bxUoGbmZC5VdOBPE/LIA
ijev3DZT4UIlck/OzPQtgOr+P6ffqnMhX3fqlTFOJmgQzu0Y1+RCi5lei04K
TND+2cC/5yAXYuzdRlo+wIRDzwyHHxzmQufi3OnnTJhgaFpaUm3IhUY5DA7d
PseEk1LaseInudCx+s/hHheYcLbv223bM1xI9MejvsCzTLBO3G722ZILCYXU
sksaM+HytQ875u240J9k4b0xLPvO6rICuo5c6KlH8fEsRSZ4zEcOP3XlQg5H
9DdLCDLhToFIaZsnF8p9t/Di+dQC/OcbGLvRhwv9NkzoWa1ZgEADNm9nXy70
zbWr7WDSAkS20HawP+dC/sQf/jGWCxD72knAOIILxf8VSnuisQCJtpThqDdc
qMHwMKGAbwE+K1qVDrzjQqYpbcbzXfOQOdkaq5rEhY6n5l1Q/jQPeZkm3rfT
uRBp2D8/7Po8FN+uNCvL4kLvn7v1VqjOQ6UOUhf+wYU87lySDh+Zg3rOPIHz
JVxIWG9FjvPNHLRW7xxJqORCXTUBr/UN5qAnNKV0uo4L3efoepY9w4BxmRhv
/y4u1LPL4yR5BwO49jwY+ULnQqUjs64m/jQQXF4oXVrkQrvaJRo0JWhAKnGL
O0LgRtIb4q8/Ye1L8sZ25t2C3OjUZU0f33rW+7h8pIxbkRuFz3s2OgtPw80I
gbdW57hR+uynRY7+IaDMRZ0RKORGd4K7S8wnK+C97m6P3jJu1C8QOP72VQnY
BNc//1LNjfoKN0Wj1HzoUuD6dbqDG/UcMTLg5E6AxtPu2jF0bvT196aek+25
uCjDSF5VhQdJT+4feOnajn1WRw6sqfMgi8lzTeoRnVjL0O98414etEnxQI1B
VjfO6s8L8zzCg6yis05bDP7BKSJKXEW2PEhcnPdCOImCr14o3RjqwIN8P7Xs
d5Eewls+WenYufCgUHqssP9m1v9TJ/wWtw8PymzUrN65dxRHXWcbN4niQVPJ
Q1GHxCaxWV4M98Y4HvSpu/1A1fwkJnHt20xP5EEGF0fXb2iZwiExLpZRmTxo
UV8v4djDGWw0yuftmMeDHkjUKwYpz2I+jQ8R2sU8iHiXGFz+fBb713TX/6nj
QQkJYQm0C1R8SPLWREYLD6q34hZqx1S8Zkfi9e/mQenUL4k/5Wi4ID1N4cwA
D5JjmsYxvGn4zpKBrvIY6z6PbHO/Ohred5RitTTDyg9ZufmUNB3PvXhwp3ae
B62aPz2dZkvHbltzvrlx8qKbKbqnT/bQsZrnqYZDArwo8ED5z2USA08UT06S
SbyI8vznUv8RBr5ybrNinhwvwmjo3MEEBlZILDr0VJEXSd/P4qLXM/DAzHkb
K1Ve1O2cZDrDZOB47bm7OzR4kXWlopqM/By2ehwazabNi071zj6/dmgOSzdv
y27W5UWT+l99BazncIdsZeMHA170UxBLktzncOQ1u+lbJ3hRZpikvfn9OWyW
s8p/7AxL3n/v7la/OUxif6UkY8WLPKgdrtv/m8O/jTX0pi/xorZz298pe8/h
Z69+2xZf40VFRtIt7M5z+NjQtXthN3hRfR8qSrOYw0fvbU7Vu82LQrVsGwKO
zuFD4j1d8/d50d48biVV9TmskxbOl/yIF6nzfbK/JTWH9x8x3nfhGSueHVej
BtcYWLOXy0HoJS/SLMlQbx9i4F2eRRH4FS8SGbJQvFXFwGpCt8pvxPOiPX/l
jf9+YGCVDzvomz/xIl+pxnreewyseHB0Y1saL2qdSg7NMGbgTa3xJwOzWPEo
Pt6yVYqBZa+ff7D/By/qK5BzFO6lY2kuUvpkCS+6PM0hrx5LxxKx1T1xVbzo
xjbnRe/zdEza4ydw6jcvupbsqzdGomOBy4yr2T286HME1djhPxrmXU2Nchjk
RbcG5Whp+2iYM+Lyz3XjvGigPtXDjkrFK+Vtm+8v8KIP53qW39pT8aRCXt9R
Eh+y6/t8i0NpFtdS7pl16PMhxQ07DxvXjOMqH02/IBM+FEFmtN5SG8fl5JmM
A+Z86PhZdybpxRgu0LMVeWfHhxTEs+LuGI/i3B4pndOOfKiqg50x+GkEZ91s
dOZy40MLH+PNH7ON4NTEQ9WO9/iQlmhSQ0neEE46sMxc78+HKgxHFm7JDOHE
lm9K9UF86Bh/QHdeAAXHcG55tCuaD902uRnaeHsQB9vzoOVMPsSp/nLT3lt/
cdAKdknL40OWj9smF+f6cUD47VibYpb+qL5Gqlc/vl8+tlRWx4e8Gclq3wT+
4DuW77d6tfChsCKeDQk7+7AXw+KccjcfWsf2w1/esRe7KNRmPxvlQ5KR37LP
D3ZjE0roNllZfmQYv2j0orAV126jtFgq8KOCT0ZzjdKt+LjH3vtvVPhRW+GJ
B0u3WrABe1+D1F5+lHj3m6egejM+JL/NS+wkPzLuTBTg9WzAeywrinl9+VHn
5fEvU/kVWKZl0Zw+xI+K1yeGV+e9hPEyu4dVaQLohIHsHcvGDpB70XEtJEsA
SQSXu+wM7AQzaxNzsx8C6KGqP/OLVhcUMbVU+qsE0O/to02b/LohTFW0ZWFQ
AGW+zD77q68XtKOwkpK0IKpSWnH1PvUX3Oz3kKbkBZFNTrrTyai/8HHn55VM
JUGUpsJhcq3nLxBrIxt19giiSfKYfIjDAFAILnfPnBREX9eP+qIPg7CufvCy
zFlB1KTerfOFOQgmb86fHLASRI/vClxKN6RA7p4jW1ycBNGHAxUDYaMUeHZN
5vejAEH0ZkRiJ+nwMJTsDcs7HiyI2Az9p1NShmGekzdRNFwQKVs3+FuJjYDt
W/rt2Hcs/ZPrvwr0jYBGS/Wm7AJBxPu5/PGp22PQe9Dbi0ITRCY7HlRVqU0B
SWDGNmVREKXvryz0TJwCgw77424EIfRPkffFN/lpyHQ/Kb8iJIR+88m1h2yZ
gYBPStViW4VQcKGlcZL3LPy4GZvVuUMI7aLwDN9JnYVZXbG3bzWFUNBpsdaK
vlmw6PnnsU1PCK0YdH9jHKXC8+Sb1tRjQmhTyNKMlg8Vyr3GDb6fEkIRZlj+
0hcqLB623X3vnBDCV2+/v9pHBTXRtg2HbYRQ4qhAli4vDYaDh30jLgshyl7+
mTAVGsTyL4yMOAmh+o20J40GNDB7zGO8310IHVU58bL/Emtec0plPrsthPQv
234d8qFB+UNlyT/3hZC/W3z5ugga3F3d57PzkRAaUkx8pZ9Gg113DP/6PRVC
G/7Udq6V02B8/vzRthdCaPxw4p/qLhq897j2WTlaCG3rCFpcnKTB+dk7xLtx
QogwzdA5tEQD4vWnnnWJQuhGs94iJzsdqsbedMl9FkJ5+leRAScdHlxJBfcM
lv8rZ69FsdFBc7Agsfy7ECpMqBWhsPSnber4JIuEkHX+d4tLVBp86Ol1cSwX
Qk1r/2GjYRpYnp9u/lEthPSirQoMWP6Q2/7tE24UQoYOpWojtTSoMRWJs20X
QvGv5lzHC2jg+1uO41uvENqn5i3ek0SD/UbqV7korHpskRWNek4DahWqOzsu
hO6cfSH43I0GSUdO7UqZFUI2D1ZQ03Ea2JZejFqZF0IcYx/E6BtpIAXuKyar
QuiiVlnrJJ0Kv3/4XnzHIYyI1u96VkupoJOdsO0oURg9+dcu/sqSCvM7s0Kj
JYTR8IuXl84rUSEtvXxuXEYYle3oy3oxMwsySUP4+VZhtPTdZem9xyy0KMwr
DOwQRrWRlrcF1Gbh6TvuIA1NYSTw9g1O/zkDS6+VzDoPCSOC0fIo3XcaOoId
RzdZCqN/z/ZemP89AaH8d4w97YQR/83xDEuZCdB/HJRZeVUYud4zHM2zG4ec
h599nD2F0f45ZhuxYxReekwRc0KEEdqULvvDawiOza568kYII0qrxwznKwqw
XxfutngjjJhbPg7S8gfB7cqOD2ufhJHEVvUqpaW/YHL+hpZhiTDKMMxRbQvq
AX6Yu9hDF2bNw9mnWtuq4bauMm/OkjDq6xXkP0upgOHDF9Kfs4kgN9vwQxXh
JVBqULJ0SEQEeSCrq3zjGXDHNPhlsooI8p0SuKR45SueuLylwuuiCNJ99Lx7
/9FWbHH1nNPJqyJo04BifPKVdlx17amoiqsIUrDmNpJ51IkTXalWvT4i6NaK
tc3mkl5s6V04fzhaBFUfKfX8oDKIa5+ZK4v+FkFxwRwnOB5N4P3PA+vHW0WQ
xKg8x+rjSZz04sfN8h4RJLinN6PAfwr7R24suTUugvJjHF40esxg2Yb57TPs
RHT7V35pZBIVm58iEiy5icgp07lHawMNP2va2lzFR0Tl1+9x4mc0vNRi6f2e
SEQN3xvCU1h8aucZLyMRMhHJFKoqN1bS8dX253I+kkS0ejKlqV+Ngds6SyvM
ZYnIOcnfKm2RgYUu9ESXbiSiC/XlezLOzmG9njmnHVuIyPZwzkx1+hzO7FMm
8W0nojTd8094j8/jMZtDQ547iMhBcWmb0Mt5LP/3Qu7ALiL6c/fhVuXOeRwy
GGJdoEVEpT8dE65dXMAV9kk7tx4kIv/ZrzJb3i7glaESzkhERGFPlosPty7g
3Q7d7ex6RLTZYbDZmIOJr40yUlz1iahl2jZASoWJ3zkK3+85RkRWcRvoKseZ
uGNc6ZShCRFFfl7NM7/KxERnXYWcU0TUrOSYdtKPifWnLBY2mRORTijFIyOG
iePIfs0PzhGRW9zHIpVMJmZof/7Sc4GIVPf32ZqWMPGxS81PtWyIiGy6yO1W
xcTxQcsOkXZEJH/zpdSlSiaez9isR79MRCoWFyaVMRMbdx6XP+lIRO8/Hbth
ncHEiYSbK6nORKRUN5tMecvES0oxHXxuRLTisv61xzMmPnmiPOuKBxGpra7/
5nWLiT96TYaWeRGRWSAPk27NxCux5Ovyd4jogbjGKTXExKcrDhjeu0dEXyR/
9MavY+KUSfstXQ+JKLOViU5OLGACOZhtrz8RZeWvbziTs4DPaGf3vnzMsldg
utvFZwGn2vXmzQYR0Xz8rYORsIDZg7gijUOI6PN337FotgV8LkPVPeUFEbX2
BxNzSudxeoe5CU8Eqx6For01D+cxF+G+in00EU06vhk20ZrHlkofuUveEJFX
gcAXjglWP5jUD2x4y+rPK29JSpFz2DpW9k37ByLaR3//wLiPgbPKj97SSCai
K+87HbQeMDD/pMvpF6mseDJ7Oj3lGfj7fixw/BsR6VrZrn5i9Suxw8anqJiI
4jd/2BGWRsVX1h6fW1/OqpeB1roTWlRcoPhV43YlEa2rlbf6VTGLHT0JUzvr
iejfxS9vVipmcCnpndWHblb/v2k21eeexDeNB3SezROR3/Aj08LLFNxRas9m
sV0U7UuUjindW4lndbuk7+0QRUqdlTHJ1DLMU3JCI36XKGLff8dpJq8Ya+L9
DsP7RJH9jvWdBqFZOPwHsc79iCiKZ1NKvXMkAk5kFUQ/tRZFwv0Pf2mcrYUr
u3dlpl8URdtPm5TxP/0N9zM/1TTai6IifpJIi00jpH4N+yfpJIouPXOXqI5u
Af60q/aJt0RRVYZ6/JP+Lvj5gaxeGCqKTBzLXfSDBqFPIciw/6UoUjnsWzJ9
mAJzCWt2HFGiKHR3wYzHKgUU3o9HGMaKotlf+wIqXYfBN654uTVZFN2OaMhc
v24MXm/QFF9MFUUpNGPJvrwxyIj5rCbzVRS9+8Rfcv38OPS/jrxolyOKvPh8
dwRFToBOlHPldKko+pt58v26mik4IzHQL/qTdX7L1R5Tw2m4HnF2SeOXKMpd
a3SdK5+GmJeHVO/+FkXPniXTEnJnIIuUezSuSRSJ3w/0JUjOQs0LVduSVlE0
5rRGjjOehaXnUi95ekTRLcVwpJ42CySRkFSVP6x6dKyp1rTPwtYQjp/GA6Jo
05kVZ1sCFZCQ9x+3IVF0ufhvVRdrnp17Ns18OSqKfAQkRXtNqOAqYE/6PiGK
GgfrQwtvUiEgqHNb1zSrfvkCiwejqBDHd+LIKlUUFT7wd/yTRYXswHJr+TlR
FNH038XsOiokHauReswURZ8yFjksKFR4LdjUNLUsiqi5bvn8TCoE13c8M1sT
ResNPtlr89PgYeifoz/YSehphY2fuAwNPEyHCZu4SSj0hMRpAVUaXCFP5Qfy
kVAj40CCxn4WX2mj35wRJKF2611Z+bo0MIpeUjtDJKGJPzcqJw/TACzYxgrE
SIj2Mjd1zyEWH5LhTdgsSULVyEVDT4cGCn3CVkHSJPRQL7CsQIsGkvHiktQN
JESP4jPJ3UMDfjuZxrMbSej+iWelz9VpsLJ589MiBRLaspGHtlOJBjNDW49s
USYhf21ThwgpGgx8Ul97uo2l37x85RUXDVod9+bR1EhoU+zusrEZKlRt0/E4
v4uEOCzb1S91UiF/Sk+1eA8JNQ1z9neVsfjEl+MjilokJO3t89qWxR/jb5i+
Cz5AQkX7f1Abo6kQtvv8BQaQ0BXZPoeJe1R4NGcjfuEwibUDNeb9sqbC7e9X
fpccJaEFMe2IoQNUcPK+/kT5GAnJm5Rc0JCmgrX2zcPPjVn+/7kY0sGchZOr
d1bnTpJY9RGX7eychcP4v++WZiz/N+4Ov5M/C8KVMW8XLpLQCb/DG4PlZoHt
ScJ568sklN5AWPWbnQHGsRSxiqskZLJlQqr/0wx01n9/HObKuu9hiNic6Awk
tjW5qt4joX5T7fViBVMQFd25NfwhCSUt+WdSXaYgyKJ/cMmPhDI0ldhX5KfA
tW/qbFUQCQnvsLT3uTkJ+4d50aVoEnI6DYJh4hOgmiSy9OsNCaks7xnjKB4H
+WsSWepvSeiec63wf/bjwDW9WfnfBxJyWLa5V/R2DBrmdIivvpHQd+vaV2qy
o1D2/Uj1Wg4JybJLRU9mjUCOt5H/lXwSSgjaxZg9MgJvVs8zd5eQECWz9yyf
/TBc4fLsr68noZV6s5BbLyggLferfbmRhG4mu3/okaRA/b4Nv5VbSWhre2Be
4JtB0HSuKPTtJqF4+Dnj9n4AuJvF32iOkhDnysG71Bf98CE+xzyOTQyRg1vz
D5W0w7l8fuMaTjEUFva3tf9WGwi2WOsxecSQpJjOW4/trXCTh2e3qbAYymkY
Uf8Z0QR6LmeJ3OvFULqX35VdttVA0WZWX9cQQzHvssucq2Mh2tyo9PVeMfSw
KlApK9objFzj8yr3iyH5vKzfki2hOOu9QdJGXTHUNvyfnMqBL9if79WjVmMx
1FRTmblmUYYV2rXQQQcxpO1+dejlnxbcMRu899o1MUQJHQxlP9iGn/EPqEVd
F0OTpRsG9rxox4yDQRuoHmLoNVe5r4BSFy5P7FpKfCiG1mLbrEwO/8GX3O9m
C74WQ+9V9pz5a0DBmrv6srfGiiFsn9Qe+ZuC+Wko52i8GAqMGjTdYzqEv97g
/v7woxjSEP7W6WY6jFfcXuQyMsXQ5zFGiozxKI50/fSjp0YMBZfXiOV0T2DH
HfwFi/ViyN/+xQ2xw5P4wIxzgUSTGGIoWb0PSpnEgy67Ck92iKEZfsWxAN8p
rO5SWFROEUNfeYqG+Ekz+Jdzc0nqqhi6pK0ncmFtFsds1yz9RSCj1or/1PxU
qdhtMrp0mIOMyptlRwgXqFjC2bpMnp+MaMbPbpxIpeKxbSVlB4XISLPPhYfc
yJqfE5vLLYgsLJ/iFzZHxXZOY+XhEmTUMv9DyuAQDe/ZZlSRsY6MkuuVPnVd
oWHeifSKehkyWnAjS99+TMM9KaI/J+TISFI8+KB5Ig1/uXbzJ+9mMlpX5Xhj
sYiGfVXaf25RZGGN/346d9LwmXGtykNbyciI/u1ZP4OGt6bEVNpsJyOXy3so
X0XoeMVxrdJnBxk1ePJc3alEx7+32lW92kVGFoVGtyT30/H7sfKqnD1klHNa
O2zcgI69kpV+Ne8jo3irrqM25nRs6Bj0a1abjCKZ+Ze8LtKxzNapX0JARleY
OdvLr9Px7OiJapVDLPsR5Ftnb9NxWVJmtf4RMjoe+Y7Wcp+OI6+K19gbkJEb
97pDeg/p2FH5ds1/x8nIxKb8h+U9Oj4w2lUTZ8KK9y77/vFbdCySdLD2xylW
vrgfN/6+QccDDvG1HWZk9Ope70YtJzrOVuKomztLRsoh1Z/22dFx4MjlOtIF
MjpE3/Eoy4yOLT9V1e2wJqNM0dTPw7p0vMNhW73RRTJaPO9qEa9Cx32Ocq5p
9mQ0TMhouClMx8+cxYjCV8lIg/RnwwkqDe935clwcSIj18LzvT+baHjsxvKp
3y4s+c8LOVe+0nD0zRnaDncyCjO5fHRzIA0fvTX4MtSTjMBD0mnmPA0n+NS0
nvIho6SLORd86FRs+gB7ZT4go6Y4q9yLRVRM8P0mKebHqs/DWMmwACq2evzm
fMsTMsr9ZWW1joeKBYOeL2kEk1HN/lG5FDyL85/5vYkIJaOH93a0VHjOYskw
p94zUWR0YN6L81DhDP4ZbnP/+2tWPs7pBctumME3o07LScWRUcxLq/k37tO4
MUb7Ymciy18DhX/2nFP46SeBoQuZZKTXNbHXZG0M709Ze1SQTUb7X56Wf7J9
DI+m0hU35JHRxaIYVHp6FB/J7L7ah8lIPfDgL4W4YbxW8HnSto6MbsavnW3k
GsTp+G1wSQMZXf8y/ERNfABblr5U29TCeh+98i9GFf7ivMq7boNdZDTQnTNY
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
1BT/+8eC7IX3YhY7jaP/AWwDjfc=
          "]], 
         LineBox[CompressedData["
1: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
3hwsuq592CiJDEoz2ZXvRjm4tMJk/qEUMuTrb5IP8eZi+3WOO3IfkOFg3sLV
NFceVj12aLzzMRmKbFUjJOt5uPPeqRtyGWSwSiv2tzbn49MyMY1uWWSw3Tsh
dlVdgNdDUlDcG6KewV/rV4YLsPjZdPXcHDKUmRgOP+4W4IQOfESugAySezbj
lWlC7KRSLWVUROSra6Fjyxdi5o6m524lZFiZ6dTdZDaBB0P7dsaVkaGyxuvN
xLUJ/DaXx/5QQYY/j/zPNP2ZwOdH5yR2fiVDPFyAYNokNtWQN5KrIYNybmL/
hf2TWMZJrdnwJxm8OlLqohMnce215Rfc6skwrLhYJPNlEid/NmDENZBBK0t+
CUs0id2mtpR9aCLDzbLKKEctEV6ha3e08y8Z/gnLevbvEGGOu4uMXAcZhB5/
hNtPiHB+qudLw24ybN02hEsjRTi0NsDWrY8MCT+16j7dE2ErqUhu7CAZtlvb
7HJ6K8KLNt249WGEDIo/Qlp9i0T4j+99485xMizW9I6+9kmE72e+bJHlEXhs
c24KKRNhj7b8i4ZCMvheWG+7kIivWVLJdBORIVDh34mvhSI8YfXrc+w/Mqhm
lJ7kZ4lw8aVOjw9iqhDs9GYgJFmEL78fW9A5VxVCb2ZHeIeKsO3wdJbsfFV4
+nZERPYQYRJTxt5QRhU2hD5c/9JShNv3qPBd5VQB7Vh5vIkhwhlxGkmxCqqw
VnzfEXn+JD71Sdfkg6IqzB/dtv/I50lsNLmptUNZFfISXTY+vDGJxXSsQ2RV
VaEka3Qm2XkSVx7ep2FIVYU4SiVOJviJT3avcKWrQptZ/4X45gnsfzbUN4il
Cr2nnmiN3Z7ALvb31G9rqkKqhdh+T/sJvErmt/+3VapgrXkbzD8IsWIvm9Wn
owqtVadXv3MTYlGJ3I8561Th+3otXUk5If5yznyZobEq0KP+s4vbJ8Cvd7vW
221QhTclX3zoE3ycpBt86QRShaH8a0U1N/jYfSDnzwNzVVjJtTWuqeRh8X0a
V2TtVcFJ60H2NTkuHtADfa3dxPh0XIx+Cgf/UHDu2LxXFQ6+HFBq0iDu35U3
jP1dVKFBzmRSVZeNNxjNHew4rgoravpFt86OYj+VTqsPYargEi45Crq92Jn7
T/AzUhVqfTOtR6k92Ow7+dHwFVXYlLuasmZBN14cZTfFiFeF7KDfdom9HThL
UPw8NlUVyoaUZXWVmnH/rzRZt3eq0L9m4apvjaX4+5uC3KBcVfigMhVZ3V6I
38c1HL5doAqrZOaxNyrl4HBz+Y/fSlTBI2Yq8YBhGGa8u+BlWKMKEeAlu2t7
MXK6ub9Gtk8Vdr1UH0b0RqSWLUPxHFSFOWZ2QfJ7mlHbzw9Hv4yowiW7JYyQ
mL/osPziOZE8VVjy2pK/frgdeUeXr5udQ4Gl8w/nfpzfg9Zk+l7aP48C081g
YijWi7gV9OoCKQrkZMVQbv3/92nzAt0D5ClAGWllD9X2o9BLOnfYahSol0V1
8mgYmaW19NjQKXA2Uz3uxfwRNL/oytosFgWM/gU/WvFlBMVOdVUdX0GBQk+e
9H9oDO1UvU76spoC61vfBQcPj6FFxpuOaOlSQBhY1UWxJN7zZ5NmugwpkJbq
+qW+exztTTTfbmpCgSv5Dtm1q9iIksO5fX8TBewqefc0TrJRa21a98xmChTn
XO0zzWKj+2xr3f3mFGDvzPt3ZYiN3BREwQWWFFjnJizYr8FBGjpPv5KtKbB1
i92vMUcO6t2xSyXAhgJmEs6WvhEclHlizuHf9hT4EzG6jvWWg07EZL3Wc6RA
6Jnm/MBmDtJ+9t+/hH0UUCjfejd0hoPGK6Ws2M4U6O5iX3qlxkVv+97dsjlI
AdYZkV21ERedkTzU9fIQBXbGK2x8Zc9FhksV1sgeJdbP7x3Kc+ci0ZaPQceP
U6BsZ1S0nR8XFbod/1LpRcz//dQzKISLLoSoKGv5UOCN4s8Fu2O5aPP9MreI
MxQoGfDYiBK4SAL7vOryp4AgVdzfgxiX/6VNbw6kgJj1v82frnHR5ekqy/sX
KEAemCX5Et9vp5xLnAmhQLLcdtd9EVy0cL1mp3MEgX9LnkZYABf92FunXXCZ
Ata98s/iPbgowf9SIDmWAiho2wG3vVy0+9bqSv9rFDBs3F1+05yLSO+alH4n
UEB5ZnHgrtVc1FQX5ap3iwKrlhns+7aIi1I5elkJdyiQNUaft1vAQQcWdYrG
UyngXbfdwrSRg5hrrm21uU+BhZt7b+h84KDunRtuvnxEgY94SOv7dQ564jXQ
vuApBU4uXTxSeIKDjsXeWn38GQW+n7PK/mnBQaNfxss131BA+18qKhhlowmz
9Mm0Igr03ChAFavZKKggLayshAKSg5si0L9xJLY2WW6gjAImGvNKP38bR/PV
rzHWVhH6Ciqd8XMbR8qTAdvKGihQemt2S+XcMZR80reuv4nQc1d9c3f0KKL2
eu2XayXwTVlg8VlxFGnUufk4dlPgyRQ/kkUaQeteWt/pH6fAhhO5EXWzg+g9
aytLjkeBe1tP3Ll8chCtT978UldI5H+i68KltgFkGmVQcv4fBV5sOiQT8qEf
2brSB2Rl1GD7X6vrNSbEe2MJz0iXpQYfKH2fyh+2I07MaOluTTW4psdbElfS
hvzEB6zPL1cDu13LzV3WtaKgsb8HP+mowYpzjZHH5ZpRzJeKy7s3qMGFn/Xa
VWfqUUZwyp9zu9XglOJ5vzNH81BXj2lAaZQahK61Y+zb3YBN02oerohRg9s1
E0mSDo34/l6n6oSrahAt4zW+a1szdqnyYR5KVIO3xXJV9zXacNPr+9/mPlKD
gjTbXb12Xdj4+Cqh5xM1SPX1f2G5oRsnsXIZ9ZlqcELs9JARowc73vp+9vFr
NaixPKEU/rcX1wbO0M2L1KBbMLEvdOUg1tWP3v6yRA2+Qj1PRTiI40eXnF3y
WQ3Q7SXcywVDeKfr6qqeKjWYL2Vi8F1vBH+1cPaLbCTyK3XaPssbw8vF+tNG
W9QgPrLsHWnnOL6c5/vVsV0N4nRm/nO4O44tVsWoa/WpgfiX+X4S+mxcuij/
SwVPDW5cbNhYvY2DGVXmPJ0JNZjjvnA+nXh/Xwr/SUuaUoOkNX2k9585eJOw
39dDnApqxbXt0sZcfPf1mXs/5lGho7nkt89JLp4+JvbFSJoKoyEmt20fcHF+
iwpNWoEKD3WO9GWK8zD51iNLH0UqFLYVdrVp83CAjY5vozIV2tsGOCp7eLhB
quDuZlUqZHwf/6V0kYcNSi0qM6lU8E/psahN5+HEwFrOIgYVkmRbnvtU8DBP
z4V6XoMKW/g3Ezk9POwwOrC1U4sK+gEFQ5kSfPz2qd9pq5VUUHhVy4qk8/Ei
1zl332pT4Ypp2ISMIR+fUo2rUF1LBWnhwJrQ7Xz8vY7ECdWnQneAMfp8gI+1
4x6rDRlRAX5optw5ycdxFmu2OmygguS+0x8Onefj4dkCnwJEhePjiQvkw/l4
e97WVNYWKuys4OdaxPLxs9N15TEWVOi9bdk2fpWPpVcdYHO3UUH8xe3UbXF8
7NEzSHHeQeRT+DR1MJqPK+6dtSizpYLv7oNbAiP4WHOvuM+qXUT9c9RkRef4
OGLR1ZSbe6hwGS2zU/Hk4+6v5PJpJyqElm6N0v6Pj7eEp48fdiH4MclbUmDB
xw836lKqXangx81/abaKj0t3yoRNHabCDP6xadMiPu480DW43IMKuxbWBnzj
EfcJn0L7vZ5UaPNa419Vx8Os0MT8SG8qPNFbtjDsJQ+b3fBmvvOhgs5ZKdQb
zsOHH2+N7jpDhc7u6oPPnXg4/B2dsyiAyO+yVGTbSh5+XD65DwKpUGl7y/iz
kIvLGmpLvC9Q4fuDNWNrS7i4u//58rshVOB9aFMZuMzFGgtcJiejCD1VDD7R
lOFiMzVD12UxVAhJWfw4idDf4dUKXxyvUoF/T37a/iIHp9uUJmXfpMIH0mTN
sh42Lj+YItZ5m6hvnteEMIGNe33OeCikUMHb6JmhFmJjzZuaRl4PqPD+ae/l
0uhx/ORPdINmFhX2XLip/3J6BJcPHEK731BhxZYnD7DmCO4VbXgalkPEv9ft
8tg5jLWoY2fb8wn9/dSw1b4yiDNcHZSTKwh+Xok5ZJX34srTqy5UfqWCYHHT
94Vfe3B/2LxeQTUVFp8PeL31Wzde9uTDO4d6KvxW9bqaXNqJMwcpu+U6qBA5
UjZfW+UvfubbfeOSiApafkf2W0hW4JcRfouOrqaB9delZ1NCGtDwhv2hEWto
INhusDw/vhGt4plxH62jwVWb0bA1Sc3omZvSr3ZjGkTU1a1edqcNZaDsJCcL
GgR7emlVZXehfkGy9LltNBjtUnF2y+xGWlmh529b0+CablVNz50e9ETN3rne
ngYSx6zyHH370OPJcfWdB2hA30rVc5UaQt2v/8SfcKPBt5KjJ/b1DyGWR/Gc
mCM0KF731retZBg9/H2tq8KTBj84udqbT46itGztp5sDaOAy/9dd85/jqPW4
MulgIA1iRxv1A9axEY05c/nCBRqkFHzNV01go9T46uMF4TS4nN3luXUHByV7
ndDWv06DLxplh589Ifqrxq40h5s0CKn8c9VK8P+/uDRROH2bBoXqgi0hpjyU
ZLWAk3WXBgk5Q/svN/BQwxyuW/V9GnQmhtlkUPhIOa+pbugRgU9HstwNZz5K
1Hr2btkzGpB8nrBPNfJRfet1za0vaZAevnFuuIIAKd06d/vIaxowg4Pr7poJ
kMMOV6nwbBooBmfXRfkLUILEtnMP39OgydTSoyVdgGoL1gwW59HgYLkK3b1G
gBb5kv5rK6SBrcE1Ex2eANmuEPv2D9Pg7I0degySEMV39G1Q+0SDp2IH5t43
EKIfSd9fri+ngayMmYG1jRDJ236g7ftC5PMs2OPIESHaOT/tmv83Gjx0zN40
FCBEV4sixW59p4GSVmCFY6QQ1fh5++TU0sDq5C+q/FUhklvt2Fn7iwbnXerf
OdwQIuvujQ7sP0S+fNXXVolCFJuytEy+hQZjWTtnP8QL0Td7OX3tNhp02T0O
ekest0CGn27dSYPybguwPS9EViUtyp49NJi4O3cP/5gQRQeURV3pp4HYPYnj
f+yF6IvOi4mnQ0T+EU34FVGPVN+NY+WjNGDxI+ctJ+q1vBfY1M2mgbaKH5nB
F6Co3Ye2z+XTYJnyuje7qgTooU2L85EJGgTMcfYWJAlQ4bbd3hVTNHjgM1t0
95AANWypubh8ltAX3rCoW0uAOBu3Xo8RV4dUDZWLQ918JGtU/HBknjokJhRN
ed3jI621xjk20upwh5SxXOjAR86aKxsUFdRhQrqoac5zHvKnP+73U1SHip4X
FWp2PJSgShU1KKuDvfJd2e9sLqpYKE9NpRJx2RTldUwuWivkuGmsVAfljipW
rC0b7WB7nonUVgf6AZnQVbXjyGOoO6JfVx0CNL+vG9sxju62/c54YaQOTzzV
brWdH0VSlfmjehbqoL201K2kcwC1JoWeN3dVB3+pipVH7drQZMJUzNPD6qAY
bpp3M7UFKcWduSvtoQ5/HqZWZ3Y3om0h7sXV3uqwYVLxfrpTPco5ZiXpGKQO
PVeUJLZqlqLo9YsT3G+rQ+TvEqeVU1U4XS/mUWWyOiyytr/I7fqBi7Ul3q24
pw4HzyjMO/OtDvOZgobRx8R+n6PrT99sxAcXNFH936qDQX/3/vornVi/5UFm
VLU6aOqNKchnjmAFbY+JVz/UQdJF6sX1nlE8fFF76586dRC/GXbrrvw4fswq
6F7WpA7HFh4OljdnYyXPevWvvepwNEC1XDuei8cLk705A+rg4bX06m4KD39b
6PpRdUQdTIU+NHeiv4e/HXHy5KrDkaEpMc8XfCwKmrtdUowO0brf4g3jhbg/
3f108hw62Ev6vDYRm8C/a77c0Z5LhxcKhm19nhP4LT2+31GSDjfcxhyc1k7i
+9u48kPz6ZCfdLVN/Pokvnra0fCiNB1OS737YDcwiY+XqUU+laXDw4KV6uuj
RXjvyMWXJgvpMKWef6muXoQtlLvqv8vToUD9vMaAyhTWQxbThxbRgSnp5ndn
9xRmemSyJhbTYUWTyqX18VNY4brs9lglOozbs/vjy6bwTN7J03RlOjwzJjPs
2VN4uLP2To4KHWIzAhd9J0/jxgUGJZZkOlxNPdFtvmkal+vd6W9RpcOOyJhY
kdM0ztk/Le+jRofs4bYE4alp/DDygOE8Gh1+RW9f4xs2jeNflbrcUaeDwwsb
R4ifxhf+LI1czaDDD6dXtq03p/GJOVdeljDpcKC311CbGDutGK7frUGHi/qf
45quTWNLB5vpgaV0eHTVWsUifBobBL1lXdCig/LyHoauzzTWSF+yffFyOtxL
GVyoS+SzuCbg9JMVdHAf/74wgMhXTNh8Z/0qOmi5KqMi1Wk8qo5KalbTocMk
dZUMUW+L5cN+Nx06vC+MUqIQeHz1macgXEPw1zkknCXwyk32MIxZS4fjqmuv
WztO4SefqlzU9eiQbLaMfobA++awdmS2Ph1UB9orRQQfpzbx65uN6EC2Nbn1
yESEXY7unT65ng5ylfomTIJP6/gClsQGOrQp/bf+N8H3ss6Q06sQHXar2hxe
+XMCKy/ouVMMdGAHbVKyODGBJfQsS3aZ0iE8x+L35TkTuD1ioUKwOR1m3Dmz
ATQhTlqe8rJ6Ox30Wi6ggZV8zONapIftoMP3Rc+N5qTwsE0RJ9XYhg5G7X/3
f5PgYUkHq9h0ezqsPKT9p/snB/sFTR4P3kcH89lRs6em49j++55lq4/SoXZ0
9/uSUz04685cepcHHS54SDe7i3Vj6cOvVO4cp8NJ7z+PY2I6cfGE5Px53nT4
vWuIbGzahnWY73taztBBQaQ4+PJkHZb1U3oUG0oHGc/b8Ws2v0EeqDjZNJwO
a3Y5Pamc9xF9kj6RMBFB8PPl6rw1R8rQ+XufQg5fIfT3fnrdY8kfaKDi9MEN
8XQYfLFhy/j5ZmSWQNvLuU7gzzeSrNneiu47f7XJuEH474Z9vs/ldrSXzUBK
t+ngTBsM1jbvQuWqP6nDd+lA+jq7jhnej5g9QUseptEhJ9qasejzAAp+tUxu
7wM65EoVKnPFh5Ce2aXpT4/poJj/0+CR+wiKX7iKd+4JUc/A90BS/Cga+tMw
pJNBh/35rw/IvR1DD710mlOe02GMcqwofWQczRg219q9pEN39sKIRb5stE88
6uv8V3TYbH/T/D8OGyncbs3zfUuHZXm6+7J7OeiEa/Sb5Tl0WCvPs4oi3u+V
Kw0y297RwXSSShUr56KLxXFJ2/PoIOV/yvfZDR4a/Ft8czKf0MtIPpIZ5yHH
KW7800I63KwI/Oi1jY9KSFpxu4sIPRratB9I5aNVBk5X5hYT+JbQmpYM8NFt
h7iINyUEnncrJdPXCpC4T3HIgU90cDzo63L8rAB5XeUGy32mQ8KNmxpy2QL0
57nm+YJyOiCDs7ELhgVoy5d9Z49VEvgNmNqq04Uoqzf2tMpXwh/3K4UR1kKk
KlHs/bmK8JNatVvMGSGKYHCP+1bT4c/AH1FEkhCNb9I8yvhOBzvpxI84R4ic
nfcd+v6DDi4fPb4XVglRxbnYA8G1dBDftP/WgTYhWnsb/7eyng7XVYvTMoeE
6G4OZ0/jLzr4+pgwu9hE/65duiuqgQ741rr1WnwhOjO211a/kQ79r84f+n+8
TTbWuquJDprBOS96+4j7wQpseb2FDsNzrdZKNwvR+60cM9RKhzuyBt8/VAoR
48jSzSNtRP7k7WTrV8T9I3TvxpQOOiwu8c2oTRAiYVqM8bYuOhyrly+RPy1E
bh+L9IXddPDbMT9C04q43zSxddN76ZDh9MCqiSZExhMa2g79hB/32p7ePy5A
j5fsXTFnkA6L8sPR3AIBUlgXo/lqiA6SCSVjXSEC1OvFpi0Yo0NTY6B5jYQA
2cVoUPLG6WB5J7xptoiPCjP2qBzl0KH1j9r7NH8+utH1Uf4Tnw66pd/G3Bt5
aEaMvcBHSPhB//MBySgeOk7TkFKfJM7TFfXrBnR4CPZFiwVO06Hl1nodnj8X
PT/7cXrZDB3evFecn67CRco3xyd+z9LBINuO1/6Wg0ZqHNlr5zIg4S73ckM3
GyWbsToHpRlgFSC54ePScTTPzbE1aQEDFPFTHOo6hk5dvNJkIceAVr+93418
R9HW/LHahwoMeJ2JvT0jhhFPp/CTkwoDGpp2SXQE9qMdlN3pXzUYsCM1qk5/
fxtK6tYu/k+TAalR4kuL9f+i7pdSzcNaDPB8Ok8fzWtGQVCoIL+SAavE38DL
27/RiyOsIAddBhykc7LeSVUhmdds+5aNxNhRl8SWfYcdz1V5eSFi/usfMtJx
RfihafrlGWDA25ayh0clyrDxr71FdDMGmEm0nlWKqcYeIrz8iBUDyBrjiWV6
f3CF2VWxUUcGbI9mKCfr9uDFCz0oF/cy4HeAjm6sZS92adhsoODEgJupFqaK
+/qw4Bjfc+1+Bni8/6qHfAaw5jXnhrOHGDA0987o3qMj+PReA878IwyQ+fA+
WcNxFBcxFOTuuBPzdwqv3do8hnfnfDItOMaA0VVWJfWh4zi8cUXW7EkGlBuf
dRTQOfjHQ4kv8T4MOJKiUaYdwsFqJ1q7GL4MuKe9JoT6l4OzZ66Tzc4yoGC8
h1l7hYtnKjz1fvkzIPBIfMDtZi62um5u436OAXz8vFd5GQ93sibDLwcxYCog
ynEml4e1R2rTyBcYsLSsXPGKiIfPv3+R/+wiA5p6TZ4mGPFx+cXIXyYhDDi1
1eGD3xk+Xrzt4Pi3UAbkjoq8FZ/zscvi9QtcwhmgY+4u2vmXj581K2qORTBA
Tv9uxn05ARY8HoFLUQwIid2Q7mYswJu9K/5bdIUBKZvX1EgcFGDRnwGLsmgG
WOeWHU2MEuCcLbJr/WMZoL/q2u3IZwLslaVNXXGV4IO92eZAhQBrku2k/l5j
QON4xP6+DgFuD/PlXrvOgM1aVMsKoQDfGU1sNb3BAOeR5Xvy5wux/b7cL/yb
DKjTrlx5f4kQy5Y15WTcYkDehgDFaqKflmv/S/sviQGL96AV9kwhvnhHPWZh
MgMurFoVp6QhxEYSpmdLUhiwaRnluDhDiDneh13P3CXwDyp68JQkxC8aI621
0hiQLTSl/lgoxEfMMg2b7jPgW9Sr7n+zAkx7VcWMe8gAv+tg5zwswH/Io3Lw
mAEme5m/TjUIcEK4wiQnnQFxO0p3unwU4O1ja7vTnzLgyo1yLJcmwBJOu7/v
zSTiXe9bwy4KcFGZf/6C5wygItHSTCcBDtBJTi96wYDduzSerFsrwLrJhfE+
WQyIDaIbeUgJ8OOTc442vCH4F/NIkHxK8NXEso/OZsD9A/dzTHz5WMXcYuPG
dwwo5ulHia3n42jVGMVHuYQfM8Se/CrmYbOIlzO78xnQLs8b7Qzm4X9j3wek
ChngniPTpmHMw6c+KxV7YwZMv9WXPJLOxSvWGD5nlDBgX3zy1rg9XNyVvO9W
fSkDEi+c/JwiycWOp+6dWF/OgLaJ63lyThy8gbKMLFlN8A8c9QN/x7Egwkoi
r4YBK360pg74jeNX4yfGPH8w4KPO6+z1cuOYWf7m8886wu8rznqYu45iKR+T
03ebGFBTEX2v480gLm3ev9+2hQExa5i6/h8GcKDFJcu5rQzIzwkrvZfbj0cp
n2nHOhjg5pk+Q8rqxfXlO6v0+gk8/JT+yzjcidPU3DS+8Rlw0WOcddSzFq9f
t1LbTciAfqWw+Hj9H7h+G89wYoIBZbsbxRb/q8JS/pHbNaYZsMsiISxH9hM+
9fPZ6SBxJhxc1m/weDgUQyS3eJU8E4wuRViSBT9QU2rh11IFJtz7SFULVapD
Z7Ij6vcuZoLO2Kk10jq/UEa7Sn/4Eib4pK7vqNrViBaZbJD/S2GCVdj4V8rT
dtQ5Fr4/bhkTKvM5NuldfShIcudR1gomLNv13O3Su36kTFXxyVvJhJdzwzva
wgeQlVVmeI82EyxObV9zefEQevu4+vlGfSYEnIaIJP4Isi649a7OgAmhJzMP
/Xo4inp/HsDHjJjACBaZHrMcQ6qz7NpEEybwZs3z/5mNo7B9yqKRzUzY+GFp
0253NqKdapsbvoUJ1nnnfplkslFuZIacqjkTVuwfmFs7wEbD2esZFpZM+FJ/
rlzNjYMiv85d2bKNCe3qtoX/pXAQveOb3untTNjVaHgn5QcH7Vp4wPLeTiY4
9igt4Btw0ajGMns9Wya0istxfxzmossm7P++2jEh6zNt5eIELmLa5x856MAE
8W3RIVsLuajQI+ykYBcTFl1+f+92Jxc5XrQ+F+vIhE/lVMk9Ujw0nrgkjLmX
CRKVlyMfr+Ch6Betsbn7mLD6t2wJaxsPaXx6emvnf0yYTHk0X/woD9Wsmnjc
4syEhyVNX6Iv8VDALcvs4y5McBE773PyFg8xxe6UTBxgwvNHjZQU4v1edWzg
e6Qrsb6tbnpdIQ+dqTNuVTpE1CdrMLXtKw/RNkYPPzzMhFHRtpj63zxU+aRJ
tMadGJdnsAzaeOi0wkppfJQJtasNfLK7eEjtfKDKjmNMUG6hmC/o46HPXVVL
m48zIeqnnLJULw9571DTO3aC0IOOSdRUOw+RPpwwFXox4YU3BMQ18VAp/aNt
xEkm/JY+0XHnOw+diJY7oOjDhLNpWa/PFvOQMm+/14PTBN/horm5r3gI788K
1DnDhMVZO4scknnIo2Lmykc/Ao+Zu73JRP2LdW2Stvsz4XxQ6KbFR3ioMDnt
SWMAE5qbe67+MOMhd4nxnKPnmfBM9rormc5DCt7wiR/IhPk/zl12n+SivIb4
n2HBTDi3vNCBX81Fbps72hZdZILTThTIu8tFss91R9MuMaHxG+fMb08ueq8U
Or06lNCX+M/8ufpcdPBCrUxhGBOu7H/oEj/JQdl2vlp/Ipmw9neGwdNzHORc
8Enf/TITmqZGtxSt5SDJpUpmvCtMKGqVqb5N6NFpIuegQhwTTBa98f+0jY0k
3OadvHeV0FueeNkO/jjKqtodvCqeCV4P3hkkp46jOWmCO5Y3mLDzmLJlKx5D
GeZGdZfuMOHy/CulYeeHkf2ryx0LU5iQmBfsz701hKZIjWOpqUyYPmH89/yr
QbRz+JxsXhoTDEwyondW9SN+QoE5O50JGSmXECrpRvemF+y6+JQJh055DdDf
diFLd2c3uUwmLKiNXboztROlGv+7sPwFEz4nNjb+c29Hpu2bcl3fMuH4Gj+1
3IQGFL+6dEVtERPqN1M+K9u8RhlG/0mHFhP+TnDKrnufiPAWXp9uKRPC8zcL
yr8l4tF9munXPzNhb1hRNndnAd4eGa1u943w95JMRfvin1iyzV7pRyMTThwa
y7BO7sLUwSHOxWYmlGoGu37u68Z6/PCfOn8Jvfb7Dy/S68WHFny4eq2dCf9l
IqZ1cT8uNqRI2/QRfP1ndzLl9Qj+Y5rTN9PPBM6U19+hjlE8tmNHedYgsd/S
HHgvNY5phy+GLRxlgu61lF5pHTYOjO/6V81jwtZXQ49lXLg4ISWoJVhA4O28
1kqjk4ufPVlSsHqCCYIPM54PDvPwn8KtAXFTTOAHJdsa7+fj8Yp2x43/CD2d
9KMv/sXH8+vO6Y/MMKG/qiWsfqsAGww851iLs2Bh4KDLSaK/7+CZ/ZyeywLe
Mm/VyRghPjz799WLeSz4cCDTvGhciG8sUfCSlWZBzRPZ2aPPJvAzeub2QhkW
GBhf0hwVm8SlK01XnJBlwbIt2a1b7Sbx+OYzfVXyLLh1kjp+s2cSS+2QKw9c
xAJO9u89/2mJsPreJ49XKrKg7J6zJemICBscQmHNSiwYuRrmZJwiwju9/7jG
KLPgV+b+XP9qET5yzgdMSCwQz7TKeDQpwkHhMupDZBYws7nP8mhT+Oa1R/+S
KSz44aA4Ig5T+HnyhhYrKgs67N7mXdo3hUvTf+WLaCxYvFUzaZPXFG567X3n
GZ0FyUqNuXOCpjC7YH6AE5MFEm9GDniGTmGpivuOMhosMKktLTUNn8L0WmP9
/KUs2B5cZGp3cQob/q1VPK7FgrNHP0WWn57CO/s9OeTlLPBVVQxpcp3C7lyJ
n19WsOBu83e/Assp7PLMrMZ5FQvcIx+Vv185hR1dw6vGVrMg/PnoaWcZ4ntS
WWWoDjE/u2kgqEOELb7PLV+iywJBjPuF3mwR3hS55VPGWgLfJz8aQ0IIvDaG
FZvoseDqniveH7aKsDav9GONPgu0D0hcxtIirPlcvMDVkAX79ufuiiifxDQ3
01yeEQvWGIXobAmaxMrk0HdR61nwOC63dqv2JJaMmvP65UYWpMkLjZMuTeCZ
jZtfAmJBwaX2xUtZE1jAu/SsDlhAt/Y1rMFC3OMmlj65hQWLYmJrbw4KcAsZ
Hsaas+B9Wm7ysQABrv9xMU19KwuWXo267D1HgMs2zd4xt2KBpeS5NP/5fPxY
debqdVsWJPX5qEh1cHDqz42xGvYsSI9duClqJwffvBx85YMDC+R5m08pfmDj
cMF02F9HFuRHSGXfuDSOD9dOBSzfz4KUdCWOVcsQdr5icrbQhQW5zcd+90cN
4l0Q6GtzkAWOj58YBqwewGZZIi+/Qyw4YHlc/LZXL9aInnQrOcaCzUd2WXqV
teOuzULrfWdZ0HrdX2WHexl2e8OhX7lG6F2nZFpnqAOdCHWYtrpO1JNG0Rz2
6UJ+DjkNsjdYYLz3qhSd340u8/2uxt9iAa0vW2bDSB/KMp6cun2XBV9/+bZo
3RtBuTJODfvSWPDw8tmJnH+jqKQ5/y3lAQueJLdbtS8fR/XBQcfSHrNAYeaR
tZs/G02WzP5+8pwFjRvfkY27uEj8xsG3Hi9ZwH04/7iELw/JHi6JW/GKBS+k
+8atZoh+KhlmlvWWBbqsu3rrJQVoWUOX+qkcwl8j/XcSwgRIN8NsSvc9C1zv
LT8zNClAZlaSb9/lsaD4xbm6pAYh2kk5GudfwAIr0byNwRsm0J7hCg/jj4Qe
toib2d6dQAc/LjObKmJBdnjm5DR/Ah2/ekX9YzELQjnbVJK2TaIzBwZFF0pZ
YGF0vP3SrUkUvGb7byhjwXCo5kxT8ySKnPPijXg5CwL6Zmdt1EQovlY2rqyC
BS0m3on1DiKU/MjLI/ILUW/Z40pqpAg9OlOzxbKKBf8W8yJSXovQC3MddZlq
FvwMOHkwrk6E3ivHi6pqCL4Tn1EaxkWouG/8V9wPgq8t+y1rJabQl1y7Nza1
LNg4PFQeoTiFaq+8jV1UzwKzDRuoGeQp1OKk6FH3iwXS8sstEkhTqHflmS2J
DSyoe93z3mDRFBqbrqftaST0o2366qHYFJqo1heRmlkw7+U7p+ZBERJPu/Wr
qYXwL/c/Gv2bCC04JXyd2kqcn4pvt9Q8ESGlzXtjXdpZkLGQveDreRGiLc47
Su9kwdTdu46qFiKk1UXe0tlF+KE58o67rAityTlPe9zDguD97rZfvkyi9RHN
k0f6WLDy47vf/iGTaIvjhl9aAyx4GyL/YOPaSWStdff1wCALpu8OSexpnkCO
E/9ing8T58+Tc2IZFyfQgS8uR71GCX4irnDjKBPotCedxmYT8/1d/6ptEaKg
DSGTb7kssI9c47S0WoAi5Drrz/BZ4Bk6k5ZiL0BJrx7FTEyw4N6FeapcKz56
eEniaL6IBa9WXV78uoiHntsdMQ2aZkGMlNqCvNU8lMMsp26aYcGc9c1ljklc
VMTVnJydJfy0/NuqvmkO+h/TX7P4
          "]]}, 
        Annotation[#, "Charting`Private`Tag$17105#1"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 10}, {-2.0283050991530533`, 1.6937638418201155`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(x\\), \\(CoM\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(y\\), \\(CoM\\)]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.736698422433514*^9, 3.7366984777564373`*^9}, 
   3.7366985699410973`*^9, 3.736698729082919*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{{3.736698422433514*^9, 3.7366984777564373`*^9}, 
   3.7366985699410973`*^9, 3.736698730136744*^9}],

Cell[BoxData[
 TemplateBox[{
  GraphicsBox[{{}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 10}, {0., 0.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox["\"\[Tau]\"", TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.736698422433514*^9, 3.7366984777564373`*^9}, 
   3.7366985699410973`*^9, 3.7366987312015057`*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{{3.736698422433514*^9, 3.7366984777564373`*^9}, 
   3.7366985699410973`*^9, 3.736698733080284*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Animation the numerical simulation", "Subchapter",
 CellChangeTimes->{{3.7365362223924417`*^9, 3.7365362292273417`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"xHIP", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "l"}], " ", 
     RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"g", "\[Rule]", "gs"}], ",", 
      RowBox[{"m", "\[Rule]", "ms"}], ",", 
      RowBox[{"J", "\[Rule]", "Js"}], ",", 
      RowBox[{"k", "\[Rule]", "ks"}], ",", 
      RowBox[{"lo", "\[Rule]", "los"}], ",", 
      RowBox[{"d", "\[Rule]", "ds"}], ",", 
      RowBox[{"r", "\[Rule]", "rs"}], ",", 
      RowBox[{"\[Tau]", "\[Rule]", "\[Tau]s"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yHIP", "=", 
   RowBox[{
    RowBox[{"l", " ", 
     RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"g", "\[Rule]", "gs"}], ",", 
      RowBox[{"m", "\[Rule]", "ms"}], ",", 
      RowBox[{"J", "\[Rule]", "Js"}], ",", 
      RowBox[{"k", "\[Rule]", "ks"}], ",", 
      RowBox[{"lo", "\[Rule]", "los"}], ",", 
      RowBox[{"d", "\[Rule]", "ds"}], ",", 
      RowBox[{"r", "\[Rule]", "rs"}], ",", 
      RowBox[{"\[Tau]", "\[Rule]", "\[Tau]s"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xCoM", "=", 
   RowBox[{"x", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"g", "\[Rule]", "gs"}], ",", 
      RowBox[{"m", "\[Rule]", "ms"}], ",", 
      RowBox[{"J", "\[Rule]", "Js"}], ",", 
      RowBox[{"k", "\[Rule]", "ks"}], ",", 
      RowBox[{"lo", "\[Rule]", "los"}], ",", 
      RowBox[{"d", "\[Rule]", "ds"}], ",", 
      RowBox[{"r", "\[Rule]", "rs"}], ",", 
      RowBox[{"\[Tau]", "\[Rule]", "\[Tau]s"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yCoM", "=", 
   RowBox[{"y", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"g", "\[Rule]", "gs"}], ",", 
      RowBox[{"m", "\[Rule]", "ms"}], ",", 
      RowBox[{"J", "\[Rule]", "Js"}], ",", 
      RowBox[{"k", "\[Rule]", "ks"}], ",", 
      RowBox[{"lo", "\[Rule]", "los"}], ",", 
      RowBox[{"d", "\[Rule]", "ds"}], ",", 
      RowBox[{"r", "\[Rule]", "rs"}], ",", 
      RowBox[{"\[Tau]", "\[Rule]", "\[Tau]s"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xvpp", "=", 
   RowBox[{"xVPP", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"g", "\[Rule]", "gs"}], ",", 
      RowBox[{"m", "\[Rule]", "ms"}], ",", 
      RowBox[{"J", "\[Rule]", "Js"}], ",", 
      RowBox[{"k", "\[Rule]", "ks"}], ",", 
      RowBox[{"lo", "\[Rule]", "los"}], ",", 
      RowBox[{"d", "\[Rule]", "ds"}], ",", 
      RowBox[{"r", "\[Rule]", "rs"}], ",", 
      RowBox[{"\[Tau]", "\[Rule]", "\[Tau]s"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yvpp", "=", 
   RowBox[{"yVPP", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"g", "\[Rule]", "gs"}], ",", 
      RowBox[{"m", "\[Rule]", "ms"}], ",", 
      RowBox[{"J", "\[Rule]", "Js"}], ",", 
      RowBox[{"k", "\[Rule]", "ks"}], ",", 
      RowBox[{"lo", "\[Rule]", "los"}], ",", 
      RowBox[{"d", "\[Rule]", "ds"}], ",", 
      RowBox[{"r", "\[Rule]", "rs"}], ",", 
      RowBox[{"\[Tau]", "\[Rule]", "\[Tau]s"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"anim", "=", 
  RowBox[{"Animate", "[", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Black", ",", 
         RowBox[{"PointSize", "[", ".05", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], "}"}], "]"}]}], "}"}], "]"}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"First", "[", 
           RowBox[{
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], "/.", "sol"}], "]"}], "/.", 
            RowBox[{"t", "\[Rule]", "T"}]}], "]"}], ",", 
          RowBox[{"First", "[", 
           RowBox[{
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"xHIP", ",", "yHIP"}], "}"}], "/.", "sol"}], "]"}], "/.", 
            RowBox[{"t", "\[Rule]", "T"}]}], "]"}]}], "}"}], "]"}], "]"}], 
      ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Green", ",", 
         RowBox[{"PointSize", "[", ".05", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"xHIP", ",", "yHIP"}], "}"}], "/.", "sol"}], "]"}], "/.", 
           RowBox[{"t", "\[Rule]", "T"}]}], "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"First", "[", 
           RowBox[{
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"xHIP", ",", "yHIP"}], "}"}], "/.", "sol"}], "]"}], "/.", 
            RowBox[{"t", "\[Rule]", "T"}]}], "]"}], ",", 
          RowBox[{"First", "[", 
           RowBox[{
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"xvpp", ",", "yvpp"}], "}"}], "/.", "sol"}], "]"}], "/.", 
            RowBox[{"t", "\[Rule]", "T"}]}], "]"}]}], "}"}], "]"}], "]"}], 
      ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", 
         RowBox[{"PointSize", "[", ".05", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"xvpp", ",", "yvpp"}], "}"}], "/.", "sol"}], "]"}], "/.", 
           RowBox[{"t", "\[Rule]", "T"}]}], "]"}]}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"First", "[", 
           RowBox[{
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"xvpp", ",", "yvpp"}], "}"}], "/.", "sol"}], "]"}], "/.", 
            RowBox[{"t", "\[Rule]", "T"}]}], "]"}], ",", 
          RowBox[{"First", "[", 
           RowBox[{
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"xCoM", ",", "yCoM"}], "}"}], "/.", "sol"}], "]"}], "/.", 
            RowBox[{"t", "\[Rule]", "T"}]}], "]"}]}], "}"}], "]"}], "]"}], 
      ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Red", ",", 
         RowBox[{"PointSize", "[", ".05", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"xCoM", ",", "yCoM"}], "}"}], "/.", "sol"}], "]"}], "/.", 
           RowBox[{"t", "\[Rule]", "T"}]}], "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"T", ",", "0", ",", "10"}], "}"}], ",", 
    RowBox[{"AnimationDirection", "\[Rule]", "Forward"}], ",", 
    RowBox[{"AnimationRate", "\[Rule]", "1"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.73653623032887*^9, 3.736536272286948*^9}, {
   3.736536330656796*^9, 3.736536359610509*^9}, {3.736536450894546*^9, 
   3.736536451444838*^9}, {3.7365365576016493`*^9, 3.736536558114998*^9}, {
   3.7365365956757927`*^9, 3.7365367492705317`*^9}, {3.736536810800988*^9, 
   3.736536822036495*^9}, {3.736536859240265*^9, 3.736536861260508*^9}, 
   3.736536892147112*^9, {3.736536923777279*^9, 3.736536939047875*^9}, {
   3.73653703409367*^9, 3.736537068300353*^9}, {3.736537124058489*^9, 
   3.7365371307139463`*^9}, {3.7365372768427343`*^9, 3.736537294903573*^9}, {
   3.736537333747731*^9, 3.736537431985968*^9}, {3.7365375235028973`*^9, 
   3.736537634975486*^9}, {3.736537699787561*^9, 3.7365377185161*^9}, {
   3.736537789192376*^9, 3.736537823743021*^9}, {3.736537990350655*^9, 
   3.736537997341423*^9}, {3.736538125838221*^9, 3.736538150421444*^9}, {
   3.736538255420768*^9, 3.736538260833795*^9}, {3.736538305348548*^9, 
   3.736538323074205*^9}, {3.736538439944133*^9, 3.7365384575515203`*^9}, {
   3.736538641254231*^9, 3.736538647081341*^9}, {3.736538700820709*^9, 
   3.7365387243688383`*^9}, {3.736538771650137*^9, 3.736538775095058*^9}, {
   3.736538989649583*^9, 3.736539027847378*^9}, {3.7365391910822783`*^9, 
   3.736539203603647*^9}, {3.736539238870305*^9, 3.736539279333577*^9}, {
   3.736539674248036*^9, 3.736539779493404*^9}, {3.7365400799474373`*^9, 
   3.7365400806714573`*^9}, {3.736540314154214*^9, 3.736540339742833*^9}, 
   3.736618779725316*^9, {3.7366188572205973`*^9, 3.736618859636982*^9}, {
   3.736618959498818*^9, 3.736619140038974*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`T$$ = 5.550781726837158, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`T$$], 0, 10}}, Typeset`size$$ = {360., {177., 183.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`T$16958$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`T$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`T$$, $CellContext`T$16958$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        Graphics[{Black, 
          PointSize[0.05], 
          Point[{{0, 0}}]}], 
        Graphics[
         Line[{
           First[
            ReplaceAll[
             Evaluate[
              
              ReplaceAll[{0, 
               0}, $CellContext`sol]], $CellContext`t -> $CellContext`T$$]], 
           First[
            ReplaceAll[
             Evaluate[
              
              ReplaceAll[{$CellContext`xHIP, $CellContext`yHIP}, \
$CellContext`sol]], $CellContext`t -> $CellContext`T$$]]}]], 
        Graphics[{Green, 
          PointSize[0.05], 
          Point[
           ReplaceAll[
            Evaluate[
             
             ReplaceAll[{$CellContext`xHIP, $CellContext`yHIP}, \
$CellContext`sol]], $CellContext`t -> $CellContext`T$$]]}], 
        Graphics[
         Line[{
           First[
            ReplaceAll[
             Evaluate[
              
              ReplaceAll[{$CellContext`xHIP, $CellContext`yHIP}, \
$CellContext`sol]], $CellContext`t -> $CellContext`T$$]], 
           First[
            ReplaceAll[
             Evaluate[
              
              ReplaceAll[{$CellContext`xvpp, $CellContext`yvpp}, \
$CellContext`sol]], $CellContext`t -> $CellContext`T$$]]}]], 
        Graphics[{Blue, 
          PointSize[0.05], 
          Point[
           ReplaceAll[
            Evaluate[
             
             ReplaceAll[{$CellContext`xvpp, $CellContext`yvpp}, \
$CellContext`sol]], $CellContext`t -> $CellContext`T$$]]}], 
        Graphics[
         Line[{
           First[
            ReplaceAll[
             Evaluate[
              
              ReplaceAll[{$CellContext`xvpp, $CellContext`yvpp}, \
$CellContext`sol]], $CellContext`t -> $CellContext`T$$]], 
           First[
            ReplaceAll[
             Evaluate[
              
              ReplaceAll[{$CellContext`xCoM, $CellContext`yCoM}, \
$CellContext`sol]], $CellContext`t -> $CellContext`T$$]]}]], 
        Graphics[{Red, 
          PointSize[0.05], 
          Point[
           ReplaceAll[
            Evaluate[
             
             ReplaceAll[{$CellContext`xCoM, $CellContext`yCoM}, \
$CellContext`sol]], $CellContext`t -> $CellContext`T$$]]}], 
        PlotRange -> {{-3, 3}, {-3, 3}}], 
      "Specifications" :> {{$CellContext`T$$, 0, 10, AnimationDirection -> 
         Forward, AnimationRate -> 1, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{407., {212., 219.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.736537413467923*^9, 3.736537427116128*^9}, 
   3.736537533668057*^9, 3.736537569133836*^9, 3.736537604552292*^9, 
   3.736537637599992*^9, {3.736538136383033*^9, 3.736538152035967*^9}, 
   3.736538327635281*^9, 3.736538461783482*^9, {3.736538648154284*^9, 
   3.736538656813223*^9}, {3.736538706605998*^9, 3.7365387251024847`*^9}, 
   3.7365387758033447`*^9, 3.7365390337997923`*^9, 3.736539140287944*^9, 
   3.7365392050220118`*^9, 3.736539282092462*^9, {3.7365397044452*^9, 
   3.7365397471892557`*^9}, {3.736539782362433*^9, 3.736539806544573*^9}, 
   3.73653999032653*^9, 3.7365400816317368`*^9, {3.736540333704829*^9, 
   3.736540340424095*^9}, 3.7365408844053793`*^9, 3.736541088710452*^9, 
   3.736541550159464*^9, 3.736545102075448*^9, 3.736595105441227*^9, 
   3.736596261122429*^9, 3.736599384385043*^9, 3.736618500200612*^9, 
   3.736618759912137*^9, 3.736619149638101*^9, 3.736698603859309*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Export the animation", "Subchapter",
 CellChangeTimes->{{3.736540091307068*^9, 3.7365400951954107`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Documents/Research/Hop3r/Mathematica/videos/VPP.gif\>\"", ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"Graphics", "[", 
         RowBox[{"{", 
          RowBox[{"Black", ",", 
           RowBox[{"PointSize", "[", ".05", "]"}], ",", 
           RowBox[{"Point", "[", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], "}"}], "]"}]}], "}"}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Graphics", "[", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"First", "[", 
             RowBox[{
              RowBox[{"Evaluate", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], "/.", "sol"}], "]"}], "/.", 
              RowBox[{"t", "\[Rule]", "T"}]}], "]"}], ",", 
            RowBox[{"First", "[", 
             RowBox[{
              RowBox[{"Evaluate", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"xHIP", ",", "yHIP"}], "}"}], "/.", "sol"}], "]"}], "/.", 
              RowBox[{"t", "\[Rule]", "T"}]}], "]"}]}], "}"}], "]"}], "]"}], 
        ",", 
        RowBox[{"Graphics", "[", 
         RowBox[{"{", 
          RowBox[{"Green", ",", 
           RowBox[{"PointSize", "[", ".05", "]"}], ",", 
           RowBox[{"Point", "[", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"xHIP", ",", "yHIP"}], "}"}], "/.", "sol"}], "]"}], "/.", 
             RowBox[{"t", "\[Rule]", "T"}]}], "]"}]}], "}"}], "]"}], ",", 
        RowBox[{"Graphics", "[", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"First", "[", 
             RowBox[{
              RowBox[{"Evaluate", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"xHIP", ",", "yHIP"}], "}"}], "/.", "sol"}], "]"}], "/.", 
              RowBox[{"t", "\[Rule]", "T"}]}], "]"}], ",", 
            RowBox[{"First", "[", 
             RowBox[{
              RowBox[{"Evaluate", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"xVPP", ",", "yVPP"}], "}"}], "/.", "sol"}], "]"}], "/.", 
              RowBox[{"t", "\[Rule]", "T"}]}], "]"}]}], "}"}], "]"}], "]"}], 
        ",", 
        RowBox[{"Graphics", "[", 
         RowBox[{"{", 
          RowBox[{"Blue", ",", 
           RowBox[{"PointSize", "[", ".05", "]"}], ",", 
           RowBox[{"Point", "[", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"xVPP", ",", "yVPP"}], "}"}], "/.", "sol"}], "]"}], "/.", 
             RowBox[{"t", "\[Rule]", "T"}]}], "]"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Graphics", "[", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"First", "[", 
             RowBox[{
              RowBox[{"Evaluate", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"xVPP", ",", "yVPP"}], "}"}], "/.", "sol"}], "]"}], "/.", 
              RowBox[{"t", "\[Rule]", "T"}]}], "]"}], ",", 
            RowBox[{"First", "[", 
             RowBox[{
              RowBox[{"Evaluate", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"x", ",", "y"}], "}"}], "/.", "sol"}], "]"}], "/.", 
              RowBox[{"t", "\[Rule]", "T"}]}], "]"}]}], "}"}], "]"}], "]"}], 
        ",", 
        RowBox[{"Graphics", "[", 
         RowBox[{"{", 
          RowBox[{"Red", ",", 
           RowBox[{"PointSize", "[", ".05", "]"}], ",", 
           RowBox[{"Point", "[", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"x", ",", "y"}], "}"}], "/.", "sol"}], "]"}], "/.", 
             RowBox[{"t", "\[Rule]", "T"}]}], "]"}]}], "}"}], "]"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"T", ",", "0", ",", "10", ",", "0.25"}], "}"}]}], "]"}]}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.736540096955653*^9, 3.7365401332374*^9}, {
   3.736540193895097*^9, 3.736540202901218*^9}, 3.736540440785597*^9, {
   3.736540541019907*^9, 3.736540547065185*^9}, {3.7365405918152933`*^9, 
   3.7365406606857243`*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1855, 1056},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.0 for Linux x86 (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 138, 3, 34, "Input"],
Cell[CellGroupData[{
Cell[721, 27, 174, 4, 66, "Chapter"],
Cell[898, 33, 181, 2, 64, "Subchapter"],
Cell[CellGroupData[{
Cell[1104, 39, 168, 2, 48, "Subchapter"],
Cell[1275, 43, 3802, 114, 409, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5114, 162, 155, 2, 64, "Subchapter"],
Cell[5272, 166, 1155, 31, 170, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6464, 202, 126, 2, 64, "Subchapter"],
Cell[6593, 206, 1537, 43, 120, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8167, 254, 112, 1, 64, "Subchapter"],
Cell[8282, 257, 7198, 201, 262, "Input"],
Cell[CellGroupData[{
Cell[15505, 462, 3775, 85, 151, "Input"],
Cell[CellGroupData[{
Cell[19305, 551, 1553, 22, 24, "Print"],
Cell[20861, 575, 3335, 67, 52, "Print"],
Cell[24199, 644, 2150, 38, 41, "Print"],
Cell[26352, 684, 3947, 79, 47, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[30360, 770, 126, 1, 64, "Subchapter"],
Cell[CellGroupData[{
Cell[30511, 775, 105, 1, 45, "Subsection"],
Cell[CellGroupData[{
Cell[30641, 780, 2176, 55, 126, "Input"],
Cell[CellGroupData[{
Cell[32842, 839, 1714, 44, 41, "Print"],
Cell[34559, 885, 1750, 45, 41, "Print"],
Cell[36312, 932, 1752, 45, 41, "Print"],
Cell[38067, 979, 1790, 46, 41, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[39906, 1031, 46597, 1139, 2651, "Input"],
Cell[86506, 2172, 861, 13, 32, "Output"],
Cell[87370, 2187, 859, 13, 32, "Output"],
Cell[88232, 2202, 861, 13, 32, "Output"],
Cell[CellGroupData[{
Cell[89118, 2219, 3645, 79, 152, "Print"],
Cell[92766, 2300, 2439, 54, 135, "Print"],
Cell[95208, 2356, 1266, 18, 24, "Print"],
Cell[96477, 2376, 1550, 28, 49, "Print"],
Cell[98030, 2406, 1579, 30, 49, "Print"],
Cell[99612, 2438, 3739, 82, 71, "Print"],
Cell[103354, 2522, 3672, 81, 71, "Print"],
Cell[107029, 2605, 3823, 85, 71, "Print"],
Cell[110855, 2692, 3753, 84, 71, "Print"],
Cell[114611, 2778, 1311, 19, 24, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[115995, 2805, 169, 2, 64, "Subchapter"],
Cell[116167, 2809, 220, 4, 31, "Text"],
Cell[CellGroupData[{
Cell[116412, 2817, 2040, 59, 147, "Input"],
Cell[118455, 2878, 1489, 48, 64, "Output"],
Cell[119947, 2928, 3495, 99, 96, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123479, 3032, 97, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[123601, 3037, 119, 1, 45, "Subsection"],
Cell[CellGroupData[{
Cell[123745, 3042, 2349, 59, 217, "Input"],
Cell[CellGroupData[{
Cell[126119, 3105, 2795, 67, 152, "Print"],
Cell[128917, 3174, 1592, 42, 135, "Print"],
Cell[130512, 3218, 11212, 274, 189, "Print"],
Cell[141727, 3494, 616, 11, 24, "Print"],
Cell[142346, 3507, 618, 11, 24, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[143025, 3525, 228, 5, 45, "Subsection"],
Cell[CellGroupData[{
Cell[143278, 3534, 5365, 150, 246, "Input"],
Cell[CellGroupData[{
Cell[148668, 3688, 2462, 61, 106, "Print"],
Cell[151133, 3751, 1487, 39, 99, "Print"],
Cell[152623, 3792, 5426, 135, 125, "Print"],
Cell[158052, 3929, 1007, 25, 49, "Print"],
Cell[159062, 3956, 532, 10, 28, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[159655, 3973, 146, 1, 45, "Subsection"],
Cell[159804, 3976, 1283, 21, 111, "Text"],
Cell[CellGroupData[{
Cell[161112, 4001, 8703, 222, 753, "Input"],
Cell[CellGroupData[{
Cell[169840, 4227, 2531, 54, 47, "Print"],
Cell[172374, 4283, 1170, 17, 24, "Print"],
Cell[173547, 4302, 17100, 399, 323, "Print"],
Cell[190650, 4703, 1836, 36, 26, "Print"],
Cell[192489, 4741, 1195, 17, 24, "Print"],
Cell[193687, 4760, 2122, 45, 50, "Print"],
Cell[195812, 4807, 2534, 60, 56, "Print"],
Cell[198349, 4869, 1666, 32, 26, "Print"],
Cell[200018, 4903, 2885, 66, 51, "Print"]
}, Open  ]],
Cell[202918, 4972, 1370, 41, 38, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[204361, 5021, 124, 1, 64, "Subchapter"],
Cell[204488, 5024, 127, 1, 31, "Text"],
Cell[CellGroupData[{
Cell[204640, 5029, 1708, 42, 126, "Input"],
Cell[206351, 5073, 4072, 89, 109, "Output"],
Cell[210426, 5164, 610, 15, 26, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[211085, 5185, 140, 1, 64, "Subchapter"],
Cell[211228, 5188, 118, 1, 31, "Text"],
Cell[CellGroupData[{
Cell[211371, 5193, 2762, 79, 126, "Input"],
Cell[214136, 5274, 111994, 1854, 211, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[326179, 7134, 181, 2, 64, "Subchapter"],
Cell[326363, 7138, 118, 1, 31, "Text"],
Cell[CellGroupData[{
Cell[326506, 7143, 9421, 248, 534, "Input"],
Cell[335930, 7393, 651, 17, 36, "Output"],
Cell[336584, 7412, 142723, 2410, 227, "Output"],
Cell[479310, 9824, 83396, 1407, 232, "Output"],
Cell[562709, 11233, 153, 2, 32, "Output"],
Cell[562865, 11237, 2669, 56, 227, "Output"],
Cell[565537, 11295, 153, 2, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[565739, 11303, 126, 1, 64, "Subchapter"],
Cell[CellGroupData[{
Cell[565890, 11308, 9046, 229, 264, "Input"],
Cell[574939, 11539, 5050, 121, 448, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[580038, 11666, 110, 1, 64, "Subchapter"],
Cell[580151, 11669, 4792, 123, 126, "Input"]
}, Open  ]]
}, Open  ]]
}
]
*)

